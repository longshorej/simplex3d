/*
 * Simplex3D, Math tests
 * Copyright (C) 2009 Simplex3D team
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package test.math.floatm

import org.scalatest._

import simplex3d.math.intm._


/**
 * @author Aleksey Nikiforov (lex)
 */
class Vec4iSwizzleTest extends FunSuite {

    test("Swizzled read") {
        val x = 5
        val y = 6
        val z = 7
        val w = 8

        val u = ConstVec4i(x, y, z, w)

        expect(x) { u.x }
        expect(y) { u.y }
        expect(z) { u.z }
        expect(w) { u.w }

        expect(x) { u.r }
        expect(y) { u.g }
        expect(z) { u.b }
        expect(w) { u.a }

        assert(Vec2i(x, x) == u.xx)
        assert(Vec2i(x, y) == u.xy)
        assert(Vec2i(x, z) == u.xz)
        assert(Vec2i(x, w) == u.xw)
        assert(Vec2i(y, x) == u.yx)
        assert(Vec2i(y, y) == u.yy)
        assert(Vec2i(y, z) == u.yz)
        assert(Vec2i(y, w) == u.yw)
        assert(Vec2i(z, x) == u.zx)
        assert(Vec2i(z, y) == u.zy)
        assert(Vec2i(z, z) == u.zz)
        assert(Vec2i(z, w) == u.zw)
        assert(Vec2i(w, x) == u.wx)
        assert(Vec2i(w, y) == u.wy)
        assert(Vec2i(w, z) == u.wz)
        assert(Vec2i(w, w) == u.ww)
        assert(Vec3i(x, x, x) == u.xxx)
        assert(Vec3i(x, x, y) == u.xxy)
        assert(Vec3i(x, x, z) == u.xxz)
        assert(Vec3i(x, x, w) == u.xxw)
        assert(Vec3i(x, y, x) == u.xyx)
        assert(Vec3i(x, y, y) == u.xyy)
        assert(Vec3i(x, y, z) == u.xyz)
        assert(Vec3i(x, y, w) == u.xyw)
        assert(Vec3i(x, z, x) == u.xzx)
        assert(Vec3i(x, z, y) == u.xzy)
        assert(Vec3i(x, z, z) == u.xzz)
        assert(Vec3i(x, z, w) == u.xzw)
        assert(Vec3i(x, w, x) == u.xwx)
        assert(Vec3i(x, w, y) == u.xwy)
        assert(Vec3i(x, w, z) == u.xwz)
        assert(Vec3i(x, w, w) == u.xww)
        assert(Vec3i(y, x, x) == u.yxx)
        assert(Vec3i(y, x, y) == u.yxy)
        assert(Vec3i(y, x, z) == u.yxz)
        assert(Vec3i(y, x, w) == u.yxw)
        assert(Vec3i(y, y, x) == u.yyx)
        assert(Vec3i(y, y, y) == u.yyy)
        assert(Vec3i(y, y, z) == u.yyz)
        assert(Vec3i(y, y, w) == u.yyw)
        assert(Vec3i(y, z, x) == u.yzx)
        assert(Vec3i(y, z, y) == u.yzy)
        assert(Vec3i(y, z, z) == u.yzz)
        assert(Vec3i(y, z, w) == u.yzw)
        assert(Vec3i(y, w, x) == u.ywx)
        assert(Vec3i(y, w, y) == u.ywy)
        assert(Vec3i(y, w, z) == u.ywz)
        assert(Vec3i(y, w, w) == u.yww)
        assert(Vec3i(z, x, x) == u.zxx)
        assert(Vec3i(z, x, y) == u.zxy)
        assert(Vec3i(z, x, z) == u.zxz)
        assert(Vec3i(z, x, w) == u.zxw)
        assert(Vec3i(z, y, x) == u.zyx)
        assert(Vec3i(z, y, y) == u.zyy)
        assert(Vec3i(z, y, z) == u.zyz)
        assert(Vec3i(z, y, w) == u.zyw)
        assert(Vec3i(z, z, x) == u.zzx)
        assert(Vec3i(z, z, y) == u.zzy)
        assert(Vec3i(z, z, z) == u.zzz)
        assert(Vec3i(z, z, w) == u.zzw)
        assert(Vec3i(z, w, x) == u.zwx)
        assert(Vec3i(z, w, y) == u.zwy)
        assert(Vec3i(z, w, z) == u.zwz)
        assert(Vec3i(z, w, w) == u.zww)
        assert(Vec3i(w, x, x) == u.wxx)
        assert(Vec3i(w, x, y) == u.wxy)
        assert(Vec3i(w, x, z) == u.wxz)
        assert(Vec3i(w, x, w) == u.wxw)
        assert(Vec3i(w, y, x) == u.wyx)
        assert(Vec3i(w, y, y) == u.wyy)
        assert(Vec3i(w, y, z) == u.wyz)
        assert(Vec3i(w, y, w) == u.wyw)
        assert(Vec3i(w, z, x) == u.wzx)
        assert(Vec3i(w, z, y) == u.wzy)
        assert(Vec3i(w, z, z) == u.wzz)
        assert(Vec3i(w, z, w) == u.wzw)
        assert(Vec3i(w, w, x) == u.wwx)
        assert(Vec3i(w, w, y) == u.wwy)
        assert(Vec3i(w, w, z) == u.wwz)
        assert(Vec3i(w, w, w) == u.www)
        assert(Vec4i(x, x, x, x) == u.xxxx)
        assert(Vec4i(x, x, x, y) == u.xxxy)
        assert(Vec4i(x, x, x, z) == u.xxxz)
        assert(Vec4i(x, x, x, w) == u.xxxw)
        assert(Vec4i(x, x, y, x) == u.xxyx)
        assert(Vec4i(x, x, y, y) == u.xxyy)
        assert(Vec4i(x, x, y, z) == u.xxyz)
        assert(Vec4i(x, x, y, w) == u.xxyw)
        assert(Vec4i(x, x, z, x) == u.xxzx)
        assert(Vec4i(x, x, z, y) == u.xxzy)
        assert(Vec4i(x, x, z, z) == u.xxzz)
        assert(Vec4i(x, x, z, w) == u.xxzw)
        assert(Vec4i(x, x, w, x) == u.xxwx)
        assert(Vec4i(x, x, w, y) == u.xxwy)
        assert(Vec4i(x, x, w, z) == u.xxwz)
        assert(Vec4i(x, x, w, w) == u.xxww)
        assert(Vec4i(x, y, x, x) == u.xyxx)
        assert(Vec4i(x, y, x, y) == u.xyxy)
        assert(Vec4i(x, y, x, z) == u.xyxz)
        assert(Vec4i(x, y, x, w) == u.xyxw)
        assert(Vec4i(x, y, y, x) == u.xyyx)
        assert(Vec4i(x, y, y, y) == u.xyyy)
        assert(Vec4i(x, y, y, z) == u.xyyz)
        assert(Vec4i(x, y, y, w) == u.xyyw)
        assert(Vec4i(x, y, z, x) == u.xyzx)
        assert(Vec4i(x, y, z, y) == u.xyzy)
        assert(Vec4i(x, y, z, z) == u.xyzz)
        assert(Vec4i(x, y, z, w) == u.xyzw)
        assert(Vec4i(x, y, w, x) == u.xywx)
        assert(Vec4i(x, y, w, y) == u.xywy)
        assert(Vec4i(x, y, w, z) == u.xywz)
        assert(Vec4i(x, y, w, w) == u.xyww)
        assert(Vec4i(x, z, x, x) == u.xzxx)
        assert(Vec4i(x, z, x, y) == u.xzxy)
        assert(Vec4i(x, z, x, z) == u.xzxz)
        assert(Vec4i(x, z, x, w) == u.xzxw)
        assert(Vec4i(x, z, y, x) == u.xzyx)
        assert(Vec4i(x, z, y, y) == u.xzyy)
        assert(Vec4i(x, z, y, z) == u.xzyz)
        assert(Vec4i(x, z, y, w) == u.xzyw)
        assert(Vec4i(x, z, z, x) == u.xzzx)
        assert(Vec4i(x, z, z, y) == u.xzzy)
        assert(Vec4i(x, z, z, z) == u.xzzz)
        assert(Vec4i(x, z, z, w) == u.xzzw)
        assert(Vec4i(x, z, w, x) == u.xzwx)
        assert(Vec4i(x, z, w, y) == u.xzwy)
        assert(Vec4i(x, z, w, z) == u.xzwz)
        assert(Vec4i(x, z, w, w) == u.xzww)
        assert(Vec4i(x, w, x, x) == u.xwxx)
        assert(Vec4i(x, w, x, y) == u.xwxy)
        assert(Vec4i(x, w, x, z) == u.xwxz)
        assert(Vec4i(x, w, x, w) == u.xwxw)
        assert(Vec4i(x, w, y, x) == u.xwyx)
        assert(Vec4i(x, w, y, y) == u.xwyy)
        assert(Vec4i(x, w, y, z) == u.xwyz)
        assert(Vec4i(x, w, y, w) == u.xwyw)
        assert(Vec4i(x, w, z, x) == u.xwzx)
        assert(Vec4i(x, w, z, y) == u.xwzy)
        assert(Vec4i(x, w, z, z) == u.xwzz)
        assert(Vec4i(x, w, z, w) == u.xwzw)
        assert(Vec4i(x, w, w, x) == u.xwwx)
        assert(Vec4i(x, w, w, y) == u.xwwy)
        assert(Vec4i(x, w, w, z) == u.xwwz)
        assert(Vec4i(x, w, w, w) == u.xwww)
        assert(Vec4i(y, x, x, x) == u.yxxx)
        assert(Vec4i(y, x, x, y) == u.yxxy)
        assert(Vec4i(y, x, x, z) == u.yxxz)
        assert(Vec4i(y, x, x, w) == u.yxxw)
        assert(Vec4i(y, x, y, x) == u.yxyx)
        assert(Vec4i(y, x, y, y) == u.yxyy)
        assert(Vec4i(y, x, y, z) == u.yxyz)
        assert(Vec4i(y, x, y, w) == u.yxyw)
        assert(Vec4i(y, x, z, x) == u.yxzx)
        assert(Vec4i(y, x, z, y) == u.yxzy)
        assert(Vec4i(y, x, z, z) == u.yxzz)
        assert(Vec4i(y, x, z, w) == u.yxzw)
        assert(Vec4i(y, x, w, x) == u.yxwx)
        assert(Vec4i(y, x, w, y) == u.yxwy)
        assert(Vec4i(y, x, w, z) == u.yxwz)
        assert(Vec4i(y, x, w, w) == u.yxww)
        assert(Vec4i(y, y, x, x) == u.yyxx)
        assert(Vec4i(y, y, x, y) == u.yyxy)
        assert(Vec4i(y, y, x, z) == u.yyxz)
        assert(Vec4i(y, y, x, w) == u.yyxw)
        assert(Vec4i(y, y, y, x) == u.yyyx)
        assert(Vec4i(y, y, y, y) == u.yyyy)
        assert(Vec4i(y, y, y, z) == u.yyyz)
        assert(Vec4i(y, y, y, w) == u.yyyw)
        assert(Vec4i(y, y, z, x) == u.yyzx)
        assert(Vec4i(y, y, z, y) == u.yyzy)
        assert(Vec4i(y, y, z, z) == u.yyzz)
        assert(Vec4i(y, y, z, w) == u.yyzw)
        assert(Vec4i(y, y, w, x) == u.yywx)
        assert(Vec4i(y, y, w, y) == u.yywy)
        assert(Vec4i(y, y, w, z) == u.yywz)
        assert(Vec4i(y, y, w, w) == u.yyww)
        assert(Vec4i(y, z, x, x) == u.yzxx)
        assert(Vec4i(y, z, x, y) == u.yzxy)
        assert(Vec4i(y, z, x, z) == u.yzxz)
        assert(Vec4i(y, z, x, w) == u.yzxw)
        assert(Vec4i(y, z, y, x) == u.yzyx)
        assert(Vec4i(y, z, y, y) == u.yzyy)
        assert(Vec4i(y, z, y, z) == u.yzyz)
        assert(Vec4i(y, z, y, w) == u.yzyw)
        assert(Vec4i(y, z, z, x) == u.yzzx)
        assert(Vec4i(y, z, z, y) == u.yzzy)
        assert(Vec4i(y, z, z, z) == u.yzzz)
        assert(Vec4i(y, z, z, w) == u.yzzw)
        assert(Vec4i(y, z, w, x) == u.yzwx)
        assert(Vec4i(y, z, w, y) == u.yzwy)
        assert(Vec4i(y, z, w, z) == u.yzwz)
        assert(Vec4i(y, z, w, w) == u.yzww)
        assert(Vec4i(y, w, x, x) == u.ywxx)
        assert(Vec4i(y, w, x, y) == u.ywxy)
        assert(Vec4i(y, w, x, z) == u.ywxz)
        assert(Vec4i(y, w, x, w) == u.ywxw)
        assert(Vec4i(y, w, y, x) == u.ywyx)
        assert(Vec4i(y, w, y, y) == u.ywyy)
        assert(Vec4i(y, w, y, z) == u.ywyz)
        assert(Vec4i(y, w, y, w) == u.ywyw)
        assert(Vec4i(y, w, z, x) == u.ywzx)
        assert(Vec4i(y, w, z, y) == u.ywzy)
        assert(Vec4i(y, w, z, z) == u.ywzz)
        assert(Vec4i(y, w, z, w) == u.ywzw)
        assert(Vec4i(y, w, w, x) == u.ywwx)
        assert(Vec4i(y, w, w, y) == u.ywwy)
        assert(Vec4i(y, w, w, z) == u.ywwz)
        assert(Vec4i(y, w, w, w) == u.ywww)
        assert(Vec4i(z, x, x, x) == u.zxxx)
        assert(Vec4i(z, x, x, y) == u.zxxy)
        assert(Vec4i(z, x, x, z) == u.zxxz)
        assert(Vec4i(z, x, x, w) == u.zxxw)
        assert(Vec4i(z, x, y, x) == u.zxyx)
        assert(Vec4i(z, x, y, y) == u.zxyy)
        assert(Vec4i(z, x, y, z) == u.zxyz)
        assert(Vec4i(z, x, y, w) == u.zxyw)
        assert(Vec4i(z, x, z, x) == u.zxzx)
        assert(Vec4i(z, x, z, y) == u.zxzy)
        assert(Vec4i(z, x, z, z) == u.zxzz)
        assert(Vec4i(z, x, z, w) == u.zxzw)
        assert(Vec4i(z, x, w, x) == u.zxwx)
        assert(Vec4i(z, x, w, y) == u.zxwy)
        assert(Vec4i(z, x, w, z) == u.zxwz)
        assert(Vec4i(z, x, w, w) == u.zxww)
        assert(Vec4i(z, y, x, x) == u.zyxx)
        assert(Vec4i(z, y, x, y) == u.zyxy)
        assert(Vec4i(z, y, x, z) == u.zyxz)
        assert(Vec4i(z, y, x, w) == u.zyxw)
        assert(Vec4i(z, y, y, x) == u.zyyx)
        assert(Vec4i(z, y, y, y) == u.zyyy)
        assert(Vec4i(z, y, y, z) == u.zyyz)
        assert(Vec4i(z, y, y, w) == u.zyyw)
        assert(Vec4i(z, y, z, x) == u.zyzx)
        assert(Vec4i(z, y, z, y) == u.zyzy)
        assert(Vec4i(z, y, z, z) == u.zyzz)
        assert(Vec4i(z, y, z, w) == u.zyzw)
        assert(Vec4i(z, y, w, x) == u.zywx)
        assert(Vec4i(z, y, w, y) == u.zywy)
        assert(Vec4i(z, y, w, z) == u.zywz)
        assert(Vec4i(z, y, w, w) == u.zyww)
        assert(Vec4i(z, z, x, x) == u.zzxx)
        assert(Vec4i(z, z, x, y) == u.zzxy)
        assert(Vec4i(z, z, x, z) == u.zzxz)
        assert(Vec4i(z, z, x, w) == u.zzxw)
        assert(Vec4i(z, z, y, x) == u.zzyx)
        assert(Vec4i(z, z, y, y) == u.zzyy)
        assert(Vec4i(z, z, y, z) == u.zzyz)
        assert(Vec4i(z, z, y, w) == u.zzyw)
        assert(Vec4i(z, z, z, x) == u.zzzx)
        assert(Vec4i(z, z, z, y) == u.zzzy)
        assert(Vec4i(z, z, z, z) == u.zzzz)
        assert(Vec4i(z, z, z, w) == u.zzzw)
        assert(Vec4i(z, z, w, x) == u.zzwx)
        assert(Vec4i(z, z, w, y) == u.zzwy)
        assert(Vec4i(z, z, w, z) == u.zzwz)
        assert(Vec4i(z, z, w, w) == u.zzww)
        assert(Vec4i(z, w, x, x) == u.zwxx)
        assert(Vec4i(z, w, x, y) == u.zwxy)
        assert(Vec4i(z, w, x, z) == u.zwxz)
        assert(Vec4i(z, w, x, w) == u.zwxw)
        assert(Vec4i(z, w, y, x) == u.zwyx)
        assert(Vec4i(z, w, y, y) == u.zwyy)
        assert(Vec4i(z, w, y, z) == u.zwyz)
        assert(Vec4i(z, w, y, w) == u.zwyw)
        assert(Vec4i(z, w, z, x) == u.zwzx)
        assert(Vec4i(z, w, z, y) == u.zwzy)
        assert(Vec4i(z, w, z, z) == u.zwzz)
        assert(Vec4i(z, w, z, w) == u.zwzw)
        assert(Vec4i(z, w, w, x) == u.zwwx)
        assert(Vec4i(z, w, w, y) == u.zwwy)
        assert(Vec4i(z, w, w, z) == u.zwwz)
        assert(Vec4i(z, w, w, w) == u.zwww)
        assert(Vec4i(w, x, x, x) == u.wxxx)
        assert(Vec4i(w, x, x, y) == u.wxxy)
        assert(Vec4i(w, x, x, z) == u.wxxz)
        assert(Vec4i(w, x, x, w) == u.wxxw)
        assert(Vec4i(w, x, y, x) == u.wxyx)
        assert(Vec4i(w, x, y, y) == u.wxyy)
        assert(Vec4i(w, x, y, z) == u.wxyz)
        assert(Vec4i(w, x, y, w) == u.wxyw)
        assert(Vec4i(w, x, z, x) == u.wxzx)
        assert(Vec4i(w, x, z, y) == u.wxzy)
        assert(Vec4i(w, x, z, z) == u.wxzz)
        assert(Vec4i(w, x, z, w) == u.wxzw)
        assert(Vec4i(w, x, w, x) == u.wxwx)
        assert(Vec4i(w, x, w, y) == u.wxwy)
        assert(Vec4i(w, x, w, z) == u.wxwz)
        assert(Vec4i(w, x, w, w) == u.wxww)
        assert(Vec4i(w, y, x, x) == u.wyxx)
        assert(Vec4i(w, y, x, y) == u.wyxy)
        assert(Vec4i(w, y, x, z) == u.wyxz)
        assert(Vec4i(w, y, x, w) == u.wyxw)
        assert(Vec4i(w, y, y, x) == u.wyyx)
        assert(Vec4i(w, y, y, y) == u.wyyy)
        assert(Vec4i(w, y, y, z) == u.wyyz)
        assert(Vec4i(w, y, y, w) == u.wyyw)
        assert(Vec4i(w, y, z, x) == u.wyzx)
        assert(Vec4i(w, y, z, y) == u.wyzy)
        assert(Vec4i(w, y, z, z) == u.wyzz)
        assert(Vec4i(w, y, z, w) == u.wyzw)
        assert(Vec4i(w, y, w, x) == u.wywx)
        assert(Vec4i(w, y, w, y) == u.wywy)
        assert(Vec4i(w, y, w, z) == u.wywz)
        assert(Vec4i(w, y, w, w) == u.wyww)
        assert(Vec4i(w, z, x, x) == u.wzxx)
        assert(Vec4i(w, z, x, y) == u.wzxy)
        assert(Vec4i(w, z, x, z) == u.wzxz)
        assert(Vec4i(w, z, x, w) == u.wzxw)
        assert(Vec4i(w, z, y, x) == u.wzyx)
        assert(Vec4i(w, z, y, y) == u.wzyy)
        assert(Vec4i(w, z, y, z) == u.wzyz)
        assert(Vec4i(w, z, y, w) == u.wzyw)
        assert(Vec4i(w, z, z, x) == u.wzzx)
        assert(Vec4i(w, z, z, y) == u.wzzy)
        assert(Vec4i(w, z, z, z) == u.wzzz)
        assert(Vec4i(w, z, z, w) == u.wzzw)
        assert(Vec4i(w, z, w, x) == u.wzwx)
        assert(Vec4i(w, z, w, y) == u.wzwy)
        assert(Vec4i(w, z, w, z) == u.wzwz)
        assert(Vec4i(w, z, w, w) == u.wzww)
        assert(Vec4i(w, w, x, x) == u.wwxx)
        assert(Vec4i(w, w, x, y) == u.wwxy)
        assert(Vec4i(w, w, x, z) == u.wwxz)
        assert(Vec4i(w, w, x, w) == u.wwxw)
        assert(Vec4i(w, w, y, x) == u.wwyx)
        assert(Vec4i(w, w, y, y) == u.wwyy)
        assert(Vec4i(w, w, y, z) == u.wwyz)
        assert(Vec4i(w, w, y, w) == u.wwyw)
        assert(Vec4i(w, w, z, x) == u.wwzx)
        assert(Vec4i(w, w, z, y) == u.wwzy)
        assert(Vec4i(w, w, z, z) == u.wwzz)
        assert(Vec4i(w, w, z, w) == u.wwzw)
        assert(Vec4i(w, w, w, x) == u.wwwx)
        assert(Vec4i(w, w, w, y) == u.wwwy)
        assert(Vec4i(w, w, w, z) == u.wwwz)
        assert(Vec4i(w, w, w, w) == u.wwww)
        assert(Vec2i(x, x) == u.rr)
        assert(Vec2i(x, y) == u.rg)
        assert(Vec2i(x, z) == u.rb)
        assert(Vec2i(x, w) == u.ra)
        assert(Vec2i(y, x) == u.gr)
        assert(Vec2i(y, y) == u.gg)
        assert(Vec2i(y, z) == u.gb)
        assert(Vec2i(y, w) == u.ga)
        assert(Vec2i(z, x) == u.br)
        assert(Vec2i(z, y) == u.bg)
        assert(Vec2i(z, z) == u.bb)
        assert(Vec2i(z, w) == u.ba)
        assert(Vec2i(w, x) == u.ar)
        assert(Vec2i(w, y) == u.ag)
        assert(Vec2i(w, z) == u.ab)
        assert(Vec2i(w, w) == u.aa)
        assert(Vec3i(x, x, x) == u.rrr)
        assert(Vec3i(x, x, y) == u.rrg)
        assert(Vec3i(x, x, z) == u.rrb)
        assert(Vec3i(x, x, w) == u.rra)
        assert(Vec3i(x, y, x) == u.rgr)
        assert(Vec3i(x, y, y) == u.rgg)
        assert(Vec3i(x, y, z) == u.rgb)
        assert(Vec3i(x, y, w) == u.rga)
        assert(Vec3i(x, z, x) == u.rbr)
        assert(Vec3i(x, z, y) == u.rbg)
        assert(Vec3i(x, z, z) == u.rbb)
        assert(Vec3i(x, z, w) == u.rba)
        assert(Vec3i(x, w, x) == u.rar)
        assert(Vec3i(x, w, y) == u.rag)
        assert(Vec3i(x, w, z) == u.rab)
        assert(Vec3i(x, w, w) == u.raa)
        assert(Vec3i(y, x, x) == u.grr)
        assert(Vec3i(y, x, y) == u.grg)
        assert(Vec3i(y, x, z) == u.grb)
        assert(Vec3i(y, x, w) == u.gra)
        assert(Vec3i(y, y, x) == u.ggr)
        assert(Vec3i(y, y, y) == u.ggg)
        assert(Vec3i(y, y, z) == u.ggb)
        assert(Vec3i(y, y, w) == u.gga)
        assert(Vec3i(y, z, x) == u.gbr)
        assert(Vec3i(y, z, y) == u.gbg)
        assert(Vec3i(y, z, z) == u.gbb)
        assert(Vec3i(y, z, w) == u.gba)
        assert(Vec3i(y, w, x) == u.gar)
        assert(Vec3i(y, w, y) == u.gag)
        assert(Vec3i(y, w, z) == u.gab)
        assert(Vec3i(y, w, w) == u.gaa)
        assert(Vec3i(z, x, x) == u.brr)
        assert(Vec3i(z, x, y) == u.brg)
        assert(Vec3i(z, x, z) == u.brb)
        assert(Vec3i(z, x, w) == u.bra)
        assert(Vec3i(z, y, x) == u.bgr)
        assert(Vec3i(z, y, y) == u.bgg)
        assert(Vec3i(z, y, z) == u.bgb)
        assert(Vec3i(z, y, w) == u.bga)
        assert(Vec3i(z, z, x) == u.bbr)
        assert(Vec3i(z, z, y) == u.bbg)
        assert(Vec3i(z, z, z) == u.bbb)
        assert(Vec3i(z, z, w) == u.bba)
        assert(Vec3i(z, w, x) == u.bar)
        assert(Vec3i(z, w, y) == u.bag)
        assert(Vec3i(z, w, z) == u.bab)
        assert(Vec3i(z, w, w) == u.baa)
        assert(Vec3i(w, x, x) == u.arr)
        assert(Vec3i(w, x, y) == u.arg)
        assert(Vec3i(w, x, z) == u.arb)
        assert(Vec3i(w, x, w) == u.ara)
        assert(Vec3i(w, y, x) == u.agr)
        assert(Vec3i(w, y, y) == u.agg)
        assert(Vec3i(w, y, z) == u.agb)
        assert(Vec3i(w, y, w) == u.aga)
        assert(Vec3i(w, z, x) == u.abr)
        assert(Vec3i(w, z, y) == u.abg)
        assert(Vec3i(w, z, z) == u.abb)
        assert(Vec3i(w, z, w) == u.aba)
        assert(Vec3i(w, w, x) == u.aar)
        assert(Vec3i(w, w, y) == u.aag)
        assert(Vec3i(w, w, z) == u.aab)
        assert(Vec3i(w, w, w) == u.aaa)
        assert(Vec4i(x, x, x, x) == u.rrrr)
        assert(Vec4i(x, x, x, y) == u.rrrg)
        assert(Vec4i(x, x, x, z) == u.rrrb)
        assert(Vec4i(x, x, x, w) == u.rrra)
        assert(Vec4i(x, x, y, x) == u.rrgr)
        assert(Vec4i(x, x, y, y) == u.rrgg)
        assert(Vec4i(x, x, y, z) == u.rrgb)
        assert(Vec4i(x, x, y, w) == u.rrga)
        assert(Vec4i(x, x, z, x) == u.rrbr)
        assert(Vec4i(x, x, z, y) == u.rrbg)
        assert(Vec4i(x, x, z, z) == u.rrbb)
        assert(Vec4i(x, x, z, w) == u.rrba)
        assert(Vec4i(x, x, w, x) == u.rrar)
        assert(Vec4i(x, x, w, y) == u.rrag)
        assert(Vec4i(x, x, w, z) == u.rrab)
        assert(Vec4i(x, x, w, w) == u.rraa)
        assert(Vec4i(x, y, x, x) == u.rgrr)
        assert(Vec4i(x, y, x, y) == u.rgrg)
        assert(Vec4i(x, y, x, z) == u.rgrb)
        assert(Vec4i(x, y, x, w) == u.rgra)
        assert(Vec4i(x, y, y, x) == u.rggr)
        assert(Vec4i(x, y, y, y) == u.rggg)
        assert(Vec4i(x, y, y, z) == u.rggb)
        assert(Vec4i(x, y, y, w) == u.rgga)
        assert(Vec4i(x, y, z, x) == u.rgbr)
        assert(Vec4i(x, y, z, y) == u.rgbg)
        assert(Vec4i(x, y, z, z) == u.rgbb)
        assert(Vec4i(x, y, z, w) == u.rgba)
        assert(Vec4i(x, y, w, x) == u.rgar)
        assert(Vec4i(x, y, w, y) == u.rgag)
        assert(Vec4i(x, y, w, z) == u.rgab)
        assert(Vec4i(x, y, w, w) == u.rgaa)
        assert(Vec4i(x, z, x, x) == u.rbrr)
        assert(Vec4i(x, z, x, y) == u.rbrg)
        assert(Vec4i(x, z, x, z) == u.rbrb)
        assert(Vec4i(x, z, x, w) == u.rbra)
        assert(Vec4i(x, z, y, x) == u.rbgr)
        assert(Vec4i(x, z, y, y) == u.rbgg)
        assert(Vec4i(x, z, y, z) == u.rbgb)
        assert(Vec4i(x, z, y, w) == u.rbga)
        assert(Vec4i(x, z, z, x) == u.rbbr)
        assert(Vec4i(x, z, z, y) == u.rbbg)
        assert(Vec4i(x, z, z, z) == u.rbbb)
        assert(Vec4i(x, z, z, w) == u.rbba)
        assert(Vec4i(x, z, w, x) == u.rbar)
        assert(Vec4i(x, z, w, y) == u.rbag)
        assert(Vec4i(x, z, w, z) == u.rbab)
        assert(Vec4i(x, z, w, w) == u.rbaa)
        assert(Vec4i(x, w, x, x) == u.rarr)
        assert(Vec4i(x, w, x, y) == u.rarg)
        assert(Vec4i(x, w, x, z) == u.rarb)
        assert(Vec4i(x, w, x, w) == u.rara)
        assert(Vec4i(x, w, y, x) == u.ragr)
        assert(Vec4i(x, w, y, y) == u.ragg)
        assert(Vec4i(x, w, y, z) == u.ragb)
        assert(Vec4i(x, w, y, w) == u.raga)
        assert(Vec4i(x, w, z, x) == u.rabr)
        assert(Vec4i(x, w, z, y) == u.rabg)
        assert(Vec4i(x, w, z, z) == u.rabb)
        assert(Vec4i(x, w, z, w) == u.raba)
        assert(Vec4i(x, w, w, x) == u.raar)
        assert(Vec4i(x, w, w, y) == u.raag)
        assert(Vec4i(x, w, w, z) == u.raab)
        assert(Vec4i(x, w, w, w) == u.raaa)
        assert(Vec4i(y, x, x, x) == u.grrr)
        assert(Vec4i(y, x, x, y) == u.grrg)
        assert(Vec4i(y, x, x, z) == u.grrb)
        assert(Vec4i(y, x, x, w) == u.grra)
        assert(Vec4i(y, x, y, x) == u.grgr)
        assert(Vec4i(y, x, y, y) == u.grgg)
        assert(Vec4i(y, x, y, z) == u.grgb)
        assert(Vec4i(y, x, y, w) == u.grga)
        assert(Vec4i(y, x, z, x) == u.grbr)
        assert(Vec4i(y, x, z, y) == u.grbg)
        assert(Vec4i(y, x, z, z) == u.grbb)
        assert(Vec4i(y, x, z, w) == u.grba)
        assert(Vec4i(y, x, w, x) == u.grar)
        assert(Vec4i(y, x, w, y) == u.grag)
        assert(Vec4i(y, x, w, z) == u.grab)
        assert(Vec4i(y, x, w, w) == u.graa)
        assert(Vec4i(y, y, x, x) == u.ggrr)
        assert(Vec4i(y, y, x, y) == u.ggrg)
        assert(Vec4i(y, y, x, z) == u.ggrb)
        assert(Vec4i(y, y, x, w) == u.ggra)
        assert(Vec4i(y, y, y, x) == u.gggr)
        assert(Vec4i(y, y, y, y) == u.gggg)
        assert(Vec4i(y, y, y, z) == u.gggb)
        assert(Vec4i(y, y, y, w) == u.ggga)
        assert(Vec4i(y, y, z, x) == u.ggbr)
        assert(Vec4i(y, y, z, y) == u.ggbg)
        assert(Vec4i(y, y, z, z) == u.ggbb)
        assert(Vec4i(y, y, z, w) == u.ggba)
        assert(Vec4i(y, y, w, x) == u.ggar)
        assert(Vec4i(y, y, w, y) == u.ggag)
        assert(Vec4i(y, y, w, z) == u.ggab)
        assert(Vec4i(y, y, w, w) == u.ggaa)
        assert(Vec4i(y, z, x, x) == u.gbrr)
        assert(Vec4i(y, z, x, y) == u.gbrg)
        assert(Vec4i(y, z, x, z) == u.gbrb)
        assert(Vec4i(y, z, x, w) == u.gbra)
        assert(Vec4i(y, z, y, x) == u.gbgr)
        assert(Vec4i(y, z, y, y) == u.gbgg)
        assert(Vec4i(y, z, y, z) == u.gbgb)
        assert(Vec4i(y, z, y, w) == u.gbga)
        assert(Vec4i(y, z, z, x) == u.gbbr)
        assert(Vec4i(y, z, z, y) == u.gbbg)
        assert(Vec4i(y, z, z, z) == u.gbbb)
        assert(Vec4i(y, z, z, w) == u.gbba)
        assert(Vec4i(y, z, w, x) == u.gbar)
        assert(Vec4i(y, z, w, y) == u.gbag)
        assert(Vec4i(y, z, w, z) == u.gbab)
        assert(Vec4i(y, z, w, w) == u.gbaa)
        assert(Vec4i(y, w, x, x) == u.garr)
        assert(Vec4i(y, w, x, y) == u.garg)
        assert(Vec4i(y, w, x, z) == u.garb)
        assert(Vec4i(y, w, x, w) == u.gara)
        assert(Vec4i(y, w, y, x) == u.gagr)
        assert(Vec4i(y, w, y, y) == u.gagg)
        assert(Vec4i(y, w, y, z) == u.gagb)
        assert(Vec4i(y, w, y, w) == u.gaga)
        assert(Vec4i(y, w, z, x) == u.gabr)
        assert(Vec4i(y, w, z, y) == u.gabg)
        assert(Vec4i(y, w, z, z) == u.gabb)
        assert(Vec4i(y, w, z, w) == u.gaba)
        assert(Vec4i(y, w, w, x) == u.gaar)
        assert(Vec4i(y, w, w, y) == u.gaag)
        assert(Vec4i(y, w, w, z) == u.gaab)
        assert(Vec4i(y, w, w, w) == u.gaaa)
        assert(Vec4i(z, x, x, x) == u.brrr)
        assert(Vec4i(z, x, x, y) == u.brrg)
        assert(Vec4i(z, x, x, z) == u.brrb)
        assert(Vec4i(z, x, x, w) == u.brra)
        assert(Vec4i(z, x, y, x) == u.brgr)
        assert(Vec4i(z, x, y, y) == u.brgg)
        assert(Vec4i(z, x, y, z) == u.brgb)
        assert(Vec4i(z, x, y, w) == u.brga)
        assert(Vec4i(z, x, z, x) == u.brbr)
        assert(Vec4i(z, x, z, y) == u.brbg)
        assert(Vec4i(z, x, z, z) == u.brbb)
        assert(Vec4i(z, x, z, w) == u.brba)
        assert(Vec4i(z, x, w, x) == u.brar)
        assert(Vec4i(z, x, w, y) == u.brag)
        assert(Vec4i(z, x, w, z) == u.brab)
        assert(Vec4i(z, x, w, w) == u.braa)
        assert(Vec4i(z, y, x, x) == u.bgrr)
        assert(Vec4i(z, y, x, y) == u.bgrg)
        assert(Vec4i(z, y, x, z) == u.bgrb)
        assert(Vec4i(z, y, x, w) == u.bgra)
        assert(Vec4i(z, y, y, x) == u.bggr)
        assert(Vec4i(z, y, y, y) == u.bggg)
        assert(Vec4i(z, y, y, z) == u.bggb)
        assert(Vec4i(z, y, y, w) == u.bgga)
        assert(Vec4i(z, y, z, x) == u.bgbr)
        assert(Vec4i(z, y, z, y) == u.bgbg)
        assert(Vec4i(z, y, z, z) == u.bgbb)
        assert(Vec4i(z, y, z, w) == u.bgba)
        assert(Vec4i(z, y, w, x) == u.bgar)
        assert(Vec4i(z, y, w, y) == u.bgag)
        assert(Vec4i(z, y, w, z) == u.bgab)
        assert(Vec4i(z, y, w, w) == u.bgaa)
        assert(Vec4i(z, z, x, x) == u.bbrr)
        assert(Vec4i(z, z, x, y) == u.bbrg)
        assert(Vec4i(z, z, x, z) == u.bbrb)
        assert(Vec4i(z, z, x, w) == u.bbra)
        assert(Vec4i(z, z, y, x) == u.bbgr)
        assert(Vec4i(z, z, y, y) == u.bbgg)
        assert(Vec4i(z, z, y, z) == u.bbgb)
        assert(Vec4i(z, z, y, w) == u.bbga)
        assert(Vec4i(z, z, z, x) == u.bbbr)
        assert(Vec4i(z, z, z, y) == u.bbbg)
        assert(Vec4i(z, z, z, z) == u.bbbb)
        assert(Vec4i(z, z, z, w) == u.bbba)
        assert(Vec4i(z, z, w, x) == u.bbar)
        assert(Vec4i(z, z, w, y) == u.bbag)
        assert(Vec4i(z, z, w, z) == u.bbab)
        assert(Vec4i(z, z, w, w) == u.bbaa)
        assert(Vec4i(z, w, x, x) == u.barr)
        assert(Vec4i(z, w, x, y) == u.barg)
        assert(Vec4i(z, w, x, z) == u.barb)
        assert(Vec4i(z, w, x, w) == u.bara)
        assert(Vec4i(z, w, y, x) == u.bagr)
        assert(Vec4i(z, w, y, y) == u.bagg)
        assert(Vec4i(z, w, y, z) == u.bagb)
        assert(Vec4i(z, w, y, w) == u.baga)
        assert(Vec4i(z, w, z, x) == u.babr)
        assert(Vec4i(z, w, z, y) == u.babg)
        assert(Vec4i(z, w, z, z) == u.babb)
        assert(Vec4i(z, w, z, w) == u.baba)
        assert(Vec4i(z, w, w, x) == u.baar)
        assert(Vec4i(z, w, w, y) == u.baag)
        assert(Vec4i(z, w, w, z) == u.baab)
        assert(Vec4i(z, w, w, w) == u.baaa)
        assert(Vec4i(w, x, x, x) == u.arrr)
        assert(Vec4i(w, x, x, y) == u.arrg)
        assert(Vec4i(w, x, x, z) == u.arrb)
        assert(Vec4i(w, x, x, w) == u.arra)
        assert(Vec4i(w, x, y, x) == u.argr)
        assert(Vec4i(w, x, y, y) == u.argg)
        assert(Vec4i(w, x, y, z) == u.argb)
        assert(Vec4i(w, x, y, w) == u.arga)
        assert(Vec4i(w, x, z, x) == u.arbr)
        assert(Vec4i(w, x, z, y) == u.arbg)
        assert(Vec4i(w, x, z, z) == u.arbb)
        assert(Vec4i(w, x, z, w) == u.arba)
        assert(Vec4i(w, x, w, x) == u.arar)
        assert(Vec4i(w, x, w, y) == u.arag)
        assert(Vec4i(w, x, w, z) == u.arab)
        assert(Vec4i(w, x, w, w) == u.araa)
        assert(Vec4i(w, y, x, x) == u.agrr)
        assert(Vec4i(w, y, x, y) == u.agrg)
        assert(Vec4i(w, y, x, z) == u.agrb)
        assert(Vec4i(w, y, x, w) == u.agra)
        assert(Vec4i(w, y, y, x) == u.aggr)
        assert(Vec4i(w, y, y, y) == u.aggg)
        assert(Vec4i(w, y, y, z) == u.aggb)
        assert(Vec4i(w, y, y, w) == u.agga)
        assert(Vec4i(w, y, z, x) == u.agbr)
        assert(Vec4i(w, y, z, y) == u.agbg)
        assert(Vec4i(w, y, z, z) == u.agbb)
        assert(Vec4i(w, y, z, w) == u.agba)
        assert(Vec4i(w, y, w, x) == u.agar)
        assert(Vec4i(w, y, w, y) == u.agag)
        assert(Vec4i(w, y, w, z) == u.agab)
        assert(Vec4i(w, y, w, w) == u.agaa)
        assert(Vec4i(w, z, x, x) == u.abrr)
        assert(Vec4i(w, z, x, y) == u.abrg)
        assert(Vec4i(w, z, x, z) == u.abrb)
        assert(Vec4i(w, z, x, w) == u.abra)
        assert(Vec4i(w, z, y, x) == u.abgr)
        assert(Vec4i(w, z, y, y) == u.abgg)
        assert(Vec4i(w, z, y, z) == u.abgb)
        assert(Vec4i(w, z, y, w) == u.abga)
        assert(Vec4i(w, z, z, x) == u.abbr)
        assert(Vec4i(w, z, z, y) == u.abbg)
        assert(Vec4i(w, z, z, z) == u.abbb)
        assert(Vec4i(w, z, z, w) == u.abba)
        assert(Vec4i(w, z, w, x) == u.abar)
        assert(Vec4i(w, z, w, y) == u.abag)
        assert(Vec4i(w, z, w, z) == u.abab)
        assert(Vec4i(w, z, w, w) == u.abaa)
        assert(Vec4i(w, w, x, x) == u.aarr)
        assert(Vec4i(w, w, x, y) == u.aarg)
        assert(Vec4i(w, w, x, z) == u.aarb)
        assert(Vec4i(w, w, x, w) == u.aara)
        assert(Vec4i(w, w, y, x) == u.aagr)
        assert(Vec4i(w, w, y, y) == u.aagg)
        assert(Vec4i(w, w, y, z) == u.aagb)
        assert(Vec4i(w, w, y, w) == u.aaga)
        assert(Vec4i(w, w, z, x) == u.aabr)
        assert(Vec4i(w, w, z, y) == u.aabg)
        assert(Vec4i(w, w, z, z) == u.aabb)
        assert(Vec4i(w, w, z, w) == u.aaba)
        assert(Vec4i(w, w, w, x) == u.aaar)
        assert(Vec4i(w, w, w, y) == u.aaag)
        assert(Vec4i(w, w, w, z) == u.aaab)
        assert(Vec4i(w, w, w, w) == u.aaaa)
    }

    test("Swizzled write") {
        val x = 5
        val y = 6
        val z = 7
        val w = 8
        val t = 10

        var i = ConstVec4i(x, y, z, w)
        val u = Vec4i(1)

        u := i; u.x = t; assert(Vec4i(t, y, z, w) == u)
        u := i; u.y = t; assert(Vec4i(x, t, z, w) == u)
        u := i; u.z = t; assert(Vec4i(x, y, t, w) == u)
        u := i; u.w = t; assert(Vec4i(x, y, z, t) == u)

        u := i; u.r = t; assert(Vec4i(t, y, z, w) == u)
        u := i; u.g = t; assert(Vec4i(x, t, z, w) == u)
        u := i; u.b = t; assert(Vec4i(x, y, t, w) == u)
        u := i; u.a = t; assert(Vec4i(x, y, z, t) == u)

        i = Vec4i(t)

        u := i; u.xy = Vec2i(x, y); assert(Vec4i(x, y, t, t) == u)
        u := i; u.xz = Vec2i(x, z); assert(Vec4i(x, t, z, t) == u)
        u := i; u.xw = Vec2i(x, w); assert(Vec4i(x, t, t, w) == u)
        u := i; u.yx = Vec2i(y, x); assert(Vec4i(x, y, t, t) == u)
        u := i; u.yz = Vec2i(y, z); assert(Vec4i(t, y, z, t) == u)
        u := i; u.yw = Vec2i(y, w); assert(Vec4i(t, y, t, w) == u)
        u := i; u.zx = Vec2i(z, x); assert(Vec4i(x, t, z, t) == u)
        u := i; u.zy = Vec2i(z, y); assert(Vec4i(t, y, z, t) == u)
        u := i; u.zw = Vec2i(z, w); assert(Vec4i(t, t, z, w) == u)
        u := i; u.wx = Vec2i(w, x); assert(Vec4i(x, t, t, w) == u)
        u := i; u.wy = Vec2i(w, y); assert(Vec4i(t, y, t, w) == u)
        u := i; u.wz = Vec2i(w, z); assert(Vec4i(t, t, z, w) == u)
        u := i; u.xyz = Vec3i(x, y, z); assert(Vec4i(x, y, z, t) == u)
        u := i; u.xyw = Vec3i(x, y, w); assert(Vec4i(x, y, t, w) == u)
        u := i; u.xzy = Vec3i(x, z, y); assert(Vec4i(x, y, z, t) == u)
        u := i; u.xzw = Vec3i(x, z, w); assert(Vec4i(x, t, z, w) == u)
        u := i; u.xwy = Vec3i(x, w, y); assert(Vec4i(x, y, t, w) == u)
        u := i; u.xwz = Vec3i(x, w, z); assert(Vec4i(x, t, z, w) == u)
        u := i; u.yxz = Vec3i(y, x, z); assert(Vec4i(x, y, z, t) == u)
        u := i; u.yxw = Vec3i(y, x, w); assert(Vec4i(x, y, t, w) == u)
        u := i; u.yzx = Vec3i(y, z, x); assert(Vec4i(x, y, z, t) == u)
        u := i; u.yzw = Vec3i(y, z, w); assert(Vec4i(t, y, z, w) == u)
        u := i; u.ywx = Vec3i(y, w, x); assert(Vec4i(x, y, t, w) == u)
        u := i; u.ywz = Vec3i(y, w, z); assert(Vec4i(t, y, z, w) == u)
        u := i; u.zxy = Vec3i(z, x, y); assert(Vec4i(x, y, z, t) == u)
        u := i; u.zxw = Vec3i(z, x, w); assert(Vec4i(x, t, z, w) == u)
        u := i; u.zyx = Vec3i(z, y, x); assert(Vec4i(x, y, z, t) == u)
        u := i; u.zyw = Vec3i(z, y, w); assert(Vec4i(t, y, z, w) == u)
        u := i; u.zwx = Vec3i(z, w, x); assert(Vec4i(x, t, z, w) == u)
        u := i; u.zwy = Vec3i(z, w, y); assert(Vec4i(t, y, z, w) == u)
        u := i; u.wxy = Vec3i(w, x, y); assert(Vec4i(x, y, t, w) == u)
        u := i; u.wxz = Vec3i(w, x, z); assert(Vec4i(x, t, z, w) == u)
        u := i; u.wyx = Vec3i(w, y, x); assert(Vec4i(x, y, t, w) == u)
        u := i; u.wyz = Vec3i(w, y, z); assert(Vec4i(t, y, z, w) == u)
        u := i; u.wzx = Vec3i(w, z, x); assert(Vec4i(x, t, z, w) == u)
        u := i; u.wzy = Vec3i(w, z, y); assert(Vec4i(t, y, z, w) == u)
        u := i; u.xyzw = Vec4i(x, y, z, w); assert(Vec4i(x, y, z, w) == u)
        u := i; u.xywz = Vec4i(x, y, w, z); assert(Vec4i(x, y, z, w) == u)
        u := i; u.xzyw = Vec4i(x, z, y, w); assert(Vec4i(x, y, z, w) == u)
        u := i; u.xzwy = Vec4i(x, z, w, y); assert(Vec4i(x, y, z, w) == u)
        u := i; u.xwyz = Vec4i(x, w, y, z); assert(Vec4i(x, y, z, w) == u)
        u := i; u.xwzy = Vec4i(x, w, z, y); assert(Vec4i(x, y, z, w) == u)
        u := i; u.yxzw = Vec4i(y, x, z, w); assert(Vec4i(x, y, z, w) == u)
        u := i; u.yxwz = Vec4i(y, x, w, z); assert(Vec4i(x, y, z, w) == u)
        u := i; u.yzxw = Vec4i(y, z, x, w); assert(Vec4i(x, y, z, w) == u)
        u := i; u.yzwx = Vec4i(y, z, w, x); assert(Vec4i(x, y, z, w) == u)
        u := i; u.ywxz = Vec4i(y, w, x, z); assert(Vec4i(x, y, z, w) == u)
        u := i; u.ywzx = Vec4i(y, w, z, x); assert(Vec4i(x, y, z, w) == u)
        u := i; u.zxyw = Vec4i(z, x, y, w); assert(Vec4i(x, y, z, w) == u)
        u := i; u.zxwy = Vec4i(z, x, w, y); assert(Vec4i(x, y, z, w) == u)
        u := i; u.zyxw = Vec4i(z, y, x, w); assert(Vec4i(x, y, z, w) == u)
        u := i; u.zywx = Vec4i(z, y, w, x); assert(Vec4i(x, y, z, w) == u)
        u := i; u.zwxy = Vec4i(z, w, x, y); assert(Vec4i(x, y, z, w) == u)
        u := i; u.zwyx = Vec4i(z, w, y, x); assert(Vec4i(x, y, z, w) == u)
        u := i; u.wxyz = Vec4i(w, x, y, z); assert(Vec4i(x, y, z, w) == u)
        u := i; u.wxzy = Vec4i(w, x, z, y); assert(Vec4i(x, y, z, w) == u)
        u := i; u.wyxz = Vec4i(w, y, x, z); assert(Vec4i(x, y, z, w) == u)
        u := i; u.wyzx = Vec4i(w, y, z, x); assert(Vec4i(x, y, z, w) == u)
        u := i; u.wzxy = Vec4i(w, z, x, y); assert(Vec4i(x, y, z, w) == u)
        u := i; u.wzyx = Vec4i(w, z, y, x); assert(Vec4i(x, y, z, w) == u)
        u := i; u.rg = Vec2i(x, y); assert(Vec4i(x, y, t, t) == u)
        u := i; u.rb = Vec2i(x, z); assert(Vec4i(x, t, z, t) == u)
        u := i; u.ra = Vec2i(x, w); assert(Vec4i(x, t, t, w) == u)
        u := i; u.gr = Vec2i(y, x); assert(Vec4i(x, y, t, t) == u)
        u := i; u.gb = Vec2i(y, z); assert(Vec4i(t, y, z, t) == u)
        u := i; u.ga = Vec2i(y, w); assert(Vec4i(t, y, t, w) == u)
        u := i; u.br = Vec2i(z, x); assert(Vec4i(x, t, z, t) == u)
        u := i; u.bg = Vec2i(z, y); assert(Vec4i(t, y, z, t) == u)
        u := i; u.ba = Vec2i(z, w); assert(Vec4i(t, t, z, w) == u)
        u := i; u.ar = Vec2i(w, x); assert(Vec4i(x, t, t, w) == u)
        u := i; u.ag = Vec2i(w, y); assert(Vec4i(t, y, t, w) == u)
        u := i; u.ab = Vec2i(w, z); assert(Vec4i(t, t, z, w) == u)
        u := i; u.rgb = Vec3i(x, y, z); assert(Vec4i(x, y, z, t) == u)
        u := i; u.rga = Vec3i(x, y, w); assert(Vec4i(x, y, t, w) == u)
        u := i; u.rbg = Vec3i(x, z, y); assert(Vec4i(x, y, z, t) == u)
        u := i; u.rba = Vec3i(x, z, w); assert(Vec4i(x, t, z, w) == u)
        u := i; u.rag = Vec3i(x, w, y); assert(Vec4i(x, y, t, w) == u)
        u := i; u.rab = Vec3i(x, w, z); assert(Vec4i(x, t, z, w) == u)
        u := i; u.grb = Vec3i(y, x, z); assert(Vec4i(x, y, z, t) == u)
        u := i; u.gra = Vec3i(y, x, w); assert(Vec4i(x, y, t, w) == u)
        u := i; u.gbr = Vec3i(y, z, x); assert(Vec4i(x, y, z, t) == u)
        u := i; u.gba = Vec3i(y, z, w); assert(Vec4i(t, y, z, w) == u)
        u := i; u.gar = Vec3i(y, w, x); assert(Vec4i(x, y, t, w) == u)
        u := i; u.gab = Vec3i(y, w, z); assert(Vec4i(t, y, z, w) == u)
        u := i; u.brg = Vec3i(z, x, y); assert(Vec4i(x, y, z, t) == u)
        u := i; u.bra = Vec3i(z, x, w); assert(Vec4i(x, t, z, w) == u)
        u := i; u.bgr = Vec3i(z, y, x); assert(Vec4i(x, y, z, t) == u)
        u := i; u.bga = Vec3i(z, y, w); assert(Vec4i(t, y, z, w) == u)
        u := i; u.bar = Vec3i(z, w, x); assert(Vec4i(x, t, z, w) == u)
        u := i; u.bag = Vec3i(z, w, y); assert(Vec4i(t, y, z, w) == u)
        u := i; u.arg = Vec3i(w, x, y); assert(Vec4i(x, y, t, w) == u)
        u := i; u.arb = Vec3i(w, x, z); assert(Vec4i(x, t, z, w) == u)
        u := i; u.agr = Vec3i(w, y, x); assert(Vec4i(x, y, t, w) == u)
        u := i; u.agb = Vec3i(w, y, z); assert(Vec4i(t, y, z, w) == u)
        u := i; u.abr = Vec3i(w, z, x); assert(Vec4i(x, t, z, w) == u)
        u := i; u.abg = Vec3i(w, z, y); assert(Vec4i(t, y, z, w) == u)
        u := i; u.rgba = Vec4i(x, y, z, w); assert(Vec4i(x, y, z, w) == u)
        u := i; u.rgab = Vec4i(x, y, w, z); assert(Vec4i(x, y, z, w) == u)
        u := i; u.rbga = Vec4i(x, z, y, w); assert(Vec4i(x, y, z, w) == u)
        u := i; u.rbag = Vec4i(x, z, w, y); assert(Vec4i(x, y, z, w) == u)
        u := i; u.ragb = Vec4i(x, w, y, z); assert(Vec4i(x, y, z, w) == u)
        u := i; u.rabg = Vec4i(x, w, z, y); assert(Vec4i(x, y, z, w) == u)
        u := i; u.grba = Vec4i(y, x, z, w); assert(Vec4i(x, y, z, w) == u)
        u := i; u.grab = Vec4i(y, x, w, z); assert(Vec4i(x, y, z, w) == u)
        u := i; u.gbra = Vec4i(y, z, x, w); assert(Vec4i(x, y, z, w) == u)
        u := i; u.gbar = Vec4i(y, z, w, x); assert(Vec4i(x, y, z, w) == u)
        u := i; u.garb = Vec4i(y, w, x, z); assert(Vec4i(x, y, z, w) == u)
        u := i; u.gabr = Vec4i(y, w, z, x); assert(Vec4i(x, y, z, w) == u)
        u := i; u.brga = Vec4i(z, x, y, w); assert(Vec4i(x, y, z, w) == u)
        u := i; u.brag = Vec4i(z, x, w, y); assert(Vec4i(x, y, z, w) == u)
        u := i; u.bgra = Vec4i(z, y, x, w); assert(Vec4i(x, y, z, w) == u)
        u := i; u.bgar = Vec4i(z, y, w, x); assert(Vec4i(x, y, z, w) == u)
        u := i; u.barg = Vec4i(z, w, x, y); assert(Vec4i(x, y, z, w) == u)
        u := i; u.bagr = Vec4i(z, w, y, x); assert(Vec4i(x, y, z, w) == u)
        u := i; u.argb = Vec4i(w, x, y, z); assert(Vec4i(x, y, z, w) == u)
        u := i; u.arbg = Vec4i(w, x, z, y); assert(Vec4i(x, y, z, w) == u)
        u := i; u.agrb = Vec4i(w, y, x, z); assert(Vec4i(x, y, z, w) == u)
        u := i; u.agbr = Vec4i(w, y, z, x); assert(Vec4i(x, y, z, w) == u)
        u := i; u.abrg = Vec4i(w, z, x, y); assert(Vec4i(x, y, z, w) == u)
        u := i; u.abgr = Vec4i(w, z, y, x); assert(Vec4i(x, y, z, w) == u)
    }
    
    test("Swizzled self write") {
        val x = 5
        val y = 6
        val z = 7
        val w = 8

        val i = ConstVec4i(x, y, z, w)
        val u = Vec4i(0)

        u := i; u.xyzw = u; assert(Vec4i(x, y, z, w) == u)
        u := i; u.xywz = u; assert(Vec4i(x, y, w, z) == u)
        u := i; u.xzyw = u; assert(Vec4i(x, z, y, w) == u)
        u := i; u.xzwy = u; assert(Vec4i(x, w, y, z) == u)
        u := i; u.xwyz = u; assert(Vec4i(x, z, w, y) == u)
        u := i; u.xwzy = u; assert(Vec4i(x, w, z, y) == u)
        u := i; u.yxzw = u; assert(Vec4i(y, x, z, w) == u)
        u := i; u.yxwz = u; assert(Vec4i(y, x, w, z) == u)
        u := i; u.yzxw = u; assert(Vec4i(z, x, y, w) == u)
        u := i; u.yzwx = u; assert(Vec4i(w, x, y, z) == u)
        u := i; u.ywxz = u; assert(Vec4i(z, x, w, y) == u)
        u := i; u.ywzx = u; assert(Vec4i(w, x, z, y) == u)
        u := i; u.zxyw = u; assert(Vec4i(y, z, x, w) == u)
        u := i; u.zxwy = u; assert(Vec4i(y, w, x, z) == u)
        u := i; u.zyxw = u; assert(Vec4i(z, y, x, w) == u)
        u := i; u.zywx = u; assert(Vec4i(w, y, x, z) == u)
        u := i; u.zwxy = u; assert(Vec4i(z, w, x, y) == u)
        u := i; u.zwyx = u; assert(Vec4i(w, z, x, y) == u)
        u := i; u.wxyz = u; assert(Vec4i(y, z, w, x) == u)
        u := i; u.wxzy = u; assert(Vec4i(y, w, z, x) == u)
        u := i; u.wyxz = u; assert(Vec4i(z, y, w, x) == u)
        u := i; u.wyzx = u; assert(Vec4i(w, y, z, x) == u)
        u := i; u.wzxy = u; assert(Vec4i(z, w, y, x) == u)
        u := i; u.wzyx = u; assert(Vec4i(w, z, y, x) == u)
    }
}
