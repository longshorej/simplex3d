/*
 * Simplex3dMath - Test Package
 * Copyright (C) 2009-2011, Aleksey Nikiforov
 *
 * This file is part of Simplex3dMathTest.
 *
 * Simplex3dMathTest is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Simplex3dMathTest is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package simplex3d.test.math

import org.scalatest._
import simplex3d.math._


/**
 * @author Aleksey Nikiforov (lex)
 */
class Vec4iSwizzleTest extends FunSuite {

  test("Swizzled read") {
    val x = 5
    val y = 6
    val z = 7
    val w = 8

    val u = ConstVec4i(x, y, z, w)

    expectResult(x) { u.x }
    expectResult(y) { u.y }
    expectResult(z) { u.z }
    expectResult(w) { u.w }

    expectResult(x) { u.r }
    expectResult(y) { u.g }
    expectResult(z) { u.b }
    expectResult(w) { u.a }

    expectResult(x) { u.s }
    expectResult(y) { u.t }
    expectResult(z) { u.p }
    expectResult(w) { u.q }

    assert(u.x.isInstanceOf[Int])
    assert(u.y.isInstanceOf[Int])
    assert(u.z.isInstanceOf[Int])
    assert(u.w.isInstanceOf[Int])

    assert(u.r.isInstanceOf[Int])
    assert(u.g.isInstanceOf[Int])
    assert(u.b.isInstanceOf[Int])
    assert(u.a.isInstanceOf[Int])

    assert(u.s.isInstanceOf[Int])
    assert(u.t.isInstanceOf[Int])
    assert(u.p.isInstanceOf[Int])
    assert(u.q.isInstanceOf[Int])

    assert(Vec2i(x, x) == u.xx)
    assert(Vec2i(x, y) == u.xy)
    assert(Vec2i(x, z) == u.xz)
    assert(Vec2i(x, w) == u.xw)
    assert(Vec2i(y, x) == u.yx)
    assert(Vec2i(y, y) == u.yy)
    assert(Vec2i(y, z) == u.yz)
    assert(Vec2i(y, w) == u.yw)
    assert(Vec2i(z, x) == u.zx)
    assert(Vec2i(z, y) == u.zy)
    assert(Vec2i(z, z) == u.zz)
    assert(Vec2i(z, w) == u.zw)
    assert(Vec2i(w, x) == u.wx)
    assert(Vec2i(w, y) == u.wy)
    assert(Vec2i(w, z) == u.wz)
    assert(Vec2i(w, w) == u.ww)
    assert(Vec3i(x, x, x) == u.xxx)
    assert(Vec3i(x, x, y) == u.xxy)
    assert(Vec3i(x, x, z) == u.xxz)
    assert(Vec3i(x, x, w) == u.xxw)
    assert(Vec3i(x, y, x) == u.xyx)
    assert(Vec3i(x, y, y) == u.xyy)
    assert(Vec3i(x, y, z) == u.xyz)
    assert(Vec3i(x, y, w) == u.xyw)
    assert(Vec3i(x, z, x) == u.xzx)
    assert(Vec3i(x, z, y) == u.xzy)
    assert(Vec3i(x, z, z) == u.xzz)
    assert(Vec3i(x, z, w) == u.xzw)
    assert(Vec3i(x, w, x) == u.xwx)
    assert(Vec3i(x, w, y) == u.xwy)
    assert(Vec3i(x, w, z) == u.xwz)
    assert(Vec3i(x, w, w) == u.xww)
    assert(Vec3i(y, x, x) == u.yxx)
    assert(Vec3i(y, x, y) == u.yxy)
    assert(Vec3i(y, x, z) == u.yxz)
    assert(Vec3i(y, x, w) == u.yxw)
    assert(Vec3i(y, y, x) == u.yyx)
    assert(Vec3i(y, y, y) == u.yyy)
    assert(Vec3i(y, y, z) == u.yyz)
    assert(Vec3i(y, y, w) == u.yyw)
    assert(Vec3i(y, z, x) == u.yzx)
    assert(Vec3i(y, z, y) == u.yzy)
    assert(Vec3i(y, z, z) == u.yzz)
    assert(Vec3i(y, z, w) == u.yzw)
    assert(Vec3i(y, w, x) == u.ywx)
    assert(Vec3i(y, w, y) == u.ywy)
    assert(Vec3i(y, w, z) == u.ywz)
    assert(Vec3i(y, w, w) == u.yww)
    assert(Vec3i(z, x, x) == u.zxx)
    assert(Vec3i(z, x, y) == u.zxy)
    assert(Vec3i(z, x, z) == u.zxz)
    assert(Vec3i(z, x, w) == u.zxw)
    assert(Vec3i(z, y, x) == u.zyx)
    assert(Vec3i(z, y, y) == u.zyy)
    assert(Vec3i(z, y, z) == u.zyz)
    assert(Vec3i(z, y, w) == u.zyw)
    assert(Vec3i(z, z, x) == u.zzx)
    assert(Vec3i(z, z, y) == u.zzy)
    assert(Vec3i(z, z, z) == u.zzz)
    assert(Vec3i(z, z, w) == u.zzw)
    assert(Vec3i(z, w, x) == u.zwx)
    assert(Vec3i(z, w, y) == u.zwy)
    assert(Vec3i(z, w, z) == u.zwz)
    assert(Vec3i(z, w, w) == u.zww)
    assert(Vec3i(w, x, x) == u.wxx)
    assert(Vec3i(w, x, y) == u.wxy)
    assert(Vec3i(w, x, z) == u.wxz)
    assert(Vec3i(w, x, w) == u.wxw)
    assert(Vec3i(w, y, x) == u.wyx)
    assert(Vec3i(w, y, y) == u.wyy)
    assert(Vec3i(w, y, z) == u.wyz)
    assert(Vec3i(w, y, w) == u.wyw)
    assert(Vec3i(w, z, x) == u.wzx)
    assert(Vec3i(w, z, y) == u.wzy)
    assert(Vec3i(w, z, z) == u.wzz)
    assert(Vec3i(w, z, w) == u.wzw)
    assert(Vec3i(w, w, x) == u.wwx)
    assert(Vec3i(w, w, y) == u.wwy)
    assert(Vec3i(w, w, z) == u.wwz)
    assert(Vec3i(w, w, w) == u.www)
    assert(Vec4i(x, x, x, x) == u.xxxx)
    assert(Vec4i(x, x, x, y) == u.xxxy)
    assert(Vec4i(x, x, x, z) == u.xxxz)
    assert(Vec4i(x, x, x, w) == u.xxxw)
    assert(Vec4i(x, x, y, x) == u.xxyx)
    assert(Vec4i(x, x, y, y) == u.xxyy)
    assert(Vec4i(x, x, y, z) == u.xxyz)
    assert(Vec4i(x, x, y, w) == u.xxyw)
    assert(Vec4i(x, x, z, x) == u.xxzx)
    assert(Vec4i(x, x, z, y) == u.xxzy)
    assert(Vec4i(x, x, z, z) == u.xxzz)
    assert(Vec4i(x, x, z, w) == u.xxzw)
    assert(Vec4i(x, x, w, x) == u.xxwx)
    assert(Vec4i(x, x, w, y) == u.xxwy)
    assert(Vec4i(x, x, w, z) == u.xxwz)
    assert(Vec4i(x, x, w, w) == u.xxww)
    assert(Vec4i(x, y, x, x) == u.xyxx)
    assert(Vec4i(x, y, x, y) == u.xyxy)
    assert(Vec4i(x, y, x, z) == u.xyxz)
    assert(Vec4i(x, y, x, w) == u.xyxw)
    assert(Vec4i(x, y, y, x) == u.xyyx)
    assert(Vec4i(x, y, y, y) == u.xyyy)
    assert(Vec4i(x, y, y, z) == u.xyyz)
    assert(Vec4i(x, y, y, w) == u.xyyw)
    assert(Vec4i(x, y, z, x) == u.xyzx)
    assert(Vec4i(x, y, z, y) == u.xyzy)
    assert(Vec4i(x, y, z, z) == u.xyzz)
    assert(Vec4i(x, y, z, w) == u.xyzw)
    assert(Vec4i(x, y, w, x) == u.xywx)
    assert(Vec4i(x, y, w, y) == u.xywy)
    assert(Vec4i(x, y, w, z) == u.xywz)
    assert(Vec4i(x, y, w, w) == u.xyww)
    assert(Vec4i(x, z, x, x) == u.xzxx)
    assert(Vec4i(x, z, x, y) == u.xzxy)
    assert(Vec4i(x, z, x, z) == u.xzxz)
    assert(Vec4i(x, z, x, w) == u.xzxw)
    assert(Vec4i(x, z, y, x) == u.xzyx)
    assert(Vec4i(x, z, y, y) == u.xzyy)
    assert(Vec4i(x, z, y, z) == u.xzyz)
    assert(Vec4i(x, z, y, w) == u.xzyw)
    assert(Vec4i(x, z, z, x) == u.xzzx)
    assert(Vec4i(x, z, z, y) == u.xzzy)
    assert(Vec4i(x, z, z, z) == u.xzzz)
    assert(Vec4i(x, z, z, w) == u.xzzw)
    assert(Vec4i(x, z, w, x) == u.xzwx)
    assert(Vec4i(x, z, w, y) == u.xzwy)
    assert(Vec4i(x, z, w, z) == u.xzwz)
    assert(Vec4i(x, z, w, w) == u.xzww)
    assert(Vec4i(x, w, x, x) == u.xwxx)
    assert(Vec4i(x, w, x, y) == u.xwxy)
    assert(Vec4i(x, w, x, z) == u.xwxz)
    assert(Vec4i(x, w, x, w) == u.xwxw)
    assert(Vec4i(x, w, y, x) == u.xwyx)
    assert(Vec4i(x, w, y, y) == u.xwyy)
    assert(Vec4i(x, w, y, z) == u.xwyz)
    assert(Vec4i(x, w, y, w) == u.xwyw)
    assert(Vec4i(x, w, z, x) == u.xwzx)
    assert(Vec4i(x, w, z, y) == u.xwzy)
    assert(Vec4i(x, w, z, z) == u.xwzz)
    assert(Vec4i(x, w, z, w) == u.xwzw)
    assert(Vec4i(x, w, w, x) == u.xwwx)
    assert(Vec4i(x, w, w, y) == u.xwwy)
    assert(Vec4i(x, w, w, z) == u.xwwz)
    assert(Vec4i(x, w, w, w) == u.xwww)
    assert(Vec4i(y, x, x, x) == u.yxxx)
    assert(Vec4i(y, x, x, y) == u.yxxy)
    assert(Vec4i(y, x, x, z) == u.yxxz)
    assert(Vec4i(y, x, x, w) == u.yxxw)
    assert(Vec4i(y, x, y, x) == u.yxyx)
    assert(Vec4i(y, x, y, y) == u.yxyy)
    assert(Vec4i(y, x, y, z) == u.yxyz)
    assert(Vec4i(y, x, y, w) == u.yxyw)
    assert(Vec4i(y, x, z, x) == u.yxzx)
    assert(Vec4i(y, x, z, y) == u.yxzy)
    assert(Vec4i(y, x, z, z) == u.yxzz)
    assert(Vec4i(y, x, z, w) == u.yxzw)
    assert(Vec4i(y, x, w, x) == u.yxwx)
    assert(Vec4i(y, x, w, y) == u.yxwy)
    assert(Vec4i(y, x, w, z) == u.yxwz)
    assert(Vec4i(y, x, w, w) == u.yxww)
    assert(Vec4i(y, y, x, x) == u.yyxx)
    assert(Vec4i(y, y, x, y) == u.yyxy)
    assert(Vec4i(y, y, x, z) == u.yyxz)
    assert(Vec4i(y, y, x, w) == u.yyxw)
    assert(Vec4i(y, y, y, x) == u.yyyx)
    assert(Vec4i(y, y, y, y) == u.yyyy)
    assert(Vec4i(y, y, y, z) == u.yyyz)
    assert(Vec4i(y, y, y, w) == u.yyyw)
    assert(Vec4i(y, y, z, x) == u.yyzx)
    assert(Vec4i(y, y, z, y) == u.yyzy)
    assert(Vec4i(y, y, z, z) == u.yyzz)
    assert(Vec4i(y, y, z, w) == u.yyzw)
    assert(Vec4i(y, y, w, x) == u.yywx)
    assert(Vec4i(y, y, w, y) == u.yywy)
    assert(Vec4i(y, y, w, z) == u.yywz)
    assert(Vec4i(y, y, w, w) == u.yyww)
    assert(Vec4i(y, z, x, x) == u.yzxx)
    assert(Vec4i(y, z, x, y) == u.yzxy)
    assert(Vec4i(y, z, x, z) == u.yzxz)
    assert(Vec4i(y, z, x, w) == u.yzxw)
    assert(Vec4i(y, z, y, x) == u.yzyx)
    assert(Vec4i(y, z, y, y) == u.yzyy)
    assert(Vec4i(y, z, y, z) == u.yzyz)
    assert(Vec4i(y, z, y, w) == u.yzyw)
    assert(Vec4i(y, z, z, x) == u.yzzx)
    assert(Vec4i(y, z, z, y) == u.yzzy)
    assert(Vec4i(y, z, z, z) == u.yzzz)
    assert(Vec4i(y, z, z, w) == u.yzzw)
    assert(Vec4i(y, z, w, x) == u.yzwx)
    assert(Vec4i(y, z, w, y) == u.yzwy)
    assert(Vec4i(y, z, w, z) == u.yzwz)
    assert(Vec4i(y, z, w, w) == u.yzww)
    assert(Vec4i(y, w, x, x) == u.ywxx)
    assert(Vec4i(y, w, x, y) == u.ywxy)
    assert(Vec4i(y, w, x, z) == u.ywxz)
    assert(Vec4i(y, w, x, w) == u.ywxw)
    assert(Vec4i(y, w, y, x) == u.ywyx)
    assert(Vec4i(y, w, y, y) == u.ywyy)
    assert(Vec4i(y, w, y, z) == u.ywyz)
    assert(Vec4i(y, w, y, w) == u.ywyw)
    assert(Vec4i(y, w, z, x) == u.ywzx)
    assert(Vec4i(y, w, z, y) == u.ywzy)
    assert(Vec4i(y, w, z, z) == u.ywzz)
    assert(Vec4i(y, w, z, w) == u.ywzw)
    assert(Vec4i(y, w, w, x) == u.ywwx)
    assert(Vec4i(y, w, w, y) == u.ywwy)
    assert(Vec4i(y, w, w, z) == u.ywwz)
    assert(Vec4i(y, w, w, w) == u.ywww)
    assert(Vec4i(z, x, x, x) == u.zxxx)
    assert(Vec4i(z, x, x, y) == u.zxxy)
    assert(Vec4i(z, x, x, z) == u.zxxz)
    assert(Vec4i(z, x, x, w) == u.zxxw)
    assert(Vec4i(z, x, y, x) == u.zxyx)
    assert(Vec4i(z, x, y, y) == u.zxyy)
    assert(Vec4i(z, x, y, z) == u.zxyz)
    assert(Vec4i(z, x, y, w) == u.zxyw)
    assert(Vec4i(z, x, z, x) == u.zxzx)
    assert(Vec4i(z, x, z, y) == u.zxzy)
    assert(Vec4i(z, x, z, z) == u.zxzz)
    assert(Vec4i(z, x, z, w) == u.zxzw)
    assert(Vec4i(z, x, w, x) == u.zxwx)
    assert(Vec4i(z, x, w, y) == u.zxwy)
    assert(Vec4i(z, x, w, z) == u.zxwz)
    assert(Vec4i(z, x, w, w) == u.zxww)
    assert(Vec4i(z, y, x, x) == u.zyxx)
    assert(Vec4i(z, y, x, y) == u.zyxy)
    assert(Vec4i(z, y, x, z) == u.zyxz)
    assert(Vec4i(z, y, x, w) == u.zyxw)
    assert(Vec4i(z, y, y, x) == u.zyyx)
    assert(Vec4i(z, y, y, y) == u.zyyy)
    assert(Vec4i(z, y, y, z) == u.zyyz)
    assert(Vec4i(z, y, y, w) == u.zyyw)
    assert(Vec4i(z, y, z, x) == u.zyzx)
    assert(Vec4i(z, y, z, y) == u.zyzy)
    assert(Vec4i(z, y, z, z) == u.zyzz)
    assert(Vec4i(z, y, z, w) == u.zyzw)
    assert(Vec4i(z, y, w, x) == u.zywx)
    assert(Vec4i(z, y, w, y) == u.zywy)
    assert(Vec4i(z, y, w, z) == u.zywz)
    assert(Vec4i(z, y, w, w) == u.zyww)
    assert(Vec4i(z, z, x, x) == u.zzxx)
    assert(Vec4i(z, z, x, y) == u.zzxy)
    assert(Vec4i(z, z, x, z) == u.zzxz)
    assert(Vec4i(z, z, x, w) == u.zzxw)
    assert(Vec4i(z, z, y, x) == u.zzyx)
    assert(Vec4i(z, z, y, y) == u.zzyy)
    assert(Vec4i(z, z, y, z) == u.zzyz)
    assert(Vec4i(z, z, y, w) == u.zzyw)
    assert(Vec4i(z, z, z, x) == u.zzzx)
    assert(Vec4i(z, z, z, y) == u.zzzy)
    assert(Vec4i(z, z, z, z) == u.zzzz)
    assert(Vec4i(z, z, z, w) == u.zzzw)
    assert(Vec4i(z, z, w, x) == u.zzwx)
    assert(Vec4i(z, z, w, y) == u.zzwy)
    assert(Vec4i(z, z, w, z) == u.zzwz)
    assert(Vec4i(z, z, w, w) == u.zzww)
    assert(Vec4i(z, w, x, x) == u.zwxx)
    assert(Vec4i(z, w, x, y) == u.zwxy)
    assert(Vec4i(z, w, x, z) == u.zwxz)
    assert(Vec4i(z, w, x, w) == u.zwxw)
    assert(Vec4i(z, w, y, x) == u.zwyx)
    assert(Vec4i(z, w, y, y) == u.zwyy)
    assert(Vec4i(z, w, y, z) == u.zwyz)
    assert(Vec4i(z, w, y, w) == u.zwyw)
    assert(Vec4i(z, w, z, x) == u.zwzx)
    assert(Vec4i(z, w, z, y) == u.zwzy)
    assert(Vec4i(z, w, z, z) == u.zwzz)
    assert(Vec4i(z, w, z, w) == u.zwzw)
    assert(Vec4i(z, w, w, x) == u.zwwx)
    assert(Vec4i(z, w, w, y) == u.zwwy)
    assert(Vec4i(z, w, w, z) == u.zwwz)
    assert(Vec4i(z, w, w, w) == u.zwww)
    assert(Vec4i(w, x, x, x) == u.wxxx)
    assert(Vec4i(w, x, x, y) == u.wxxy)
    assert(Vec4i(w, x, x, z) == u.wxxz)
    assert(Vec4i(w, x, x, w) == u.wxxw)
    assert(Vec4i(w, x, y, x) == u.wxyx)
    assert(Vec4i(w, x, y, y) == u.wxyy)
    assert(Vec4i(w, x, y, z) == u.wxyz)
    assert(Vec4i(w, x, y, w) == u.wxyw)
    assert(Vec4i(w, x, z, x) == u.wxzx)
    assert(Vec4i(w, x, z, y) == u.wxzy)
    assert(Vec4i(w, x, z, z) == u.wxzz)
    assert(Vec4i(w, x, z, w) == u.wxzw)
    assert(Vec4i(w, x, w, x) == u.wxwx)
    assert(Vec4i(w, x, w, y) == u.wxwy)
    assert(Vec4i(w, x, w, z) == u.wxwz)
    assert(Vec4i(w, x, w, w) == u.wxww)
    assert(Vec4i(w, y, x, x) == u.wyxx)
    assert(Vec4i(w, y, x, y) == u.wyxy)
    assert(Vec4i(w, y, x, z) == u.wyxz)
    assert(Vec4i(w, y, x, w) == u.wyxw)
    assert(Vec4i(w, y, y, x) == u.wyyx)
    assert(Vec4i(w, y, y, y) == u.wyyy)
    assert(Vec4i(w, y, y, z) == u.wyyz)
    assert(Vec4i(w, y, y, w) == u.wyyw)
    assert(Vec4i(w, y, z, x) == u.wyzx)
    assert(Vec4i(w, y, z, y) == u.wyzy)
    assert(Vec4i(w, y, z, z) == u.wyzz)
    assert(Vec4i(w, y, z, w) == u.wyzw)
    assert(Vec4i(w, y, w, x) == u.wywx)
    assert(Vec4i(w, y, w, y) == u.wywy)
    assert(Vec4i(w, y, w, z) == u.wywz)
    assert(Vec4i(w, y, w, w) == u.wyww)
    assert(Vec4i(w, z, x, x) == u.wzxx)
    assert(Vec4i(w, z, x, y) == u.wzxy)
    assert(Vec4i(w, z, x, z) == u.wzxz)
    assert(Vec4i(w, z, x, w) == u.wzxw)
    assert(Vec4i(w, z, y, x) == u.wzyx)
    assert(Vec4i(w, z, y, y) == u.wzyy)
    assert(Vec4i(w, z, y, z) == u.wzyz)
    assert(Vec4i(w, z, y, w) == u.wzyw)
    assert(Vec4i(w, z, z, x) == u.wzzx)
    assert(Vec4i(w, z, z, y) == u.wzzy)
    assert(Vec4i(w, z, z, z) == u.wzzz)
    assert(Vec4i(w, z, z, w) == u.wzzw)
    assert(Vec4i(w, z, w, x) == u.wzwx)
    assert(Vec4i(w, z, w, y) == u.wzwy)
    assert(Vec4i(w, z, w, z) == u.wzwz)
    assert(Vec4i(w, z, w, w) == u.wzww)
    assert(Vec4i(w, w, x, x) == u.wwxx)
    assert(Vec4i(w, w, x, y) == u.wwxy)
    assert(Vec4i(w, w, x, z) == u.wwxz)
    assert(Vec4i(w, w, x, w) == u.wwxw)
    assert(Vec4i(w, w, y, x) == u.wwyx)
    assert(Vec4i(w, w, y, y) == u.wwyy)
    assert(Vec4i(w, w, y, z) == u.wwyz)
    assert(Vec4i(w, w, y, w) == u.wwyw)
    assert(Vec4i(w, w, z, x) == u.wwzx)
    assert(Vec4i(w, w, z, y) == u.wwzy)
    assert(Vec4i(w, w, z, z) == u.wwzz)
    assert(Vec4i(w, w, z, w) == u.wwzw)
    assert(Vec4i(w, w, w, x) == u.wwwx)
    assert(Vec4i(w, w, w, y) == u.wwwy)
    assert(Vec4i(w, w, w, z) == u.wwwz)
    assert(Vec4i(w, w, w, w) == u.wwww)

    assert(Vec2i(x, x) == u.rr)
    assert(Vec2i(x, y) == u.rg)
    assert(Vec2i(x, z) == u.rb)
    assert(Vec2i(x, w) == u.ra)
    assert(Vec2i(y, x) == u.gr)
    assert(Vec2i(y, y) == u.gg)
    assert(Vec2i(y, z) == u.gb)
    assert(Vec2i(y, w) == u.ga)
    assert(Vec2i(z, x) == u.br)
    assert(Vec2i(z, y) == u.bg)
    assert(Vec2i(z, z) == u.bb)
    assert(Vec2i(z, w) == u.ba)
    assert(Vec2i(w, x) == u.ar)
    assert(Vec2i(w, y) == u.ag)
    assert(Vec2i(w, z) == u.ab)
    assert(Vec2i(w, w) == u.aa)
    assert(Vec3i(x, x, x) == u.rrr)
    assert(Vec3i(x, x, y) == u.rrg)
    assert(Vec3i(x, x, z) == u.rrb)
    assert(Vec3i(x, x, w) == u.rra)
    assert(Vec3i(x, y, x) == u.rgr)
    assert(Vec3i(x, y, y) == u.rgg)
    assert(Vec3i(x, y, z) == u.rgb)
    assert(Vec3i(x, y, w) == u.rga)
    assert(Vec3i(x, z, x) == u.rbr)
    assert(Vec3i(x, z, y) == u.rbg)
    assert(Vec3i(x, z, z) == u.rbb)
    assert(Vec3i(x, z, w) == u.rba)
    assert(Vec3i(x, w, x) == u.rar)
    assert(Vec3i(x, w, y) == u.rag)
    assert(Vec3i(x, w, z) == u.rab)
    assert(Vec3i(x, w, w) == u.raa)
    assert(Vec3i(y, x, x) == u.grr)
    assert(Vec3i(y, x, y) == u.grg)
    assert(Vec3i(y, x, z) == u.grb)
    assert(Vec3i(y, x, w) == u.gra)
    assert(Vec3i(y, y, x) == u.ggr)
    assert(Vec3i(y, y, y) == u.ggg)
    assert(Vec3i(y, y, z) == u.ggb)
    assert(Vec3i(y, y, w) == u.gga)
    assert(Vec3i(y, z, x) == u.gbr)
    assert(Vec3i(y, z, y) == u.gbg)
    assert(Vec3i(y, z, z) == u.gbb)
    assert(Vec3i(y, z, w) == u.gba)
    assert(Vec3i(y, w, x) == u.gar)
    assert(Vec3i(y, w, y) == u.gag)
    assert(Vec3i(y, w, z) == u.gab)
    assert(Vec3i(y, w, w) == u.gaa)
    assert(Vec3i(z, x, x) == u.brr)
    assert(Vec3i(z, x, y) == u.brg)
    assert(Vec3i(z, x, z) == u.brb)
    assert(Vec3i(z, x, w) == u.bra)
    assert(Vec3i(z, y, x) == u.bgr)
    assert(Vec3i(z, y, y) == u.bgg)
    assert(Vec3i(z, y, z) == u.bgb)
    assert(Vec3i(z, y, w) == u.bga)
    assert(Vec3i(z, z, x) == u.bbr)
    assert(Vec3i(z, z, y) == u.bbg)
    assert(Vec3i(z, z, z) == u.bbb)
    assert(Vec3i(z, z, w) == u.bba)
    assert(Vec3i(z, w, x) == u.bar)
    assert(Vec3i(z, w, y) == u.bag)
    assert(Vec3i(z, w, z) == u.bab)
    assert(Vec3i(z, w, w) == u.baa)
    assert(Vec3i(w, x, x) == u.arr)
    assert(Vec3i(w, x, y) == u.arg)
    assert(Vec3i(w, x, z) == u.arb)
    assert(Vec3i(w, x, w) == u.ara)
    assert(Vec3i(w, y, x) == u.agr)
    assert(Vec3i(w, y, y) == u.agg)
    assert(Vec3i(w, y, z) == u.agb)
    assert(Vec3i(w, y, w) == u.aga)
    assert(Vec3i(w, z, x) == u.abr)
    assert(Vec3i(w, z, y) == u.abg)
    assert(Vec3i(w, z, z) == u.abb)
    assert(Vec3i(w, z, w) == u.aba)
    assert(Vec3i(w, w, x) == u.aar)
    assert(Vec3i(w, w, y) == u.aag)
    assert(Vec3i(w, w, z) == u.aab)
    assert(Vec3i(w, w, w) == u.aaa)
    assert(Vec4i(x, x, x, x) == u.rrrr)
    assert(Vec4i(x, x, x, y) == u.rrrg)
    assert(Vec4i(x, x, x, z) == u.rrrb)
    assert(Vec4i(x, x, x, w) == u.rrra)
    assert(Vec4i(x, x, y, x) == u.rrgr)
    assert(Vec4i(x, x, y, y) == u.rrgg)
    assert(Vec4i(x, x, y, z) == u.rrgb)
    assert(Vec4i(x, x, y, w) == u.rrga)
    assert(Vec4i(x, x, z, x) == u.rrbr)
    assert(Vec4i(x, x, z, y) == u.rrbg)
    assert(Vec4i(x, x, z, z) == u.rrbb)
    assert(Vec4i(x, x, z, w) == u.rrba)
    assert(Vec4i(x, x, w, x) == u.rrar)
    assert(Vec4i(x, x, w, y) == u.rrag)
    assert(Vec4i(x, x, w, z) == u.rrab)
    assert(Vec4i(x, x, w, w) == u.rraa)
    assert(Vec4i(x, y, x, x) == u.rgrr)
    assert(Vec4i(x, y, x, y) == u.rgrg)
    assert(Vec4i(x, y, x, z) == u.rgrb)
    assert(Vec4i(x, y, x, w) == u.rgra)
    assert(Vec4i(x, y, y, x) == u.rggr)
    assert(Vec4i(x, y, y, y) == u.rggg)
    assert(Vec4i(x, y, y, z) == u.rggb)
    assert(Vec4i(x, y, y, w) == u.rgga)
    assert(Vec4i(x, y, z, x) == u.rgbr)
    assert(Vec4i(x, y, z, y) == u.rgbg)
    assert(Vec4i(x, y, z, z) == u.rgbb)
    assert(Vec4i(x, y, z, w) == u.rgba)
    assert(Vec4i(x, y, w, x) == u.rgar)
    assert(Vec4i(x, y, w, y) == u.rgag)
    assert(Vec4i(x, y, w, z) == u.rgab)
    assert(Vec4i(x, y, w, w) == u.rgaa)
    assert(Vec4i(x, z, x, x) == u.rbrr)
    assert(Vec4i(x, z, x, y) == u.rbrg)
    assert(Vec4i(x, z, x, z) == u.rbrb)
    assert(Vec4i(x, z, x, w) == u.rbra)
    assert(Vec4i(x, z, y, x) == u.rbgr)
    assert(Vec4i(x, z, y, y) == u.rbgg)
    assert(Vec4i(x, z, y, z) == u.rbgb)
    assert(Vec4i(x, z, y, w) == u.rbga)
    assert(Vec4i(x, z, z, x) == u.rbbr)
    assert(Vec4i(x, z, z, y) == u.rbbg)
    assert(Vec4i(x, z, z, z) == u.rbbb)
    assert(Vec4i(x, z, z, w) == u.rbba)
    assert(Vec4i(x, z, w, x) == u.rbar)
    assert(Vec4i(x, z, w, y) == u.rbag)
    assert(Vec4i(x, z, w, z) == u.rbab)
    assert(Vec4i(x, z, w, w) == u.rbaa)
    assert(Vec4i(x, w, x, x) == u.rarr)
    assert(Vec4i(x, w, x, y) == u.rarg)
    assert(Vec4i(x, w, x, z) == u.rarb)
    assert(Vec4i(x, w, x, w) == u.rara)
    assert(Vec4i(x, w, y, x) == u.ragr)
    assert(Vec4i(x, w, y, y) == u.ragg)
    assert(Vec4i(x, w, y, z) == u.ragb)
    assert(Vec4i(x, w, y, w) == u.raga)
    assert(Vec4i(x, w, z, x) == u.rabr)
    assert(Vec4i(x, w, z, y) == u.rabg)
    assert(Vec4i(x, w, z, z) == u.rabb)
    assert(Vec4i(x, w, z, w) == u.raba)
    assert(Vec4i(x, w, w, x) == u.raar)
    assert(Vec4i(x, w, w, y) == u.raag)
    assert(Vec4i(x, w, w, z) == u.raab)
    assert(Vec4i(x, w, w, w) == u.raaa)
    assert(Vec4i(y, x, x, x) == u.grrr)
    assert(Vec4i(y, x, x, y) == u.grrg)
    assert(Vec4i(y, x, x, z) == u.grrb)
    assert(Vec4i(y, x, x, w) == u.grra)
    assert(Vec4i(y, x, y, x) == u.grgr)
    assert(Vec4i(y, x, y, y) == u.grgg)
    assert(Vec4i(y, x, y, z) == u.grgb)
    assert(Vec4i(y, x, y, w) == u.grga)
    assert(Vec4i(y, x, z, x) == u.grbr)
    assert(Vec4i(y, x, z, y) == u.grbg)
    assert(Vec4i(y, x, z, z) == u.grbb)
    assert(Vec4i(y, x, z, w) == u.grba)
    assert(Vec4i(y, x, w, x) == u.grar)
    assert(Vec4i(y, x, w, y) == u.grag)
    assert(Vec4i(y, x, w, z) == u.grab)
    assert(Vec4i(y, x, w, w) == u.graa)
    assert(Vec4i(y, y, x, x) == u.ggrr)
    assert(Vec4i(y, y, x, y) == u.ggrg)
    assert(Vec4i(y, y, x, z) == u.ggrb)
    assert(Vec4i(y, y, x, w) == u.ggra)
    assert(Vec4i(y, y, y, x) == u.gggr)
    assert(Vec4i(y, y, y, y) == u.gggg)
    assert(Vec4i(y, y, y, z) == u.gggb)
    assert(Vec4i(y, y, y, w) == u.ggga)
    assert(Vec4i(y, y, z, x) == u.ggbr)
    assert(Vec4i(y, y, z, y) == u.ggbg)
    assert(Vec4i(y, y, z, z) == u.ggbb)
    assert(Vec4i(y, y, z, w) == u.ggba)
    assert(Vec4i(y, y, w, x) == u.ggar)
    assert(Vec4i(y, y, w, y) == u.ggag)
    assert(Vec4i(y, y, w, z) == u.ggab)
    assert(Vec4i(y, y, w, w) == u.ggaa)
    assert(Vec4i(y, z, x, x) == u.gbrr)
    assert(Vec4i(y, z, x, y) == u.gbrg)
    assert(Vec4i(y, z, x, z) == u.gbrb)
    assert(Vec4i(y, z, x, w) == u.gbra)
    assert(Vec4i(y, z, y, x) == u.gbgr)
    assert(Vec4i(y, z, y, y) == u.gbgg)
    assert(Vec4i(y, z, y, z) == u.gbgb)
    assert(Vec4i(y, z, y, w) == u.gbga)
    assert(Vec4i(y, z, z, x) == u.gbbr)
    assert(Vec4i(y, z, z, y) == u.gbbg)
    assert(Vec4i(y, z, z, z) == u.gbbb)
    assert(Vec4i(y, z, z, w) == u.gbba)
    assert(Vec4i(y, z, w, x) == u.gbar)
    assert(Vec4i(y, z, w, y) == u.gbag)
    assert(Vec4i(y, z, w, z) == u.gbab)
    assert(Vec4i(y, z, w, w) == u.gbaa)
    assert(Vec4i(y, w, x, x) == u.garr)
    assert(Vec4i(y, w, x, y) == u.garg)
    assert(Vec4i(y, w, x, z) == u.garb)
    assert(Vec4i(y, w, x, w) == u.gara)
    assert(Vec4i(y, w, y, x) == u.gagr)
    assert(Vec4i(y, w, y, y) == u.gagg)
    assert(Vec4i(y, w, y, z) == u.gagb)
    assert(Vec4i(y, w, y, w) == u.gaga)
    assert(Vec4i(y, w, z, x) == u.gabr)
    assert(Vec4i(y, w, z, y) == u.gabg)
    assert(Vec4i(y, w, z, z) == u.gabb)
    assert(Vec4i(y, w, z, w) == u.gaba)
    assert(Vec4i(y, w, w, x) == u.gaar)
    assert(Vec4i(y, w, w, y) == u.gaag)
    assert(Vec4i(y, w, w, z) == u.gaab)
    assert(Vec4i(y, w, w, w) == u.gaaa)
    assert(Vec4i(z, x, x, x) == u.brrr)
    assert(Vec4i(z, x, x, y) == u.brrg)
    assert(Vec4i(z, x, x, z) == u.brrb)
    assert(Vec4i(z, x, x, w) == u.brra)
    assert(Vec4i(z, x, y, x) == u.brgr)
    assert(Vec4i(z, x, y, y) == u.brgg)
    assert(Vec4i(z, x, y, z) == u.brgb)
    assert(Vec4i(z, x, y, w) == u.brga)
    assert(Vec4i(z, x, z, x) == u.brbr)
    assert(Vec4i(z, x, z, y) == u.brbg)
    assert(Vec4i(z, x, z, z) == u.brbb)
    assert(Vec4i(z, x, z, w) == u.brba)
    assert(Vec4i(z, x, w, x) == u.brar)
    assert(Vec4i(z, x, w, y) == u.brag)
    assert(Vec4i(z, x, w, z) == u.brab)
    assert(Vec4i(z, x, w, w) == u.braa)
    assert(Vec4i(z, y, x, x) == u.bgrr)
    assert(Vec4i(z, y, x, y) == u.bgrg)
    assert(Vec4i(z, y, x, z) == u.bgrb)
    assert(Vec4i(z, y, x, w) == u.bgra)
    assert(Vec4i(z, y, y, x) == u.bggr)
    assert(Vec4i(z, y, y, y) == u.bggg)
    assert(Vec4i(z, y, y, z) == u.bggb)
    assert(Vec4i(z, y, y, w) == u.bgga)
    assert(Vec4i(z, y, z, x) == u.bgbr)
    assert(Vec4i(z, y, z, y) == u.bgbg)
    assert(Vec4i(z, y, z, z) == u.bgbb)
    assert(Vec4i(z, y, z, w) == u.bgba)
    assert(Vec4i(z, y, w, x) == u.bgar)
    assert(Vec4i(z, y, w, y) == u.bgag)
    assert(Vec4i(z, y, w, z) == u.bgab)
    assert(Vec4i(z, y, w, w) == u.bgaa)
    assert(Vec4i(z, z, x, x) == u.bbrr)
    assert(Vec4i(z, z, x, y) == u.bbrg)
    assert(Vec4i(z, z, x, z) == u.bbrb)
    assert(Vec4i(z, z, x, w) == u.bbra)
    assert(Vec4i(z, z, y, x) == u.bbgr)
    assert(Vec4i(z, z, y, y) == u.bbgg)
    assert(Vec4i(z, z, y, z) == u.bbgb)
    assert(Vec4i(z, z, y, w) == u.bbga)
    assert(Vec4i(z, z, z, x) == u.bbbr)
    assert(Vec4i(z, z, z, y) == u.bbbg)
    assert(Vec4i(z, z, z, z) == u.bbbb)
    assert(Vec4i(z, z, z, w) == u.bbba)
    assert(Vec4i(z, z, w, x) == u.bbar)
    assert(Vec4i(z, z, w, y) == u.bbag)
    assert(Vec4i(z, z, w, z) == u.bbab)
    assert(Vec4i(z, z, w, w) == u.bbaa)
    assert(Vec4i(z, w, x, x) == u.barr)
    assert(Vec4i(z, w, x, y) == u.barg)
    assert(Vec4i(z, w, x, z) == u.barb)
    assert(Vec4i(z, w, x, w) == u.bara)
    assert(Vec4i(z, w, y, x) == u.bagr)
    assert(Vec4i(z, w, y, y) == u.bagg)
    assert(Vec4i(z, w, y, z) == u.bagb)
    assert(Vec4i(z, w, y, w) == u.baga)
    assert(Vec4i(z, w, z, x) == u.babr)
    assert(Vec4i(z, w, z, y) == u.babg)
    assert(Vec4i(z, w, z, z) == u.babb)
    assert(Vec4i(z, w, z, w) == u.baba)
    assert(Vec4i(z, w, w, x) == u.baar)
    assert(Vec4i(z, w, w, y) == u.baag)
    assert(Vec4i(z, w, w, z) == u.baab)
    assert(Vec4i(z, w, w, w) == u.baaa)
    assert(Vec4i(w, x, x, x) == u.arrr)
    assert(Vec4i(w, x, x, y) == u.arrg)
    assert(Vec4i(w, x, x, z) == u.arrb)
    assert(Vec4i(w, x, x, w) == u.arra)
    assert(Vec4i(w, x, y, x) == u.argr)
    assert(Vec4i(w, x, y, y) == u.argg)
    assert(Vec4i(w, x, y, z) == u.argb)
    assert(Vec4i(w, x, y, w) == u.arga)
    assert(Vec4i(w, x, z, x) == u.arbr)
    assert(Vec4i(w, x, z, y) == u.arbg)
    assert(Vec4i(w, x, z, z) == u.arbb)
    assert(Vec4i(w, x, z, w) == u.arba)
    assert(Vec4i(w, x, w, x) == u.arar)
    assert(Vec4i(w, x, w, y) == u.arag)
    assert(Vec4i(w, x, w, z) == u.arab)
    assert(Vec4i(w, x, w, w) == u.araa)
    assert(Vec4i(w, y, x, x) == u.agrr)
    assert(Vec4i(w, y, x, y) == u.agrg)
    assert(Vec4i(w, y, x, z) == u.agrb)
    assert(Vec4i(w, y, x, w) == u.agra)
    assert(Vec4i(w, y, y, x) == u.aggr)
    assert(Vec4i(w, y, y, y) == u.aggg)
    assert(Vec4i(w, y, y, z) == u.aggb)
    assert(Vec4i(w, y, y, w) == u.agga)
    assert(Vec4i(w, y, z, x) == u.agbr)
    assert(Vec4i(w, y, z, y) == u.agbg)
    assert(Vec4i(w, y, z, z) == u.agbb)
    assert(Vec4i(w, y, z, w) == u.agba)
    assert(Vec4i(w, y, w, x) == u.agar)
    assert(Vec4i(w, y, w, y) == u.agag)
    assert(Vec4i(w, y, w, z) == u.agab)
    assert(Vec4i(w, y, w, w) == u.agaa)
    assert(Vec4i(w, z, x, x) == u.abrr)
    assert(Vec4i(w, z, x, y) == u.abrg)
    assert(Vec4i(w, z, x, z) == u.abrb)
    assert(Vec4i(w, z, x, w) == u.abra)
    assert(Vec4i(w, z, y, x) == u.abgr)
    assert(Vec4i(w, z, y, y) == u.abgg)
    assert(Vec4i(w, z, y, z) == u.abgb)
    assert(Vec4i(w, z, y, w) == u.abga)
    assert(Vec4i(w, z, z, x) == u.abbr)
    assert(Vec4i(w, z, z, y) == u.abbg)
    assert(Vec4i(w, z, z, z) == u.abbb)
    assert(Vec4i(w, z, z, w) == u.abba)
    assert(Vec4i(w, z, w, x) == u.abar)
    assert(Vec4i(w, z, w, y) == u.abag)
    assert(Vec4i(w, z, w, z) == u.abab)
    assert(Vec4i(w, z, w, w) == u.abaa)
    assert(Vec4i(w, w, x, x) == u.aarr)
    assert(Vec4i(w, w, x, y) == u.aarg)
    assert(Vec4i(w, w, x, z) == u.aarb)
    assert(Vec4i(w, w, x, w) == u.aara)
    assert(Vec4i(w, w, y, x) == u.aagr)
    assert(Vec4i(w, w, y, y) == u.aagg)
    assert(Vec4i(w, w, y, z) == u.aagb)
    assert(Vec4i(w, w, y, w) == u.aaga)
    assert(Vec4i(w, w, z, x) == u.aabr)
    assert(Vec4i(w, w, z, y) == u.aabg)
    assert(Vec4i(w, w, z, z) == u.aabb)
    assert(Vec4i(w, w, z, w) == u.aaba)
    assert(Vec4i(w, w, w, x) == u.aaar)
    assert(Vec4i(w, w, w, y) == u.aaag)
    assert(Vec4i(w, w, w, z) == u.aaab)
    assert(Vec4i(w, w, w, w) == u.aaaa)

    assert(Vec2i(x, x) == u.ss)
    assert(Vec2i(x, y) == u.st)
    assert(Vec2i(x, z) == u.sp)
    assert(Vec2i(x, w) == u.sq)
    assert(Vec2i(y, x) == u.ts)
    assert(Vec2i(y, y) == u.tt)
    assert(Vec2i(y, z) == u.tp)
    assert(Vec2i(y, w) == u.tq)
    assert(Vec2i(z, x) == u.ps)
    assert(Vec2i(z, y) == u.pt)
    assert(Vec2i(z, z) == u.pp)
    assert(Vec2i(z, w) == u.pq)
    assert(Vec2i(w, x) == u.qs)
    assert(Vec2i(w, y) == u.qt)
    assert(Vec2i(w, z) == u.qp)
    assert(Vec2i(w, w) == u.qq)
    assert(Vec3i(x, x, x) == u.sss)
    assert(Vec3i(x, x, y) == u.sst)
    assert(Vec3i(x, x, z) == u.ssp)
    assert(Vec3i(x, x, w) == u.ssq)
    assert(Vec3i(x, y, x) == u.sts)
    assert(Vec3i(x, y, y) == u.stt)
    assert(Vec3i(x, y, z) == u.stp)
    assert(Vec3i(x, y, w) == u.stq)
    assert(Vec3i(x, z, x) == u.sps)
    assert(Vec3i(x, z, y) == u.spt)
    assert(Vec3i(x, z, z) == u.spp)
    assert(Vec3i(x, z, w) == u.spq)
    assert(Vec3i(x, w, x) == u.sqs)
    assert(Vec3i(x, w, y) == u.sqt)
    assert(Vec3i(x, w, z) == u.sqp)
    assert(Vec3i(x, w, w) == u.sqq)
    assert(Vec3i(y, x, x) == u.tss)
    assert(Vec3i(y, x, y) == u.tst)
    assert(Vec3i(y, x, z) == u.tsp)
    assert(Vec3i(y, x, w) == u.tsq)
    assert(Vec3i(y, y, x) == u.tts)
    assert(Vec3i(y, y, y) == u.ttt)
    assert(Vec3i(y, y, z) == u.ttp)
    assert(Vec3i(y, y, w) == u.ttq)
    assert(Vec3i(y, z, x) == u.tps)
    assert(Vec3i(y, z, y) == u.tpt)
    assert(Vec3i(y, z, z) == u.tpp)
    assert(Vec3i(y, z, w) == u.tpq)
    assert(Vec3i(y, w, x) == u.tqs)
    assert(Vec3i(y, w, y) == u.tqt)
    assert(Vec3i(y, w, z) == u.tqp)
    assert(Vec3i(y, w, w) == u.tqq)
    assert(Vec3i(z, x, x) == u.pss)
    assert(Vec3i(z, x, y) == u.pst)
    assert(Vec3i(z, x, z) == u.psp)
    assert(Vec3i(z, x, w) == u.psq)
    assert(Vec3i(z, y, x) == u.pts)
    assert(Vec3i(z, y, y) == u.ptt)
    assert(Vec3i(z, y, z) == u.ptp)
    assert(Vec3i(z, y, w) == u.ptq)
    assert(Vec3i(z, z, x) == u.pps)
    assert(Vec3i(z, z, y) == u.ppt)
    assert(Vec3i(z, z, z) == u.ppp)
    assert(Vec3i(z, z, w) == u.ppq)
    assert(Vec3i(z, w, x) == u.pqs)
    assert(Vec3i(z, w, y) == u.pqt)
    assert(Vec3i(z, w, z) == u.pqp)
    assert(Vec3i(z, w, w) == u.pqq)
    assert(Vec3i(w, x, x) == u.qss)
    assert(Vec3i(w, x, y) == u.qst)
    assert(Vec3i(w, x, z) == u.qsp)
    assert(Vec3i(w, x, w) == u.qsq)
    assert(Vec3i(w, y, x) == u.qts)
    assert(Vec3i(w, y, y) == u.qtt)
    assert(Vec3i(w, y, z) == u.qtp)
    assert(Vec3i(w, y, w) == u.qtq)
    assert(Vec3i(w, z, x) == u.qps)
    assert(Vec3i(w, z, y) == u.qpt)
    assert(Vec3i(w, z, z) == u.qpp)
    assert(Vec3i(w, z, w) == u.qpq)
    assert(Vec3i(w, w, x) == u.qqs)
    assert(Vec3i(w, w, y) == u.qqt)
    assert(Vec3i(w, w, z) == u.qqp)
    assert(Vec3i(w, w, w) == u.qqq)
    assert(Vec4i(x, x, x, x) == u.ssss)
    assert(Vec4i(x, x, x, y) == u.ssst)
    assert(Vec4i(x, x, x, z) == u.sssp)
    assert(Vec4i(x, x, x, w) == u.sssq)
    assert(Vec4i(x, x, y, x) == u.ssts)
    assert(Vec4i(x, x, y, y) == u.sstt)
    assert(Vec4i(x, x, y, z) == u.sstp)
    assert(Vec4i(x, x, y, w) == u.sstq)
    assert(Vec4i(x, x, z, x) == u.ssps)
    assert(Vec4i(x, x, z, y) == u.sspt)
    assert(Vec4i(x, x, z, z) == u.sspp)
    assert(Vec4i(x, x, z, w) == u.sspq)
    assert(Vec4i(x, x, w, x) == u.ssqs)
    assert(Vec4i(x, x, w, y) == u.ssqt)
    assert(Vec4i(x, x, w, z) == u.ssqp)
    assert(Vec4i(x, x, w, w) == u.ssqq)
    assert(Vec4i(x, y, x, x) == u.stss)
    assert(Vec4i(x, y, x, y) == u.stst)
    assert(Vec4i(x, y, x, z) == u.stsp)
    assert(Vec4i(x, y, x, w) == u.stsq)
    assert(Vec4i(x, y, y, x) == u.stts)
    assert(Vec4i(x, y, y, y) == u.sttt)
    assert(Vec4i(x, y, y, z) == u.sttp)
    assert(Vec4i(x, y, y, w) == u.sttq)
    assert(Vec4i(x, y, z, x) == u.stps)
    assert(Vec4i(x, y, z, y) == u.stpt)
    assert(Vec4i(x, y, z, z) == u.stpp)
    assert(Vec4i(x, y, z, w) == u.stpq)
    assert(Vec4i(x, y, w, x) == u.stqs)
    assert(Vec4i(x, y, w, y) == u.stqt)
    assert(Vec4i(x, y, w, z) == u.stqp)
    assert(Vec4i(x, y, w, w) == u.stqq)
    assert(Vec4i(x, z, x, x) == u.spss)
    assert(Vec4i(x, z, x, y) == u.spst)
    assert(Vec4i(x, z, x, z) == u.spsp)
    assert(Vec4i(x, z, x, w) == u.spsq)
    assert(Vec4i(x, z, y, x) == u.spts)
    assert(Vec4i(x, z, y, y) == u.sptt)
    assert(Vec4i(x, z, y, z) == u.sptp)
    assert(Vec4i(x, z, y, w) == u.sptq)
    assert(Vec4i(x, z, z, x) == u.spps)
    assert(Vec4i(x, z, z, y) == u.sppt)
    assert(Vec4i(x, z, z, z) == u.sppp)
    assert(Vec4i(x, z, z, w) == u.sppq)
    assert(Vec4i(x, z, w, x) == u.spqs)
    assert(Vec4i(x, z, w, y) == u.spqt)
    assert(Vec4i(x, z, w, z) == u.spqp)
    assert(Vec4i(x, z, w, w) == u.spqq)
    assert(Vec4i(x, w, x, x) == u.sqss)
    assert(Vec4i(x, w, x, y) == u.sqst)
    assert(Vec4i(x, w, x, z) == u.sqsp)
    assert(Vec4i(x, w, x, w) == u.sqsq)
    assert(Vec4i(x, w, y, x) == u.sqts)
    assert(Vec4i(x, w, y, y) == u.sqtt)
    assert(Vec4i(x, w, y, z) == u.sqtp)
    assert(Vec4i(x, w, y, w) == u.sqtq)
    assert(Vec4i(x, w, z, x) == u.sqps)
    assert(Vec4i(x, w, z, y) == u.sqpt)
    assert(Vec4i(x, w, z, z) == u.sqpp)
    assert(Vec4i(x, w, z, w) == u.sqpq)
    assert(Vec4i(x, w, w, x) == u.sqqs)
    assert(Vec4i(x, w, w, y) == u.sqqt)
    assert(Vec4i(x, w, w, z) == u.sqqp)
    assert(Vec4i(x, w, w, w) == u.sqqq)
    assert(Vec4i(y, x, x, x) == u.tsss)
    assert(Vec4i(y, x, x, y) == u.tsst)
    assert(Vec4i(y, x, x, z) == u.tssp)
    assert(Vec4i(y, x, x, w) == u.tssq)
    assert(Vec4i(y, x, y, x) == u.tsts)
    assert(Vec4i(y, x, y, y) == u.tstt)
    assert(Vec4i(y, x, y, z) == u.tstp)
    assert(Vec4i(y, x, y, w) == u.tstq)
    assert(Vec4i(y, x, z, x) == u.tsps)
    assert(Vec4i(y, x, z, y) == u.tspt)
    assert(Vec4i(y, x, z, z) == u.tspp)
    assert(Vec4i(y, x, z, w) == u.tspq)
    assert(Vec4i(y, x, w, x) == u.tsqs)
    assert(Vec4i(y, x, w, y) == u.tsqt)
    assert(Vec4i(y, x, w, z) == u.tsqp)
    assert(Vec4i(y, x, w, w) == u.tsqq)
    assert(Vec4i(y, y, x, x) == u.ttss)
    assert(Vec4i(y, y, x, y) == u.ttst)
    assert(Vec4i(y, y, x, z) == u.ttsp)
    assert(Vec4i(y, y, x, w) == u.ttsq)
    assert(Vec4i(y, y, y, x) == u.ttts)
    assert(Vec4i(y, y, y, y) == u.tttt)
    assert(Vec4i(y, y, y, z) == u.tttp)
    assert(Vec4i(y, y, y, w) == u.tttq)
    assert(Vec4i(y, y, z, x) == u.ttps)
    assert(Vec4i(y, y, z, y) == u.ttpt)
    assert(Vec4i(y, y, z, z) == u.ttpp)
    assert(Vec4i(y, y, z, w) == u.ttpq)
    assert(Vec4i(y, y, w, x) == u.ttqs)
    assert(Vec4i(y, y, w, y) == u.ttqt)
    assert(Vec4i(y, y, w, z) == u.ttqp)
    assert(Vec4i(y, y, w, w) == u.ttqq)
    assert(Vec4i(y, z, x, x) == u.tpss)
    assert(Vec4i(y, z, x, y) == u.tpst)
    assert(Vec4i(y, z, x, z) == u.tpsp)
    assert(Vec4i(y, z, x, w) == u.tpsq)
    assert(Vec4i(y, z, y, x) == u.tpts)
    assert(Vec4i(y, z, y, y) == u.tptt)
    assert(Vec4i(y, z, y, z) == u.tptp)
    assert(Vec4i(y, z, y, w) == u.tptq)
    assert(Vec4i(y, z, z, x) == u.tpps)
    assert(Vec4i(y, z, z, y) == u.tppt)
    assert(Vec4i(y, z, z, z) == u.tppp)
    assert(Vec4i(y, z, z, w) == u.tppq)
    assert(Vec4i(y, z, w, x) == u.tpqs)
    assert(Vec4i(y, z, w, y) == u.tpqt)
    assert(Vec4i(y, z, w, z) == u.tpqp)
    assert(Vec4i(y, z, w, w) == u.tpqq)
    assert(Vec4i(y, w, x, x) == u.tqss)
    assert(Vec4i(y, w, x, y) == u.tqst)
    assert(Vec4i(y, w, x, z) == u.tqsp)
    assert(Vec4i(y, w, x, w) == u.tqsq)
    assert(Vec4i(y, w, y, x) == u.tqts)
    assert(Vec4i(y, w, y, y) == u.tqtt)
    assert(Vec4i(y, w, y, z) == u.tqtp)
    assert(Vec4i(y, w, y, w) == u.tqtq)
    assert(Vec4i(y, w, z, x) == u.tqps)
    assert(Vec4i(y, w, z, y) == u.tqpt)
    assert(Vec4i(y, w, z, z) == u.tqpp)
    assert(Vec4i(y, w, z, w) == u.tqpq)
    assert(Vec4i(y, w, w, x) == u.tqqs)
    assert(Vec4i(y, w, w, y) == u.tqqt)
    assert(Vec4i(y, w, w, z) == u.tqqp)
    assert(Vec4i(y, w, w, w) == u.tqqq)
    assert(Vec4i(z, x, x, x) == u.psss)
    assert(Vec4i(z, x, x, y) == u.psst)
    assert(Vec4i(z, x, x, z) == u.pssp)
    assert(Vec4i(z, x, x, w) == u.pssq)
    assert(Vec4i(z, x, y, x) == u.psts)
    assert(Vec4i(z, x, y, y) == u.pstt)
    assert(Vec4i(z, x, y, z) == u.pstp)
    assert(Vec4i(z, x, y, w) == u.pstq)
    assert(Vec4i(z, x, z, x) == u.psps)
    assert(Vec4i(z, x, z, y) == u.pspt)
    assert(Vec4i(z, x, z, z) == u.pspp)
    assert(Vec4i(z, x, z, w) == u.pspq)
    assert(Vec4i(z, x, w, x) == u.psqs)
    assert(Vec4i(z, x, w, y) == u.psqt)
    assert(Vec4i(z, x, w, z) == u.psqp)
    assert(Vec4i(z, x, w, w) == u.psqq)
    assert(Vec4i(z, y, x, x) == u.ptss)
    assert(Vec4i(z, y, x, y) == u.ptst)
    assert(Vec4i(z, y, x, z) == u.ptsp)
    assert(Vec4i(z, y, x, w) == u.ptsq)
    assert(Vec4i(z, y, y, x) == u.ptts)
    assert(Vec4i(z, y, y, y) == u.pttt)
    assert(Vec4i(z, y, y, z) == u.pttp)
    assert(Vec4i(z, y, y, w) == u.pttq)
    assert(Vec4i(z, y, z, x) == u.ptps)
    assert(Vec4i(z, y, z, y) == u.ptpt)
    assert(Vec4i(z, y, z, z) == u.ptpp)
    assert(Vec4i(z, y, z, w) == u.ptpq)
    assert(Vec4i(z, y, w, x) == u.ptqs)
    assert(Vec4i(z, y, w, y) == u.ptqt)
    assert(Vec4i(z, y, w, z) == u.ptqp)
    assert(Vec4i(z, y, w, w) == u.ptqq)
    assert(Vec4i(z, z, x, x) == u.ppss)
    assert(Vec4i(z, z, x, y) == u.ppst)
    assert(Vec4i(z, z, x, z) == u.ppsp)
    assert(Vec4i(z, z, x, w) == u.ppsq)
    assert(Vec4i(z, z, y, x) == u.ppts)
    assert(Vec4i(z, z, y, y) == u.pptt)
    assert(Vec4i(z, z, y, z) == u.pptp)
    assert(Vec4i(z, z, y, w) == u.pptq)
    assert(Vec4i(z, z, z, x) == u.ppps)
    assert(Vec4i(z, z, z, y) == u.pppt)
    assert(Vec4i(z, z, z, z) == u.pppp)
    assert(Vec4i(z, z, z, w) == u.pppq)
    assert(Vec4i(z, z, w, x) == u.ppqs)
    assert(Vec4i(z, z, w, y) == u.ppqt)
    assert(Vec4i(z, z, w, z) == u.ppqp)
    assert(Vec4i(z, z, w, w) == u.ppqq)
    assert(Vec4i(z, w, x, x) == u.pqss)
    assert(Vec4i(z, w, x, y) == u.pqst)
    assert(Vec4i(z, w, x, z) == u.pqsp)
    assert(Vec4i(z, w, x, w) == u.pqsq)
    assert(Vec4i(z, w, y, x) == u.pqts)
    assert(Vec4i(z, w, y, y) == u.pqtt)
    assert(Vec4i(z, w, y, z) == u.pqtp)
    assert(Vec4i(z, w, y, w) == u.pqtq)
    assert(Vec4i(z, w, z, x) == u.pqps)
    assert(Vec4i(z, w, z, y) == u.pqpt)
    assert(Vec4i(z, w, z, z) == u.pqpp)
    assert(Vec4i(z, w, z, w) == u.pqpq)
    assert(Vec4i(z, w, w, x) == u.pqqs)
    assert(Vec4i(z, w, w, y) == u.pqqt)
    assert(Vec4i(z, w, w, z) == u.pqqp)
    assert(Vec4i(z, w, w, w) == u.pqqq)
    assert(Vec4i(w, x, x, x) == u.qsss)
    assert(Vec4i(w, x, x, y) == u.qsst)
    assert(Vec4i(w, x, x, z) == u.qssp)
    assert(Vec4i(w, x, x, w) == u.qssq)
    assert(Vec4i(w, x, y, x) == u.qsts)
    assert(Vec4i(w, x, y, y) == u.qstt)
    assert(Vec4i(w, x, y, z) == u.qstp)
    assert(Vec4i(w, x, y, w) == u.qstq)
    assert(Vec4i(w, x, z, x) == u.qsps)
    assert(Vec4i(w, x, z, y) == u.qspt)
    assert(Vec4i(w, x, z, z) == u.qspp)
    assert(Vec4i(w, x, z, w) == u.qspq)
    assert(Vec4i(w, x, w, x) == u.qsqs)
    assert(Vec4i(w, x, w, y) == u.qsqt)
    assert(Vec4i(w, x, w, z) == u.qsqp)
    assert(Vec4i(w, x, w, w) == u.qsqq)
    assert(Vec4i(w, y, x, x) == u.qtss)
    assert(Vec4i(w, y, x, y) == u.qtst)
    assert(Vec4i(w, y, x, z) == u.qtsp)
    assert(Vec4i(w, y, x, w) == u.qtsq)
    assert(Vec4i(w, y, y, x) == u.qtts)
    assert(Vec4i(w, y, y, y) == u.qttt)
    assert(Vec4i(w, y, y, z) == u.qttp)
    assert(Vec4i(w, y, y, w) == u.qttq)
    assert(Vec4i(w, y, z, x) == u.qtps)
    assert(Vec4i(w, y, z, y) == u.qtpt)
    assert(Vec4i(w, y, z, z) == u.qtpp)
    assert(Vec4i(w, y, z, w) == u.qtpq)
    assert(Vec4i(w, y, w, x) == u.qtqs)
    assert(Vec4i(w, y, w, y) == u.qtqt)
    assert(Vec4i(w, y, w, z) == u.qtqp)
    assert(Vec4i(w, y, w, w) == u.qtqq)
    assert(Vec4i(w, z, x, x) == u.qpss)
    assert(Vec4i(w, z, x, y) == u.qpst)
    assert(Vec4i(w, z, x, z) == u.qpsp)
    assert(Vec4i(w, z, x, w) == u.qpsq)
    assert(Vec4i(w, z, y, x) == u.qpts)
    assert(Vec4i(w, z, y, y) == u.qptt)
    assert(Vec4i(w, z, y, z) == u.qptp)
    assert(Vec4i(w, z, y, w) == u.qptq)
    assert(Vec4i(w, z, z, x) == u.qpps)
    assert(Vec4i(w, z, z, y) == u.qppt)
    assert(Vec4i(w, z, z, z) == u.qppp)
    assert(Vec4i(w, z, z, w) == u.qppq)
    assert(Vec4i(w, z, w, x) == u.qpqs)
    assert(Vec4i(w, z, w, y) == u.qpqt)
    assert(Vec4i(w, z, w, z) == u.qpqp)
    assert(Vec4i(w, z, w, w) == u.qpqq)
    assert(Vec4i(w, w, x, x) == u.qqss)
    assert(Vec4i(w, w, x, y) == u.qqst)
    assert(Vec4i(w, w, x, z) == u.qqsp)
    assert(Vec4i(w, w, x, w) == u.qqsq)
    assert(Vec4i(w, w, y, x) == u.qqts)
    assert(Vec4i(w, w, y, y) == u.qqtt)
    assert(Vec4i(w, w, y, z) == u.qqtp)
    assert(Vec4i(w, w, y, w) == u.qqtq)
    assert(Vec4i(w, w, z, x) == u.qqps)
    assert(Vec4i(w, w, z, y) == u.qqpt)
    assert(Vec4i(w, w, z, z) == u.qqpp)
    assert(Vec4i(w, w, z, w) == u.qqpq)
    assert(Vec4i(w, w, w, x) == u.qqqs)
    assert(Vec4i(w, w, w, y) == u.qqqt)
    assert(Vec4i(w, w, w, z) == u.qqqp)
    assert(Vec4i(w, w, w, w) == u.qqqq)
  }

  test("Swizzled write") {
    val x = 5
    val y = 6
    val z = 7
    val w = 8
    val t = 10

    var i = ConstVec4i(x, y, z, w)
    val u = Vec4i(1)

    u := i; u.x = t; assert(Vec4i(t, y, z, w) == u)
    u := i; u.y = t; assert(Vec4i(x, t, z, w) == u)
    u := i; u.z = t; assert(Vec4i(x, y, t, w) == u)
    u := i; u.w = t; assert(Vec4i(x, y, z, t) == u)

    u := i; u.r = t; assert(Vec4i(t, y, z, w) == u)
    u := i; u.g = t; assert(Vec4i(x, t, z, w) == u)
    u := i; u.b = t; assert(Vec4i(x, y, t, w) == u)
    u := i; u.a = t; assert(Vec4i(x, y, z, t) == u)

    u := i; u.s = t; assert(Vec4i(t, y, z, w) == u)
    u := i; u.t = t; assert(Vec4i(x, t, z, w) == u)
    u := i; u.p = t; assert(Vec4i(x, y, t, w) == u)
    u := i; u.q = t; assert(Vec4i(x, y, z, t) == u)

    i = Vec4i(t)

    u := i; u.xy = Vec2i(x, y); assert(Vec4i(x, y, t, t) == u)
    u := i; u.xz = Vec2i(x, z); assert(Vec4i(x, t, z, t) == u)
    u := i; u.xw = Vec2i(x, w); assert(Vec4i(x, t, t, w) == u)
    u := i; u.yx = Vec2i(y, x); assert(Vec4i(x, y, t, t) == u)
    u := i; u.yz = Vec2i(y, z); assert(Vec4i(t, y, z, t) == u)
    u := i; u.yw = Vec2i(y, w); assert(Vec4i(t, y, t, w) == u)
    u := i; u.zx = Vec2i(z, x); assert(Vec4i(x, t, z, t) == u)
    u := i; u.zy = Vec2i(z, y); assert(Vec4i(t, y, z, t) == u)
    u := i; u.zw = Vec2i(z, w); assert(Vec4i(t, t, z, w) == u)
    u := i; u.wx = Vec2i(w, x); assert(Vec4i(x, t, t, w) == u)
    u := i; u.wy = Vec2i(w, y); assert(Vec4i(t, y, t, w) == u)
    u := i; u.wz = Vec2i(w, z); assert(Vec4i(t, t, z, w) == u)
    u := i; u.xyz = Vec3i(x, y, z); assert(Vec4i(x, y, z, t) == u)
    u := i; u.xyw = Vec3i(x, y, w); assert(Vec4i(x, y, t, w) == u)
    u := i; u.xzy = Vec3i(x, z, y); assert(Vec4i(x, y, z, t) == u)
    u := i; u.xzw = Vec3i(x, z, w); assert(Vec4i(x, t, z, w) == u)
    u := i; u.xwy = Vec3i(x, w, y); assert(Vec4i(x, y, t, w) == u)
    u := i; u.xwz = Vec3i(x, w, z); assert(Vec4i(x, t, z, w) == u)
    u := i; u.yxz = Vec3i(y, x, z); assert(Vec4i(x, y, z, t) == u)
    u := i; u.yxw = Vec3i(y, x, w); assert(Vec4i(x, y, t, w) == u)
    u := i; u.yzx = Vec3i(y, z, x); assert(Vec4i(x, y, z, t) == u)
    u := i; u.yzw = Vec3i(y, z, w); assert(Vec4i(t, y, z, w) == u)
    u := i; u.ywx = Vec3i(y, w, x); assert(Vec4i(x, y, t, w) == u)
    u := i; u.ywz = Vec3i(y, w, z); assert(Vec4i(t, y, z, w) == u)
    u := i; u.zxy = Vec3i(z, x, y); assert(Vec4i(x, y, z, t) == u)
    u := i; u.zxw = Vec3i(z, x, w); assert(Vec4i(x, t, z, w) == u)
    u := i; u.zyx = Vec3i(z, y, x); assert(Vec4i(x, y, z, t) == u)
    u := i; u.zyw = Vec3i(z, y, w); assert(Vec4i(t, y, z, w) == u)
    u := i; u.zwx = Vec3i(z, w, x); assert(Vec4i(x, t, z, w) == u)
    u := i; u.zwy = Vec3i(z, w, y); assert(Vec4i(t, y, z, w) == u)
    u := i; u.wxy = Vec3i(w, x, y); assert(Vec4i(x, y, t, w) == u)
    u := i; u.wxz = Vec3i(w, x, z); assert(Vec4i(x, t, z, w) == u)
    u := i; u.wyx = Vec3i(w, y, x); assert(Vec4i(x, y, t, w) == u)
    u := i; u.wyz = Vec3i(w, y, z); assert(Vec4i(t, y, z, w) == u)
    u := i; u.wzx = Vec3i(w, z, x); assert(Vec4i(x, t, z, w) == u)
    u := i; u.wzy = Vec3i(w, z, y); assert(Vec4i(t, y, z, w) == u)
    u := i; u.xyzw = Vec4i(x, y, z, w); assert(Vec4i(x, y, z, w) == u)
    u := i; u.xywz = Vec4i(x, y, w, z); assert(Vec4i(x, y, z, w) == u)
    u := i; u.xzyw = Vec4i(x, z, y, w); assert(Vec4i(x, y, z, w) == u)
    u := i; u.xzwy = Vec4i(x, z, w, y); assert(Vec4i(x, y, z, w) == u)
    u := i; u.xwyz = Vec4i(x, w, y, z); assert(Vec4i(x, y, z, w) == u)
    u := i; u.xwzy = Vec4i(x, w, z, y); assert(Vec4i(x, y, z, w) == u)
    u := i; u.yxzw = Vec4i(y, x, z, w); assert(Vec4i(x, y, z, w) == u)
    u := i; u.yxwz = Vec4i(y, x, w, z); assert(Vec4i(x, y, z, w) == u)
    u := i; u.yzxw = Vec4i(y, z, x, w); assert(Vec4i(x, y, z, w) == u)
    u := i; u.yzwx = Vec4i(y, z, w, x); assert(Vec4i(x, y, z, w) == u)
    u := i; u.ywxz = Vec4i(y, w, x, z); assert(Vec4i(x, y, z, w) == u)
    u := i; u.ywzx = Vec4i(y, w, z, x); assert(Vec4i(x, y, z, w) == u)
    u := i; u.zxyw = Vec4i(z, x, y, w); assert(Vec4i(x, y, z, w) == u)
    u := i; u.zxwy = Vec4i(z, x, w, y); assert(Vec4i(x, y, z, w) == u)
    u := i; u.zyxw = Vec4i(z, y, x, w); assert(Vec4i(x, y, z, w) == u)
    u := i; u.zywx = Vec4i(z, y, w, x); assert(Vec4i(x, y, z, w) == u)
    u := i; u.zwxy = Vec4i(z, w, x, y); assert(Vec4i(x, y, z, w) == u)
    u := i; u.zwyx = Vec4i(z, w, y, x); assert(Vec4i(x, y, z, w) == u)
    u := i; u.wxyz = Vec4i(w, x, y, z); assert(Vec4i(x, y, z, w) == u)
    u := i; u.wxzy = Vec4i(w, x, z, y); assert(Vec4i(x, y, z, w) == u)
    u := i; u.wyxz = Vec4i(w, y, x, z); assert(Vec4i(x, y, z, w) == u)
    u := i; u.wyzx = Vec4i(w, y, z, x); assert(Vec4i(x, y, z, w) == u)
    u := i; u.wzxy = Vec4i(w, z, x, y); assert(Vec4i(x, y, z, w) == u)
    u := i; u.wzyx = Vec4i(w, z, y, x); assert(Vec4i(x, y, z, w) == u)

    u := i; u.rg = Vec2i(x, y); assert(Vec4i(x, y, t, t) == u)
    u := i; u.rb = Vec2i(x, z); assert(Vec4i(x, t, z, t) == u)
    u := i; u.ra = Vec2i(x, w); assert(Vec4i(x, t, t, w) == u)
    u := i; u.gr = Vec2i(y, x); assert(Vec4i(x, y, t, t) == u)
    u := i; u.gb = Vec2i(y, z); assert(Vec4i(t, y, z, t) == u)
    u := i; u.ga = Vec2i(y, w); assert(Vec4i(t, y, t, w) == u)
    u := i; u.br = Vec2i(z, x); assert(Vec4i(x, t, z, t) == u)
    u := i; u.bg = Vec2i(z, y); assert(Vec4i(t, y, z, t) == u)
    u := i; u.ba = Vec2i(z, w); assert(Vec4i(t, t, z, w) == u)
    u := i; u.ar = Vec2i(w, x); assert(Vec4i(x, t, t, w) == u)
    u := i; u.ag = Vec2i(w, y); assert(Vec4i(t, y, t, w) == u)
    u := i; u.ab = Vec2i(w, z); assert(Vec4i(t, t, z, w) == u)
    u := i; u.rgb = Vec3i(x, y, z); assert(Vec4i(x, y, z, t) == u)
    u := i; u.rga = Vec3i(x, y, w); assert(Vec4i(x, y, t, w) == u)
    u := i; u.rbg = Vec3i(x, z, y); assert(Vec4i(x, y, z, t) == u)
    u := i; u.rba = Vec3i(x, z, w); assert(Vec4i(x, t, z, w) == u)
    u := i; u.rag = Vec3i(x, w, y); assert(Vec4i(x, y, t, w) == u)
    u := i; u.rab = Vec3i(x, w, z); assert(Vec4i(x, t, z, w) == u)
    u := i; u.grb = Vec3i(y, x, z); assert(Vec4i(x, y, z, t) == u)
    u := i; u.gra = Vec3i(y, x, w); assert(Vec4i(x, y, t, w) == u)
    u := i; u.gbr = Vec3i(y, z, x); assert(Vec4i(x, y, z, t) == u)
    u := i; u.gba = Vec3i(y, z, w); assert(Vec4i(t, y, z, w) == u)
    u := i; u.gar = Vec3i(y, w, x); assert(Vec4i(x, y, t, w) == u)
    u := i; u.gab = Vec3i(y, w, z); assert(Vec4i(t, y, z, w) == u)
    u := i; u.brg = Vec3i(z, x, y); assert(Vec4i(x, y, z, t) == u)
    u := i; u.bra = Vec3i(z, x, w); assert(Vec4i(x, t, z, w) == u)
    u := i; u.bgr = Vec3i(z, y, x); assert(Vec4i(x, y, z, t) == u)
    u := i; u.bga = Vec3i(z, y, w); assert(Vec4i(t, y, z, w) == u)
    u := i; u.bar = Vec3i(z, w, x); assert(Vec4i(x, t, z, w) == u)
    u := i; u.bag = Vec3i(z, w, y); assert(Vec4i(t, y, z, w) == u)
    u := i; u.arg = Vec3i(w, x, y); assert(Vec4i(x, y, t, w) == u)
    u := i; u.arb = Vec3i(w, x, z); assert(Vec4i(x, t, z, w) == u)
    u := i; u.agr = Vec3i(w, y, x); assert(Vec4i(x, y, t, w) == u)
    u := i; u.agb = Vec3i(w, y, z); assert(Vec4i(t, y, z, w) == u)
    u := i; u.abr = Vec3i(w, z, x); assert(Vec4i(x, t, z, w) == u)
    u := i; u.abg = Vec3i(w, z, y); assert(Vec4i(t, y, z, w) == u)
    u := i; u.rgba = Vec4i(x, y, z, w); assert(Vec4i(x, y, z, w) == u)
    u := i; u.rgab = Vec4i(x, y, w, z); assert(Vec4i(x, y, z, w) == u)
    u := i; u.rbga = Vec4i(x, z, y, w); assert(Vec4i(x, y, z, w) == u)
    u := i; u.rbag = Vec4i(x, z, w, y); assert(Vec4i(x, y, z, w) == u)
    u := i; u.ragb = Vec4i(x, w, y, z); assert(Vec4i(x, y, z, w) == u)
    u := i; u.rabg = Vec4i(x, w, z, y); assert(Vec4i(x, y, z, w) == u)
    u := i; u.grba = Vec4i(y, x, z, w); assert(Vec4i(x, y, z, w) == u)
    u := i; u.grab = Vec4i(y, x, w, z); assert(Vec4i(x, y, z, w) == u)
    u := i; u.gbra = Vec4i(y, z, x, w); assert(Vec4i(x, y, z, w) == u)
    u := i; u.gbar = Vec4i(y, z, w, x); assert(Vec4i(x, y, z, w) == u)
    u := i; u.garb = Vec4i(y, w, x, z); assert(Vec4i(x, y, z, w) == u)
    u := i; u.gabr = Vec4i(y, w, z, x); assert(Vec4i(x, y, z, w) == u)
    u := i; u.brga = Vec4i(z, x, y, w); assert(Vec4i(x, y, z, w) == u)
    u := i; u.brag = Vec4i(z, x, w, y); assert(Vec4i(x, y, z, w) == u)
    u := i; u.bgra = Vec4i(z, y, x, w); assert(Vec4i(x, y, z, w) == u)
    u := i; u.bgar = Vec4i(z, y, w, x); assert(Vec4i(x, y, z, w) == u)
    u := i; u.barg = Vec4i(z, w, x, y); assert(Vec4i(x, y, z, w) == u)
    u := i; u.bagr = Vec4i(z, w, y, x); assert(Vec4i(x, y, z, w) == u)
    u := i; u.argb = Vec4i(w, x, y, z); assert(Vec4i(x, y, z, w) == u)
    u := i; u.arbg = Vec4i(w, x, z, y); assert(Vec4i(x, y, z, w) == u)
    u := i; u.agrb = Vec4i(w, y, x, z); assert(Vec4i(x, y, z, w) == u)
    u := i; u.agbr = Vec4i(w, y, z, x); assert(Vec4i(x, y, z, w) == u)
    u := i; u.abrg = Vec4i(w, z, x, y); assert(Vec4i(x, y, z, w) == u)
    u := i; u.abgr = Vec4i(w, z, y, x); assert(Vec4i(x, y, z, w) == u)

    u := i; u.st = Vec2i(x, y); assert(Vec4i(x, y, t, t) == u)
    u := i; u.sp = Vec2i(x, z); assert(Vec4i(x, t, z, t) == u)
    u := i; u.sq = Vec2i(x, w); assert(Vec4i(x, t, t, w) == u)
    u := i; u.ts = Vec2i(y, x); assert(Vec4i(x, y, t, t) == u)
    u := i; u.tp = Vec2i(y, z); assert(Vec4i(t, y, z, t) == u)
    u := i; u.tq = Vec2i(y, w); assert(Vec4i(t, y, t, w) == u)
    u := i; u.ps = Vec2i(z, x); assert(Vec4i(x, t, z, t) == u)
    u := i; u.pt = Vec2i(z, y); assert(Vec4i(t, y, z, t) == u)
    u := i; u.pq = Vec2i(z, w); assert(Vec4i(t, t, z, w) == u)
    u := i; u.qs = Vec2i(w, x); assert(Vec4i(x, t, t, w) == u)
    u := i; u.qt = Vec2i(w, y); assert(Vec4i(t, y, t, w) == u)
    u := i; u.qp = Vec2i(w, z); assert(Vec4i(t, t, z, w) == u)
    u := i; u.stp = Vec3i(x, y, z); assert(Vec4i(x, y, z, t) == u)
    u := i; u.stq = Vec3i(x, y, w); assert(Vec4i(x, y, t, w) == u)
    u := i; u.spt = Vec3i(x, z, y); assert(Vec4i(x, y, z, t) == u)
    u := i; u.spq = Vec3i(x, z, w); assert(Vec4i(x, t, z, w) == u)
    u := i; u.sqt = Vec3i(x, w, y); assert(Vec4i(x, y, t, w) == u)
    u := i; u.sqp = Vec3i(x, w, z); assert(Vec4i(x, t, z, w) == u)
    u := i; u.tsp = Vec3i(y, x, z); assert(Vec4i(x, y, z, t) == u)
    u := i; u.tsq = Vec3i(y, x, w); assert(Vec4i(x, y, t, w) == u)
    u := i; u.tps = Vec3i(y, z, x); assert(Vec4i(x, y, z, t) == u)
    u := i; u.tpq = Vec3i(y, z, w); assert(Vec4i(t, y, z, w) == u)
    u := i; u.tqs = Vec3i(y, w, x); assert(Vec4i(x, y, t, w) == u)
    u := i; u.tqp = Vec3i(y, w, z); assert(Vec4i(t, y, z, w) == u)
    u := i; u.pst = Vec3i(z, x, y); assert(Vec4i(x, y, z, t) == u)
    u := i; u.psq = Vec3i(z, x, w); assert(Vec4i(x, t, z, w) == u)
    u := i; u.pts = Vec3i(z, y, x); assert(Vec4i(x, y, z, t) == u)
    u := i; u.ptq = Vec3i(z, y, w); assert(Vec4i(t, y, z, w) == u)
    u := i; u.pqs = Vec3i(z, w, x); assert(Vec4i(x, t, z, w) == u)
    u := i; u.pqt = Vec3i(z, w, y); assert(Vec4i(t, y, z, w) == u)
    u := i; u.qst = Vec3i(w, x, y); assert(Vec4i(x, y, t, w) == u)
    u := i; u.qsp = Vec3i(w, x, z); assert(Vec4i(x, t, z, w) == u)
    u := i; u.qts = Vec3i(w, y, x); assert(Vec4i(x, y, t, w) == u)
    u := i; u.qtp = Vec3i(w, y, z); assert(Vec4i(t, y, z, w) == u)
    u := i; u.qps = Vec3i(w, z, x); assert(Vec4i(x, t, z, w) == u)
    u := i; u.qpt = Vec3i(w, z, y); assert(Vec4i(t, y, z, w) == u)
    u := i; u.stpq = Vec4i(x, y, z, w); assert(Vec4i(x, y, z, w) == u)
    u := i; u.stqp = Vec4i(x, y, w, z); assert(Vec4i(x, y, z, w) == u)
    u := i; u.sptq = Vec4i(x, z, y, w); assert(Vec4i(x, y, z, w) == u)
    u := i; u.spqt = Vec4i(x, z, w, y); assert(Vec4i(x, y, z, w) == u)
    u := i; u.sqtp = Vec4i(x, w, y, z); assert(Vec4i(x, y, z, w) == u)
    u := i; u.sqpt = Vec4i(x, w, z, y); assert(Vec4i(x, y, z, w) == u)
    u := i; u.tspq = Vec4i(y, x, z, w); assert(Vec4i(x, y, z, w) == u)
    u := i; u.tsqp = Vec4i(y, x, w, z); assert(Vec4i(x, y, z, w) == u)
    u := i; u.tpsq = Vec4i(y, z, x, w); assert(Vec4i(x, y, z, w) == u)
    u := i; u.tpqs = Vec4i(y, z, w, x); assert(Vec4i(x, y, z, w) == u)
    u := i; u.tqsp = Vec4i(y, w, x, z); assert(Vec4i(x, y, z, w) == u)
    u := i; u.tqps = Vec4i(y, w, z, x); assert(Vec4i(x, y, z, w) == u)
    u := i; u.pstq = Vec4i(z, x, y, w); assert(Vec4i(x, y, z, w) == u)
    u := i; u.psqt = Vec4i(z, x, w, y); assert(Vec4i(x, y, z, w) == u)
    u := i; u.ptsq = Vec4i(z, y, x, w); assert(Vec4i(x, y, z, w) == u)
    u := i; u.ptqs = Vec4i(z, y, w, x); assert(Vec4i(x, y, z, w) == u)
    u := i; u.pqst = Vec4i(z, w, x, y); assert(Vec4i(x, y, z, w) == u)
    u := i; u.pqts = Vec4i(z, w, y, x); assert(Vec4i(x, y, z, w) == u)
    u := i; u.qstp = Vec4i(w, x, y, z); assert(Vec4i(x, y, z, w) == u)
    u := i; u.qspt = Vec4i(w, x, z, y); assert(Vec4i(x, y, z, w) == u)
    u := i; u.qtsp = Vec4i(w, y, x, z); assert(Vec4i(x, y, z, w) == u)
    u := i; u.qtps = Vec4i(w, y, z, x); assert(Vec4i(x, y, z, w) == u)
    u := i; u.qpst = Vec4i(w, z, x, y); assert(Vec4i(x, y, z, w) == u)
    u := i; u.qpts = Vec4i(w, z, y, x); assert(Vec4i(x, y, z, w) == u)
  }
  
  test("Swizzled self write") {
    val x = 5
    val y = 6
    val z = 7
    val w = 8

    val i = ConstVec4i(x, y, z, w)
    val u = Vec4i(0)

    u := i; u.xyzw = u; assert(Vec4i(x, y, z, w) == u)
    u := i; u.xywz = u; assert(Vec4i(x, y, w, z) == u)
    u := i; u.xzyw = u; assert(Vec4i(x, z, y, w) == u)
    u := i; u.xzwy = u; assert(Vec4i(x, w, y, z) == u)
    u := i; u.xwyz = u; assert(Vec4i(x, z, w, y) == u)
    u := i; u.xwzy = u; assert(Vec4i(x, w, z, y) == u)
    u := i; u.yxzw = u; assert(Vec4i(y, x, z, w) == u)
    u := i; u.yxwz = u; assert(Vec4i(y, x, w, z) == u)
    u := i; u.yzxw = u; assert(Vec4i(z, x, y, w) == u)
    u := i; u.yzwx = u; assert(Vec4i(w, x, y, z) == u)
    u := i; u.ywxz = u; assert(Vec4i(z, x, w, y) == u)
    u := i; u.ywzx = u; assert(Vec4i(w, x, z, y) == u)
    u := i; u.zxyw = u; assert(Vec4i(y, z, x, w) == u)
    u := i; u.zxwy = u; assert(Vec4i(y, w, x, z) == u)
    u := i; u.zyxw = u; assert(Vec4i(z, y, x, w) == u)
    u := i; u.zywx = u; assert(Vec4i(w, y, x, z) == u)
    u := i; u.zwxy = u; assert(Vec4i(z, w, x, y) == u)
    u := i; u.zwyx = u; assert(Vec4i(w, z, x, y) == u)
    u := i; u.wxyz = u; assert(Vec4i(y, z, w, x) == u)
    u := i; u.wxzy = u; assert(Vec4i(y, w, z, x) == u)
    u := i; u.wyxz = u; assert(Vec4i(z, y, w, x) == u)
    u := i; u.wyzx = u; assert(Vec4i(w, y, z, x) == u)
    u := i; u.wzxy = u; assert(Vec4i(z, w, y, x) == u)
    u := i; u.wzyx = u; assert(Vec4i(w, z, y, x) == u)

    u := i; u.rgba = u; assert(Vec4i(x, y, z, w) == u)
    u := i; u.rgab = u; assert(Vec4i(x, y, w, z) == u)
    u := i; u.rbga = u; assert(Vec4i(x, z, y, w) == u)
    u := i; u.rbag = u; assert(Vec4i(x, w, y, z) == u)
    u := i; u.ragb = u; assert(Vec4i(x, z, w, y) == u)
    u := i; u.rabg = u; assert(Vec4i(x, w, z, y) == u)
    u := i; u.grba = u; assert(Vec4i(y, x, z, w) == u)
    u := i; u.grab = u; assert(Vec4i(y, x, w, z) == u)
    u := i; u.gbra = u; assert(Vec4i(z, x, y, w) == u)
    u := i; u.gbar = u; assert(Vec4i(w, x, y, z) == u)
    u := i; u.garb = u; assert(Vec4i(z, x, w, y) == u)
    u := i; u.gabr = u; assert(Vec4i(w, x, z, y) == u)
    u := i; u.brga = u; assert(Vec4i(y, z, x, w) == u)
    u := i; u.brag = u; assert(Vec4i(y, w, x, z) == u)
    u := i; u.bgra = u; assert(Vec4i(z, y, x, w) == u)
    u := i; u.bgar = u; assert(Vec4i(w, y, x, z) == u)
    u := i; u.barg = u; assert(Vec4i(z, w, x, y) == u)
    u := i; u.bagr = u; assert(Vec4i(w, z, x, y) == u)
    u := i; u.argb = u; assert(Vec4i(y, z, w, x) == u)
    u := i; u.arbg = u; assert(Vec4i(y, w, z, x) == u)
    u := i; u.agrb = u; assert(Vec4i(z, y, w, x) == u)
    u := i; u.agbr = u; assert(Vec4i(w, y, z, x) == u)
    u := i; u.abrg = u; assert(Vec4i(z, w, y, x) == u)
    u := i; u.abgr = u; assert(Vec4i(w, z, y, x) == u)

    u := i; u.stpq = u; assert(Vec4i(x, y, z, w) == u)
    u := i; u.stqp = u; assert(Vec4i(x, y, w, z) == u)
    u := i; u.sptq = u; assert(Vec4i(x, z, y, w) == u)
    u := i; u.spqt = u; assert(Vec4i(x, w, y, z) == u)
    u := i; u.sqtp = u; assert(Vec4i(x, z, w, y) == u)
    u := i; u.sqpt = u; assert(Vec4i(x, w, z, y) == u)
    u := i; u.tspq = u; assert(Vec4i(y, x, z, w) == u)
    u := i; u.tsqp = u; assert(Vec4i(y, x, w, z) == u)
    u := i; u.tpsq = u; assert(Vec4i(z, x, y, w) == u)
    u := i; u.tpqs = u; assert(Vec4i(w, x, y, z) == u)
    u := i; u.tqsp = u; assert(Vec4i(z, x, w, y) == u)
    u := i; u.tqps = u; assert(Vec4i(w, x, z, y) == u)
    u := i; u.pstq = u; assert(Vec4i(y, z, x, w) == u)
    u := i; u.psqt = u; assert(Vec4i(y, w, x, z) == u)
    u := i; u.ptsq = u; assert(Vec4i(z, y, x, w) == u)
    u := i; u.ptqs = u; assert(Vec4i(w, y, x, z) == u)
    u := i; u.pqst = u; assert(Vec4i(z, w, x, y) == u)
    u := i; u.pqts = u; assert(Vec4i(w, z, x, y) == u)
    u := i; u.qstp = u; assert(Vec4i(y, z, w, x) == u)
    u := i; u.qspt = u; assert(Vec4i(y, w, z, x) == u)
    u := i; u.qtsp = u; assert(Vec4i(z, y, w, x) == u)
    u := i; u.qtps = u; assert(Vec4i(w, y, z, x) == u)
    u := i; u.qpst = u; assert(Vec4i(z, w, y, x) == u)
    u := i; u.qpts = u; assert(Vec4i(w, z, y, x) == u)
  }

  // This test passes if it compiles
  test("Swizzle as property") {
    val u = Vec4i(0)
    val i = Vec2i(1)
    val j = Vec3i(1)
    val k = Vec4i(1)

    u.x += 1
    u.y += 1
    u.z += 1
    u.w += 1

    u.r += 1
    u.g += 1
    u.b += 1
    u.a += 1

    u.s += 1
    u.t += 1
    u.p += 1
    u.q += 1

    u.xy += i
    u.xz += i
    u.xw += i
    u.yx += i
    u.yz += i
    u.yw += i
    u.zx += i
    u.zy += i
    u.zw += i
    u.wx += i
    u.wy += i
    u.wz += i
    u.xyz += j
    u.xyw += j
    u.xzy += j
    u.xzw += j
    u.xwy += j
    u.xwz += j
    u.yxz += j
    u.yxw += j
    u.yzx += j
    u.yzw += j
    u.ywx += j
    u.ywz += j
    u.zxy += j
    u.zxw += j
    u.zyx += j
    u.zyw += j
    u.zwx += j
    u.zwy += j
    u.wxy += j
    u.wxz += j
    u.wyx += j
    u.wyz += j
    u.wzx += j
    u.wzy += j
    u.xyzw += k
    u.xywz += k
    u.xzyw += k
    u.xzwy += k
    u.xwyz += k
    u.xwzy += k
    u.yxzw += k
    u.yxwz += k
    u.yzxw += k
    u.yzwx += k
    u.ywxz += k
    u.ywzx += k
    u.zxyw += k
    u.zxwy += k
    u.zyxw += k
    u.zywx += k
    u.zwxy += k
    u.zwyx += k
    u.wxyz += k
    u.wxzy += k
    u.wyxz += k
    u.wyzx += k
    u.wzxy += k
    u.wzyx += k

    u.rg += i
    u.rb += i
    u.ra += i
    u.gr += i
    u.gb += i
    u.ga += i
    u.br += i
    u.bg += i
    u.ba += i
    u.ar += i
    u.ag += i
    u.ab += i
    u.rgb += j
    u.rga += j
    u.rbg += j
    u.rba += j
    u.rag += j
    u.rab += j
    u.grb += j
    u.gra += j
    u.gbr += j
    u.gba += j
    u.gar += j
    u.gab += j
    u.brg += j
    u.bra += j
    u.bgr += j
    u.bga += j
    u.bar += j
    u.bag += j
    u.arg += j
    u.arb += j
    u.agr += j
    u.agb += j
    u.abr += j
    u.abg += j
    u.rgba += k
    u.rgab += k
    u.rbga += k
    u.rbag += k
    u.ragb += k
    u.rabg += k
    u.grba += k
    u.grab += k
    u.gbra += k
    u.gbar += k
    u.garb += k
    u.gabr += k
    u.brga += k
    u.brag += k
    u.bgra += k
    u.bgar += k
    u.barg += k
    u.bagr += k
    u.argb += k
    u.arbg += k
    u.agrb += k
    u.agbr += k
    u.abrg += k
    u.abgr += k

    u.st += i
    u.sp += i
    u.sq += i
    u.ts += i
    u.tp += i
    u.tq += i
    u.ps += i
    u.pt += i
    u.pq += i
    u.qs += i
    u.qt += i
    u.qp += i
    u.stp += j
    u.stq += j
    u.spt += j
    u.spq += j
    u.sqt += j
    u.sqp += j
    u.tsp += j
    u.tsq += j
    u.tps += j
    u.tpq += j
    u.tqs += j
    u.tqp += j
    u.pst += j
    u.psq += j
    u.pts += j
    u.ptq += j
    u.pqs += j
    u.pqt += j
    u.qst += j
    u.qsp += j
    u.qts += j
    u.qtp += j
    u.qps += j
    u.qpt += j
    u.stpq += k
    u.stqp += k
    u.sptq += k
    u.spqt += k
    u.sqtp += k
    u.sqpt += k
    u.tspq += k
    u.tsqp += k
    u.tpsq += k
    u.tpqs += k
    u.tqsp += k
    u.tqps += k
    u.pstq += k
    u.psqt += k
    u.ptsq += k
    u.ptqs += k
    u.pqst += k
    u.pqts += k
    u.qstp += k
    u.qspt += k
    u.qtsp += k
    u.qtps += k
    u.qpst += k
    u.qpts += k
  }
}
