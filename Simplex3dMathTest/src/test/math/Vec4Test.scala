/*
 * Simplex3D, Math tests
 * Copyright (C) 2009 Simplex3D team
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package test.math

import org.scalatest._

import simplex3d.math._
import simplex3d.math.VecMath._


/**
 * @author Aleksey Nikiforov (lex)
 */
class Vec4Test extends FunSuite {

    test("Const factories") {
        var u = ConstVec4(5)
        expect(classOf[ConstVec4]) { u.getClass }
        expect(5) { u.x }
        expect(5) { u.y }
        expect(5) { u.z }
        expect(5) { u.w }
        
        u = ConstVec4(2, 3, 4, 5)
        expect(classOf[ConstVec4]) { u.getClass }
        expect(2) { u.x }
        expect(3) { u.y }
        expect(4) { u.z }
        expect(5) { u.w }

        u = ConstVec4(6, 7, Vec2(8, 9))
        expect(classOf[ConstVec4]) { u.getClass }
        expect(6) { u.x }
        expect(7) { u.y }
        expect(8) { u.z }
        expect(9) { u.w }

        u = ConstVec4(6, Vec2(7, 8), 9)
        expect(classOf[ConstVec4]) { u.getClass }
        expect(6) { u.x }
        expect(7) { u.y }
        expect(8) { u.z }
        expect(9) { u.w }

        u = ConstVec4(Vec2(6, 7), 8, 9)
        expect(classOf[ConstVec4]) { u.getClass }
        expect(6) { u.x }
        expect(7) { u.y }
        expect(8) { u.z }
        expect(9) { u.w }

        u = ConstVec4(6, Vec3(7, 8, 9))
        expect(classOf[ConstVec4]) { u.getClass }
        expect(6) { u.x }
        expect(7) { u.y }
        expect(8) { u.z }
        expect(9) { u.w }

        u = ConstVec4(Vec3(6, 7, 8), 9)
        expect(classOf[ConstVec4]) { u.getClass }
        expect(6) { u.x }
        expect(7) { u.y }
        expect(8) { u.z }
        expect(9) { u.w }

        u = ConstVec4(Vec4(4, 5, 6, 7))
        expect(classOf[ConstVec4]) { u.getClass }
        expect(4) { u.x }
        expect(5) { u.y }
        expect(6) { u.z }
        expect(7) { u.w }

        u = ConstVec4(6, 7, Vec2i(8, 9))
        expect(classOf[ConstVec4]) { u.getClass }
        expect(6) { u.x }
        expect(7) { u.y }
        expect(8) { u.z }
        expect(9) { u.w }

        u = ConstVec4(6, Vec2i(7, 8), 9)
        expect(classOf[ConstVec4]) { u.getClass }
        expect(6) { u.x }
        expect(7) { u.y }
        expect(8) { u.z }
        expect(9) { u.w }

        u = ConstVec4(Vec2i(6, 7), 8, 9)
        expect(classOf[ConstVec4]) { u.getClass }
        expect(6) { u.x }
        expect(7) { u.y }
        expect(8) { u.z }
        expect(9) { u.w }

        u = ConstVec4(6, Vec3i(7, 8, 9))
        expect(classOf[ConstVec4]) { u.getClass }
        expect(6) { u.x }
        expect(7) { u.y }
        expect(8) { u.z }
        expect(9) { u.w }

        u = ConstVec4(Vec3i(6, 7, 8), 9)
        expect(classOf[ConstVec4]) { u.getClass }
        expect(6) { u.x }
        expect(7) { u.y }
        expect(8) { u.z }
        expect(9) { u.w }

        u = ConstVec4(Vec4i(4, 5, 6, 7))
        expect(classOf[ConstVec4]) { u.getClass }
        expect(4) { u.x }
        expect(5) { u.y }
        expect(6) { u.z }
        expect(7) { u.w }
    }

    test("Mutable factories") {
        var u = Vec4(5)
        expect(classOf[Vec4]) { u.getClass }
        expect(5) { u.x }
        expect(5) { u.y }
        expect(5) { u.z }
        expect(5) { u.w }

        u = Vec4(2, 3, 4, 5)
        expect(classOf[Vec4]) { u.getClass }
        expect(2) { u.x }
        expect(3) { u.y }
        expect(4) { u.z }
        expect(5) { u.w }

        u = Vec4(6, 7, Vec2(8, 9))
        expect(classOf[Vec4]) { u.getClass }
        expect(6) { u.x }
        expect(7) { u.y }
        expect(8) { u.z }
        expect(9) { u.w }

        u = Vec4(6, Vec2(7, 8), 9)
        expect(classOf[Vec4]) { u.getClass }
        expect(6) { u.x }
        expect(7) { u.y }
        expect(8) { u.z }
        expect(9) { u.w }

        u = Vec4(Vec2(6, 7), 8, 9)
        expect(classOf[Vec4]) { u.getClass }
        expect(6) { u.x }
        expect(7) { u.y }
        expect(8) { u.z }
        expect(9) { u.w }

        u = Vec4(6, Vec3(7, 8, 9))
        expect(classOf[Vec4]) { u.getClass }
        expect(6) { u.x }
        expect(7) { u.y }
        expect(8) { u.z }
        expect(9) { u.w }

        u = Vec4(Vec3(6, 7, 8), 9)
        expect(classOf[Vec4]) { u.getClass }
        expect(6) { u.x }
        expect(7) { u.y }
        expect(8) { u.z }
        expect(9) { u.w }

        u = Vec4(Vec4(4, 5, 6, 7))
        expect(classOf[Vec4]) { u.getClass }
        expect(4) { u.x }
        expect(5) { u.y }
        expect(6) { u.z }
        expect(7) { u.w }

        u = Vec4(6, 7, Vec2i(8, 9))
        expect(classOf[Vec4]) { u.getClass }
        expect(6) { u.x }
        expect(7) { u.y }
        expect(8) { u.z }
        expect(9) { u.w }

        u = Vec4(6, Vec2i(7, 8), 9)
        expect(classOf[Vec4]) { u.getClass }
        expect(6) { u.x }
        expect(7) { u.y }
        expect(8) { u.z }
        expect(9) { u.w }

        u = Vec4(Vec2i(6, 7), 8, 9)
        expect(classOf[Vec4]) { u.getClass }
        expect(6) { u.x }
        expect(7) { u.y }
        expect(8) { u.z }
        expect(9) { u.w }

        u = Vec4(6, Vec3i(7, 8, 9))
        expect(classOf[Vec4]) { u.getClass }
        expect(6) { u.x }
        expect(7) { u.y }
        expect(8) { u.z }
        expect(9) { u.w }

        u = Vec4(Vec3i(6, 7, 8), 9)
        expect(classOf[Vec4]) { u.getClass }
        expect(6) { u.x }
        expect(7) { u.y }
        expect(8) { u.z }
        expect(9) { u.w }

        u = Vec4(Vec4i(4, 5, 6, 7))
        expect(classOf[Vec4]) { u.getClass }
        expect(4) { u.x }
        expect(5) { u.y }
        expect(6) { u.z }
        expect(7) { u.w }
    }

    test("Equality methods") {
        assert(Vec4(4, 7, 9, 1) == ConstVec4(4, 7, 9, 1))
        assert(ConstVec4(4, 7, 9, 1) == Vec4(4, 7, 9, 1))

        assert(Vec4(1, 2, 3, 4) != Vec4(9, 2, 3, 4))
        assert(Vec4(1, 2, 3, 4) != Vec4(1, 9, 3, 4))
        assert(Vec4(1, 2, 3, 4) != Vec4(1, 2, 9, 4))
        assert(Vec4(1, 2, 3, 4) != Vec4(1, 2, 3, 9))
    }

    test("Indexed read") {
        val u = ConstVec4(3, 4, 5, 6)

        expect(3) { u(0) }
        expect(4) { u(1) }
        expect(5) { u(2) }
        expect(6) { u(3) }

        intercept[IndexOutOfBoundsException] {
            u(4)
        }
        intercept[IndexOutOfBoundsException] {
            u(-1)
        }
    }

    test("Indexed write") {
        val u = Vec4(3, 4, 5, 6)

        u(0) = 5
        assert(Vec4(5, 4, 5, 6) == u)

        u(1) = 6
        assert(Vec4(5, 6, 5, 6) == u)

        u(2) = 7
        assert(Vec4(5, 6, 7, 6) == u)

        u(3) = 8
        assert(Vec4(5, 6, 7, 8) == u)

        intercept[IndexOutOfBoundsException] {
            u(4) = 1
        }
        intercept[IndexOutOfBoundsException] {
            u(-1) = 1
        }
    }

    test("Swizzled read") {
        val u = ConstVec4(5, 6, 7, 8)

        expect(5) { u.x }
        expect(6) { u.y }
        expect(7) { u.z }
        expect(8) { u.w }

        expect(5) { u.r }
        expect(6) { u.g }
        expect(7) { u.b }
        expect(8) { u.a }

        expect(5) { u.s }
        expect(6) { u.t }
        expect(7) { u.p }
        expect(8) { u.q }

        assert(Vec2(5, 5) == u.xx)
        assert(Vec2(5, 6) == u.xy)
        assert(Vec2(5, 7) == u.xz)
        assert(Vec2(5, 8) == u.xw)
        assert(Vec2(6, 5) == u.yx)
        assert(Vec2(6, 6) == u.yy)
        assert(Vec2(6, 7) == u.yz)
        assert(Vec2(6, 8) == u.yw)
        assert(Vec2(7, 5) == u.zx)
        assert(Vec2(7, 6) == u.zy)
        assert(Vec2(7, 7) == u.zz)
        assert(Vec2(7, 8) == u.zw)
        assert(Vec2(8, 5) == u.wx)
        assert(Vec2(8, 6) == u.wy)
        assert(Vec2(8, 7) == u.wz)
        assert(Vec2(8, 8) == u.ww)
        assert(Vec3(5, 5, 5) == u.xxx)
        assert(Vec3(5, 5, 6) == u.xxy)
        assert(Vec3(5, 5, 7) == u.xxz)
        assert(Vec3(5, 5, 8) == u.xxw)
        assert(Vec3(5, 6, 5) == u.xyx)
        assert(Vec3(5, 6, 6) == u.xyy)
        assert(Vec3(5, 6, 7) == u.xyz)
        assert(Vec3(5, 6, 8) == u.xyw)
        assert(Vec3(5, 7, 5) == u.xzx)
        assert(Vec3(5, 7, 6) == u.xzy)
        assert(Vec3(5, 7, 7) == u.xzz)
        assert(Vec3(5, 7, 8) == u.xzw)
        assert(Vec3(5, 8, 5) == u.xwx)
        assert(Vec3(5, 8, 6) == u.xwy)
        assert(Vec3(5, 8, 7) == u.xwz)
        assert(Vec3(5, 8, 8) == u.xww)
        assert(Vec3(6, 5, 5) == u.yxx)
        assert(Vec3(6, 5, 6) == u.yxy)
        assert(Vec3(6, 5, 7) == u.yxz)
        assert(Vec3(6, 5, 8) == u.yxw)
        assert(Vec3(6, 6, 5) == u.yyx)
        assert(Vec3(6, 6, 6) == u.yyy)
        assert(Vec3(6, 6, 7) == u.yyz)
        assert(Vec3(6, 6, 8) == u.yyw)
        assert(Vec3(6, 7, 5) == u.yzx)
        assert(Vec3(6, 7, 6) == u.yzy)
        assert(Vec3(6, 7, 7) == u.yzz)
        assert(Vec3(6, 7, 8) == u.yzw)
        assert(Vec3(6, 8, 5) == u.ywx)
        assert(Vec3(6, 8, 6) == u.ywy)
        assert(Vec3(6, 8, 7) == u.ywz)
        assert(Vec3(6, 8, 8) == u.yww)
        assert(Vec3(7, 5, 5) == u.zxx)
        assert(Vec3(7, 5, 6) == u.zxy)
        assert(Vec3(7, 5, 7) == u.zxz)
        assert(Vec3(7, 5, 8) == u.zxw)
        assert(Vec3(7, 6, 5) == u.zyx)
        assert(Vec3(7, 6, 6) == u.zyy)
        assert(Vec3(7, 6, 7) == u.zyz)
        assert(Vec3(7, 6, 8) == u.zyw)
        assert(Vec3(7, 7, 5) == u.zzx)
        assert(Vec3(7, 7, 6) == u.zzy)
        assert(Vec3(7, 7, 7) == u.zzz)
        assert(Vec3(7, 7, 8) == u.zzw)
        assert(Vec3(7, 8, 5) == u.zwx)
        assert(Vec3(7, 8, 6) == u.zwy)
        assert(Vec3(7, 8, 7) == u.zwz)
        assert(Vec3(7, 8, 8) == u.zww)
        assert(Vec3(8, 5, 5) == u.wxx)
        assert(Vec3(8, 5, 6) == u.wxy)
        assert(Vec3(8, 5, 7) == u.wxz)
        assert(Vec3(8, 5, 8) == u.wxw)
        assert(Vec3(8, 6, 5) == u.wyx)
        assert(Vec3(8, 6, 6) == u.wyy)
        assert(Vec3(8, 6, 7) == u.wyz)
        assert(Vec3(8, 6, 8) == u.wyw)
        assert(Vec3(8, 7, 5) == u.wzx)
        assert(Vec3(8, 7, 6) == u.wzy)
        assert(Vec3(8, 7, 7) == u.wzz)
        assert(Vec3(8, 7, 8) == u.wzw)
        assert(Vec3(8, 8, 5) == u.wwx)
        assert(Vec3(8, 8, 6) == u.wwy)
        assert(Vec3(8, 8, 7) == u.wwz)
        assert(Vec3(8, 8, 8) == u.www)
        assert(Vec4(5, 5, 5, 5) == u.xxxx)
        assert(Vec4(5, 5, 5, 6) == u.xxxy)
        assert(Vec4(5, 5, 5, 7) == u.xxxz)
        assert(Vec4(5, 5, 5, 8) == u.xxxw)
        assert(Vec4(5, 5, 6, 5) == u.xxyx)
        assert(Vec4(5, 5, 6, 6) == u.xxyy)
        assert(Vec4(5, 5, 6, 7) == u.xxyz)
        assert(Vec4(5, 5, 6, 8) == u.xxyw)
        assert(Vec4(5, 5, 7, 5) == u.xxzx)
        assert(Vec4(5, 5, 7, 6) == u.xxzy)
        assert(Vec4(5, 5, 7, 7) == u.xxzz)
        assert(Vec4(5, 5, 7, 8) == u.xxzw)
        assert(Vec4(5, 5, 8, 5) == u.xxwx)
        assert(Vec4(5, 5, 8, 6) == u.xxwy)
        assert(Vec4(5, 5, 8, 7) == u.xxwz)
        assert(Vec4(5, 5, 8, 8) == u.xxww)
        assert(Vec4(5, 6, 5, 5) == u.xyxx)
        assert(Vec4(5, 6, 5, 6) == u.xyxy)
        assert(Vec4(5, 6, 5, 7) == u.xyxz)
        assert(Vec4(5, 6, 5, 8) == u.xyxw)
        assert(Vec4(5, 6, 6, 5) == u.xyyx)
        assert(Vec4(5, 6, 6, 6) == u.xyyy)
        assert(Vec4(5, 6, 6, 7) == u.xyyz)
        assert(Vec4(5, 6, 6, 8) == u.xyyw)
        assert(Vec4(5, 6, 7, 5) == u.xyzx)
        assert(Vec4(5, 6, 7, 6) == u.xyzy)
        assert(Vec4(5, 6, 7, 7) == u.xyzz)
        assert(Vec4(5, 6, 7, 8) == u.xyzw)
        assert(Vec4(5, 6, 8, 5) == u.xywx)
        assert(Vec4(5, 6, 8, 6) == u.xywy)
        assert(Vec4(5, 6, 8, 7) == u.xywz)
        assert(Vec4(5, 6, 8, 8) == u.xyww)
        assert(Vec4(5, 7, 5, 5) == u.xzxx)
        assert(Vec4(5, 7, 5, 6) == u.xzxy)
        assert(Vec4(5, 7, 5, 7) == u.xzxz)
        assert(Vec4(5, 7, 5, 8) == u.xzxw)
        assert(Vec4(5, 7, 6, 5) == u.xzyx)
        assert(Vec4(5, 7, 6, 6) == u.xzyy)
        assert(Vec4(5, 7, 6, 7) == u.xzyz)
        assert(Vec4(5, 7, 6, 8) == u.xzyw)
        assert(Vec4(5, 7, 7, 5) == u.xzzx)
        assert(Vec4(5, 7, 7, 6) == u.xzzy)
        assert(Vec4(5, 7, 7, 7) == u.xzzz)
        assert(Vec4(5, 7, 7, 8) == u.xzzw)
        assert(Vec4(5, 7, 8, 5) == u.xzwx)
        assert(Vec4(5, 7, 8, 6) == u.xzwy)
        assert(Vec4(5, 7, 8, 7) == u.xzwz)
        assert(Vec4(5, 7, 8, 8) == u.xzww)
        assert(Vec4(5, 8, 5, 5) == u.xwxx)
        assert(Vec4(5, 8, 5, 6) == u.xwxy)
        assert(Vec4(5, 8, 5, 7) == u.xwxz)
        assert(Vec4(5, 8, 5, 8) == u.xwxw)
        assert(Vec4(5, 8, 6, 5) == u.xwyx)
        assert(Vec4(5, 8, 6, 6) == u.xwyy)
        assert(Vec4(5, 8, 6, 7) == u.xwyz)
        assert(Vec4(5, 8, 6, 8) == u.xwyw)
        assert(Vec4(5, 8, 7, 5) == u.xwzx)
        assert(Vec4(5, 8, 7, 6) == u.xwzy)
        assert(Vec4(5, 8, 7, 7) == u.xwzz)
        assert(Vec4(5, 8, 7, 8) == u.xwzw)
        assert(Vec4(5, 8, 8, 5) == u.xwwx)
        assert(Vec4(5, 8, 8, 6) == u.xwwy)
        assert(Vec4(5, 8, 8, 7) == u.xwwz)
        assert(Vec4(5, 8, 8, 8) == u.xwww)
        assert(Vec4(6, 5, 5, 5) == u.yxxx)
        assert(Vec4(6, 5, 5, 6) == u.yxxy)
        assert(Vec4(6, 5, 5, 7) == u.yxxz)
        assert(Vec4(6, 5, 5, 8) == u.yxxw)
        assert(Vec4(6, 5, 6, 5) == u.yxyx)
        assert(Vec4(6, 5, 6, 6) == u.yxyy)
        assert(Vec4(6, 5, 6, 7) == u.yxyz)
        assert(Vec4(6, 5, 6, 8) == u.yxyw)
        assert(Vec4(6, 5, 7, 5) == u.yxzx)
        assert(Vec4(6, 5, 7, 6) == u.yxzy)
        assert(Vec4(6, 5, 7, 7) == u.yxzz)
        assert(Vec4(6, 5, 7, 8) == u.yxzw)
        assert(Vec4(6, 5, 8, 5) == u.yxwx)
        assert(Vec4(6, 5, 8, 6) == u.yxwy)
        assert(Vec4(6, 5, 8, 7) == u.yxwz)
        assert(Vec4(6, 5, 8, 8) == u.yxww)
        assert(Vec4(6, 6, 5, 5) == u.yyxx)
        assert(Vec4(6, 6, 5, 6) == u.yyxy)
        assert(Vec4(6, 6, 5, 7) == u.yyxz)
        assert(Vec4(6, 6, 5, 8) == u.yyxw)
        assert(Vec4(6, 6, 6, 5) == u.yyyx)
        assert(Vec4(6, 6, 6, 6) == u.yyyy)
        assert(Vec4(6, 6, 6, 7) == u.yyyz)
        assert(Vec4(6, 6, 6, 8) == u.yyyw)
        assert(Vec4(6, 6, 7, 5) == u.yyzx)
        assert(Vec4(6, 6, 7, 6) == u.yyzy)
        assert(Vec4(6, 6, 7, 7) == u.yyzz)
        assert(Vec4(6, 6, 7, 8) == u.yyzw)
        assert(Vec4(6, 6, 8, 5) == u.yywx)
        assert(Vec4(6, 6, 8, 6) == u.yywy)
        assert(Vec4(6, 6, 8, 7) == u.yywz)
        assert(Vec4(6, 6, 8, 8) == u.yyww)
        assert(Vec4(6, 7, 5, 5) == u.yzxx)
        assert(Vec4(6, 7, 5, 6) == u.yzxy)
        assert(Vec4(6, 7, 5, 7) == u.yzxz)
        assert(Vec4(6, 7, 5, 8) == u.yzxw)
        assert(Vec4(6, 7, 6, 5) == u.yzyx)
        assert(Vec4(6, 7, 6, 6) == u.yzyy)
        assert(Vec4(6, 7, 6, 7) == u.yzyz)
        assert(Vec4(6, 7, 6, 8) == u.yzyw)
        assert(Vec4(6, 7, 7, 5) == u.yzzx)
        assert(Vec4(6, 7, 7, 6) == u.yzzy)
        assert(Vec4(6, 7, 7, 7) == u.yzzz)
        assert(Vec4(6, 7, 7, 8) == u.yzzw)
        assert(Vec4(6, 7, 8, 5) == u.yzwx)
        assert(Vec4(6, 7, 8, 6) == u.yzwy)
        assert(Vec4(6, 7, 8, 7) == u.yzwz)
        assert(Vec4(6, 7, 8, 8) == u.yzww)
        assert(Vec4(6, 8, 5, 5) == u.ywxx)
        assert(Vec4(6, 8, 5, 6) == u.ywxy)
        assert(Vec4(6, 8, 5, 7) == u.ywxz)
        assert(Vec4(6, 8, 5, 8) == u.ywxw)
        assert(Vec4(6, 8, 6, 5) == u.ywyx)
        assert(Vec4(6, 8, 6, 6) == u.ywyy)
        assert(Vec4(6, 8, 6, 7) == u.ywyz)
        assert(Vec4(6, 8, 6, 8) == u.ywyw)
        assert(Vec4(6, 8, 7, 5) == u.ywzx)
        assert(Vec4(6, 8, 7, 6) == u.ywzy)
        assert(Vec4(6, 8, 7, 7) == u.ywzz)
        assert(Vec4(6, 8, 7, 8) == u.ywzw)
        assert(Vec4(6, 8, 8, 5) == u.ywwx)
        assert(Vec4(6, 8, 8, 6) == u.ywwy)
        assert(Vec4(6, 8, 8, 7) == u.ywwz)
        assert(Vec4(6, 8, 8, 8) == u.ywww)
        assert(Vec4(7, 5, 5, 5) == u.zxxx)
        assert(Vec4(7, 5, 5, 6) == u.zxxy)
        assert(Vec4(7, 5, 5, 7) == u.zxxz)
        assert(Vec4(7, 5, 5, 8) == u.zxxw)
        assert(Vec4(7, 5, 6, 5) == u.zxyx)
        assert(Vec4(7, 5, 6, 6) == u.zxyy)
        assert(Vec4(7, 5, 6, 7) == u.zxyz)
        assert(Vec4(7, 5, 6, 8) == u.zxyw)
        assert(Vec4(7, 5, 7, 5) == u.zxzx)
        assert(Vec4(7, 5, 7, 6) == u.zxzy)
        assert(Vec4(7, 5, 7, 7) == u.zxzz)
        assert(Vec4(7, 5, 7, 8) == u.zxzw)
        assert(Vec4(7, 5, 8, 5) == u.zxwx)
        assert(Vec4(7, 5, 8, 6) == u.zxwy)
        assert(Vec4(7, 5, 8, 7) == u.zxwz)
        assert(Vec4(7, 5, 8, 8) == u.zxww)
        assert(Vec4(7, 6, 5, 5) == u.zyxx)
        assert(Vec4(7, 6, 5, 6) == u.zyxy)
        assert(Vec4(7, 6, 5, 7) == u.zyxz)
        assert(Vec4(7, 6, 5, 8) == u.zyxw)
        assert(Vec4(7, 6, 6, 5) == u.zyyx)
        assert(Vec4(7, 6, 6, 6) == u.zyyy)
        assert(Vec4(7, 6, 6, 7) == u.zyyz)
        assert(Vec4(7, 6, 6, 8) == u.zyyw)
        assert(Vec4(7, 6, 7, 5) == u.zyzx)
        assert(Vec4(7, 6, 7, 6) == u.zyzy)
        assert(Vec4(7, 6, 7, 7) == u.zyzz)
        assert(Vec4(7, 6, 7, 8) == u.zyzw)
        assert(Vec4(7, 6, 8, 5) == u.zywx)
        assert(Vec4(7, 6, 8, 6) == u.zywy)
        assert(Vec4(7, 6, 8, 7) == u.zywz)
        assert(Vec4(7, 6, 8, 8) == u.zyww)
        assert(Vec4(7, 7, 5, 5) == u.zzxx)
        assert(Vec4(7, 7, 5, 6) == u.zzxy)
        assert(Vec4(7, 7, 5, 7) == u.zzxz)
        assert(Vec4(7, 7, 5, 8) == u.zzxw)
        assert(Vec4(7, 7, 6, 5) == u.zzyx)
        assert(Vec4(7, 7, 6, 6) == u.zzyy)
        assert(Vec4(7, 7, 6, 7) == u.zzyz)
        assert(Vec4(7, 7, 6, 8) == u.zzyw)
        assert(Vec4(7, 7, 7, 5) == u.zzzx)
        assert(Vec4(7, 7, 7, 6) == u.zzzy)
        assert(Vec4(7, 7, 7, 7) == u.zzzz)
        assert(Vec4(7, 7, 7, 8) == u.zzzw)
        assert(Vec4(7, 7, 8, 5) == u.zzwx)
        assert(Vec4(7, 7, 8, 6) == u.zzwy)
        assert(Vec4(7, 7, 8, 7) == u.zzwz)
        assert(Vec4(7, 7, 8, 8) == u.zzww)
        assert(Vec4(7, 8, 5, 5) == u.zwxx)
        assert(Vec4(7, 8, 5, 6) == u.zwxy)
        assert(Vec4(7, 8, 5, 7) == u.zwxz)
        assert(Vec4(7, 8, 5, 8) == u.zwxw)
        assert(Vec4(7, 8, 6, 5) == u.zwyx)
        assert(Vec4(7, 8, 6, 6) == u.zwyy)
        assert(Vec4(7, 8, 6, 7) == u.zwyz)
        assert(Vec4(7, 8, 6, 8) == u.zwyw)
        assert(Vec4(7, 8, 7, 5) == u.zwzx)
        assert(Vec4(7, 8, 7, 6) == u.zwzy)
        assert(Vec4(7, 8, 7, 7) == u.zwzz)
        assert(Vec4(7, 8, 7, 8) == u.zwzw)
        assert(Vec4(7, 8, 8, 5) == u.zwwx)
        assert(Vec4(7, 8, 8, 6) == u.zwwy)
        assert(Vec4(7, 8, 8, 7) == u.zwwz)
        assert(Vec4(7, 8, 8, 8) == u.zwww)
        assert(Vec4(8, 5, 5, 5) == u.wxxx)
        assert(Vec4(8, 5, 5, 6) == u.wxxy)
        assert(Vec4(8, 5, 5, 7) == u.wxxz)
        assert(Vec4(8, 5, 5, 8) == u.wxxw)
        assert(Vec4(8, 5, 6, 5) == u.wxyx)
        assert(Vec4(8, 5, 6, 6) == u.wxyy)
        assert(Vec4(8, 5, 6, 7) == u.wxyz)
        assert(Vec4(8, 5, 6, 8) == u.wxyw)
        assert(Vec4(8, 5, 7, 5) == u.wxzx)
        assert(Vec4(8, 5, 7, 6) == u.wxzy)
        assert(Vec4(8, 5, 7, 7) == u.wxzz)
        assert(Vec4(8, 5, 7, 8) == u.wxzw)
        assert(Vec4(8, 5, 8, 5) == u.wxwx)
        assert(Vec4(8, 5, 8, 6) == u.wxwy)
        assert(Vec4(8, 5, 8, 7) == u.wxwz)
        assert(Vec4(8, 5, 8, 8) == u.wxww)
        assert(Vec4(8, 6, 5, 5) == u.wyxx)
        assert(Vec4(8, 6, 5, 6) == u.wyxy)
        assert(Vec4(8, 6, 5, 7) == u.wyxz)
        assert(Vec4(8, 6, 5, 8) == u.wyxw)
        assert(Vec4(8, 6, 6, 5) == u.wyyx)
        assert(Vec4(8, 6, 6, 6) == u.wyyy)
        assert(Vec4(8, 6, 6, 7) == u.wyyz)
        assert(Vec4(8, 6, 6, 8) == u.wyyw)
        assert(Vec4(8, 6, 7, 5) == u.wyzx)
        assert(Vec4(8, 6, 7, 6) == u.wyzy)
        assert(Vec4(8, 6, 7, 7) == u.wyzz)
        assert(Vec4(8, 6, 7, 8) == u.wyzw)
        assert(Vec4(8, 6, 8, 5) == u.wywx)
        assert(Vec4(8, 6, 8, 6) == u.wywy)
        assert(Vec4(8, 6, 8, 7) == u.wywz)
        assert(Vec4(8, 6, 8, 8) == u.wyww)
        assert(Vec4(8, 7, 5, 5) == u.wzxx)
        assert(Vec4(8, 7, 5, 6) == u.wzxy)
        assert(Vec4(8, 7, 5, 7) == u.wzxz)
        assert(Vec4(8, 7, 5, 8) == u.wzxw)
        assert(Vec4(8, 7, 6, 5) == u.wzyx)
        assert(Vec4(8, 7, 6, 6) == u.wzyy)
        assert(Vec4(8, 7, 6, 7) == u.wzyz)
        assert(Vec4(8, 7, 6, 8) == u.wzyw)
        assert(Vec4(8, 7, 7, 5) == u.wzzx)
        assert(Vec4(8, 7, 7, 6) == u.wzzy)
        assert(Vec4(8, 7, 7, 7) == u.wzzz)
        assert(Vec4(8, 7, 7, 8) == u.wzzw)
        assert(Vec4(8, 7, 8, 5) == u.wzwx)
        assert(Vec4(8, 7, 8, 6) == u.wzwy)
        assert(Vec4(8, 7, 8, 7) == u.wzwz)
        assert(Vec4(8, 7, 8, 8) == u.wzww)
        assert(Vec4(8, 8, 5, 5) == u.wwxx)
        assert(Vec4(8, 8, 5, 6) == u.wwxy)
        assert(Vec4(8, 8, 5, 7) == u.wwxz)
        assert(Vec4(8, 8, 5, 8) == u.wwxw)
        assert(Vec4(8, 8, 6, 5) == u.wwyx)
        assert(Vec4(8, 8, 6, 6) == u.wwyy)
        assert(Vec4(8, 8, 6, 7) == u.wwyz)
        assert(Vec4(8, 8, 6, 8) == u.wwyw)
        assert(Vec4(8, 8, 7, 5) == u.wwzx)
        assert(Vec4(8, 8, 7, 6) == u.wwzy)
        assert(Vec4(8, 8, 7, 7) == u.wwzz)
        assert(Vec4(8, 8, 7, 8) == u.wwzw)
        assert(Vec4(8, 8, 8, 5) == u.wwwx)
        assert(Vec4(8, 8, 8, 6) == u.wwwy)
        assert(Vec4(8, 8, 8, 7) == u.wwwz)
        assert(Vec4(8, 8, 8, 8) == u.wwww)
        assert(Vec2(5, 5) == u.rr)
        assert(Vec2(5, 6) == u.rg)
        assert(Vec2(5, 7) == u.rb)
        assert(Vec2(5, 8) == u.ra)
        assert(Vec2(6, 5) == u.gr)
        assert(Vec2(6, 6) == u.gg)
        assert(Vec2(6, 7) == u.gb)
        assert(Vec2(6, 8) == u.ga)
        assert(Vec2(7, 5) == u.br)
        assert(Vec2(7, 6) == u.bg)
        assert(Vec2(7, 7) == u.bb)
        assert(Vec2(7, 8) == u.ba)
        assert(Vec2(8, 5) == u.ar)
        assert(Vec2(8, 6) == u.ag)
        assert(Vec2(8, 7) == u.ab)
        assert(Vec2(8, 8) == u.aa)
        assert(Vec3(5, 5, 5) == u.rrr)
        assert(Vec3(5, 5, 6) == u.rrg)
        assert(Vec3(5, 5, 7) == u.rrb)
        assert(Vec3(5, 5, 8) == u.rra)
        assert(Vec3(5, 6, 5) == u.rgr)
        assert(Vec3(5, 6, 6) == u.rgg)
        assert(Vec3(5, 6, 7) == u.rgb)
        assert(Vec3(5, 6, 8) == u.rga)
        assert(Vec3(5, 7, 5) == u.rbr)
        assert(Vec3(5, 7, 6) == u.rbg)
        assert(Vec3(5, 7, 7) == u.rbb)
        assert(Vec3(5, 7, 8) == u.rba)
        assert(Vec3(5, 8, 5) == u.rar)
        assert(Vec3(5, 8, 6) == u.rag)
        assert(Vec3(5, 8, 7) == u.rab)
        assert(Vec3(5, 8, 8) == u.raa)
        assert(Vec3(6, 5, 5) == u.grr)
        assert(Vec3(6, 5, 6) == u.grg)
        assert(Vec3(6, 5, 7) == u.grb)
        assert(Vec3(6, 5, 8) == u.gra)
        assert(Vec3(6, 6, 5) == u.ggr)
        assert(Vec3(6, 6, 6) == u.ggg)
        assert(Vec3(6, 6, 7) == u.ggb)
        assert(Vec3(6, 6, 8) == u.gga)
        assert(Vec3(6, 7, 5) == u.gbr)
        assert(Vec3(6, 7, 6) == u.gbg)
        assert(Vec3(6, 7, 7) == u.gbb)
        assert(Vec3(6, 7, 8) == u.gba)
        assert(Vec3(6, 8, 5) == u.gar)
        assert(Vec3(6, 8, 6) == u.gag)
        assert(Vec3(6, 8, 7) == u.gab)
        assert(Vec3(6, 8, 8) == u.gaa)
        assert(Vec3(7, 5, 5) == u.brr)
        assert(Vec3(7, 5, 6) == u.brg)
        assert(Vec3(7, 5, 7) == u.brb)
        assert(Vec3(7, 5, 8) == u.bra)
        assert(Vec3(7, 6, 5) == u.bgr)
        assert(Vec3(7, 6, 6) == u.bgg)
        assert(Vec3(7, 6, 7) == u.bgb)
        assert(Vec3(7, 6, 8) == u.bga)
        assert(Vec3(7, 7, 5) == u.bbr)
        assert(Vec3(7, 7, 6) == u.bbg)
        assert(Vec3(7, 7, 7) == u.bbb)
        assert(Vec3(7, 7, 8) == u.bba)
        assert(Vec3(7, 8, 5) == u.bar)
        assert(Vec3(7, 8, 6) == u.bag)
        assert(Vec3(7, 8, 7) == u.bab)
        assert(Vec3(7, 8, 8) == u.baa)
        assert(Vec3(8, 5, 5) == u.arr)
        assert(Vec3(8, 5, 6) == u.arg)
        assert(Vec3(8, 5, 7) == u.arb)
        assert(Vec3(8, 5, 8) == u.ara)
        assert(Vec3(8, 6, 5) == u.agr)
        assert(Vec3(8, 6, 6) == u.agg)
        assert(Vec3(8, 6, 7) == u.agb)
        assert(Vec3(8, 6, 8) == u.aga)
        assert(Vec3(8, 7, 5) == u.abr)
        assert(Vec3(8, 7, 6) == u.abg)
        assert(Vec3(8, 7, 7) == u.abb)
        assert(Vec3(8, 7, 8) == u.aba)
        assert(Vec3(8, 8, 5) == u.aar)
        assert(Vec3(8, 8, 6) == u.aag)
        assert(Vec3(8, 8, 7) == u.aab)
        assert(Vec3(8, 8, 8) == u.aaa)
        assert(Vec4(5, 5, 5, 5) == u.rrrr)
        assert(Vec4(5, 5, 5, 6) == u.rrrg)
        assert(Vec4(5, 5, 5, 7) == u.rrrb)
        assert(Vec4(5, 5, 5, 8) == u.rrra)
        assert(Vec4(5, 5, 6, 5) == u.rrgr)
        assert(Vec4(5, 5, 6, 6) == u.rrgg)
        assert(Vec4(5, 5, 6, 7) == u.rrgb)
        assert(Vec4(5, 5, 6, 8) == u.rrga)
        assert(Vec4(5, 5, 7, 5) == u.rrbr)
        assert(Vec4(5, 5, 7, 6) == u.rrbg)
        assert(Vec4(5, 5, 7, 7) == u.rrbb)
        assert(Vec4(5, 5, 7, 8) == u.rrba)
        assert(Vec4(5, 5, 8, 5) == u.rrar)
        assert(Vec4(5, 5, 8, 6) == u.rrag)
        assert(Vec4(5, 5, 8, 7) == u.rrab)
        assert(Vec4(5, 5, 8, 8) == u.rraa)
        assert(Vec4(5, 6, 5, 5) == u.rgrr)
        assert(Vec4(5, 6, 5, 6) == u.rgrg)
        assert(Vec4(5, 6, 5, 7) == u.rgrb)
        assert(Vec4(5, 6, 5, 8) == u.rgra)
        assert(Vec4(5, 6, 6, 5) == u.rggr)
        assert(Vec4(5, 6, 6, 6) == u.rggg)
        assert(Vec4(5, 6, 6, 7) == u.rggb)
        assert(Vec4(5, 6, 6, 8) == u.rgga)
        assert(Vec4(5, 6, 7, 5) == u.rgbr)
        assert(Vec4(5, 6, 7, 6) == u.rgbg)
        assert(Vec4(5, 6, 7, 7) == u.rgbb)
        assert(Vec4(5, 6, 7, 8) == u.rgba)
        assert(Vec4(5, 6, 8, 5) == u.rgar)
        assert(Vec4(5, 6, 8, 6) == u.rgag)
        assert(Vec4(5, 6, 8, 7) == u.rgab)
        assert(Vec4(5, 6, 8, 8) == u.rgaa)
        assert(Vec4(5, 7, 5, 5) == u.rbrr)
        assert(Vec4(5, 7, 5, 6) == u.rbrg)
        assert(Vec4(5, 7, 5, 7) == u.rbrb)
        assert(Vec4(5, 7, 5, 8) == u.rbra)
        assert(Vec4(5, 7, 6, 5) == u.rbgr)
        assert(Vec4(5, 7, 6, 6) == u.rbgg)
        assert(Vec4(5, 7, 6, 7) == u.rbgb)
        assert(Vec4(5, 7, 6, 8) == u.rbga)
        assert(Vec4(5, 7, 7, 5) == u.rbbr)
        assert(Vec4(5, 7, 7, 6) == u.rbbg)
        assert(Vec4(5, 7, 7, 7) == u.rbbb)
        assert(Vec4(5, 7, 7, 8) == u.rbba)
        assert(Vec4(5, 7, 8, 5) == u.rbar)
        assert(Vec4(5, 7, 8, 6) == u.rbag)
        assert(Vec4(5, 7, 8, 7) == u.rbab)
        assert(Vec4(5, 7, 8, 8) == u.rbaa)
        assert(Vec4(5, 8, 5, 5) == u.rarr)
        assert(Vec4(5, 8, 5, 6) == u.rarg)
        assert(Vec4(5, 8, 5, 7) == u.rarb)
        assert(Vec4(5, 8, 5, 8) == u.rara)
        assert(Vec4(5, 8, 6, 5) == u.ragr)
        assert(Vec4(5, 8, 6, 6) == u.ragg)
        assert(Vec4(5, 8, 6, 7) == u.ragb)
        assert(Vec4(5, 8, 6, 8) == u.raga)
        assert(Vec4(5, 8, 7, 5) == u.rabr)
        assert(Vec4(5, 8, 7, 6) == u.rabg)
        assert(Vec4(5, 8, 7, 7) == u.rabb)
        assert(Vec4(5, 8, 7, 8) == u.raba)
        assert(Vec4(5, 8, 8, 5) == u.raar)
        assert(Vec4(5, 8, 8, 6) == u.raag)
        assert(Vec4(5, 8, 8, 7) == u.raab)
        assert(Vec4(5, 8, 8, 8) == u.raaa)
        assert(Vec4(6, 5, 5, 5) == u.grrr)
        assert(Vec4(6, 5, 5, 6) == u.grrg)
        assert(Vec4(6, 5, 5, 7) == u.grrb)
        assert(Vec4(6, 5, 5, 8) == u.grra)
        assert(Vec4(6, 5, 6, 5) == u.grgr)
        assert(Vec4(6, 5, 6, 6) == u.grgg)
        assert(Vec4(6, 5, 6, 7) == u.grgb)
        assert(Vec4(6, 5, 6, 8) == u.grga)
        assert(Vec4(6, 5, 7, 5) == u.grbr)
        assert(Vec4(6, 5, 7, 6) == u.grbg)
        assert(Vec4(6, 5, 7, 7) == u.grbb)
        assert(Vec4(6, 5, 7, 8) == u.grba)
        assert(Vec4(6, 5, 8, 5) == u.grar)
        assert(Vec4(6, 5, 8, 6) == u.grag)
        assert(Vec4(6, 5, 8, 7) == u.grab)
        assert(Vec4(6, 5, 8, 8) == u.graa)
        assert(Vec4(6, 6, 5, 5) == u.ggrr)
        assert(Vec4(6, 6, 5, 6) == u.ggrg)
        assert(Vec4(6, 6, 5, 7) == u.ggrb)
        assert(Vec4(6, 6, 5, 8) == u.ggra)
        assert(Vec4(6, 6, 6, 5) == u.gggr)
        assert(Vec4(6, 6, 6, 6) == u.gggg)
        assert(Vec4(6, 6, 6, 7) == u.gggb)
        assert(Vec4(6, 6, 6, 8) == u.ggga)
        assert(Vec4(6, 6, 7, 5) == u.ggbr)
        assert(Vec4(6, 6, 7, 6) == u.ggbg)
        assert(Vec4(6, 6, 7, 7) == u.ggbb)
        assert(Vec4(6, 6, 7, 8) == u.ggba)
        assert(Vec4(6, 6, 8, 5) == u.ggar)
        assert(Vec4(6, 6, 8, 6) == u.ggag)
        assert(Vec4(6, 6, 8, 7) == u.ggab)
        assert(Vec4(6, 6, 8, 8) == u.ggaa)
        assert(Vec4(6, 7, 5, 5) == u.gbrr)
        assert(Vec4(6, 7, 5, 6) == u.gbrg)
        assert(Vec4(6, 7, 5, 7) == u.gbrb)
        assert(Vec4(6, 7, 5, 8) == u.gbra)
        assert(Vec4(6, 7, 6, 5) == u.gbgr)
        assert(Vec4(6, 7, 6, 6) == u.gbgg)
        assert(Vec4(6, 7, 6, 7) == u.gbgb)
        assert(Vec4(6, 7, 6, 8) == u.gbga)
        assert(Vec4(6, 7, 7, 5) == u.gbbr)
        assert(Vec4(6, 7, 7, 6) == u.gbbg)
        assert(Vec4(6, 7, 7, 7) == u.gbbb)
        assert(Vec4(6, 7, 7, 8) == u.gbba)
        assert(Vec4(6, 7, 8, 5) == u.gbar)
        assert(Vec4(6, 7, 8, 6) == u.gbag)
        assert(Vec4(6, 7, 8, 7) == u.gbab)
        assert(Vec4(6, 7, 8, 8) == u.gbaa)
        assert(Vec4(6, 8, 5, 5) == u.garr)
        assert(Vec4(6, 8, 5, 6) == u.garg)
        assert(Vec4(6, 8, 5, 7) == u.garb)
        assert(Vec4(6, 8, 5, 8) == u.gara)
        assert(Vec4(6, 8, 6, 5) == u.gagr)
        assert(Vec4(6, 8, 6, 6) == u.gagg)
        assert(Vec4(6, 8, 6, 7) == u.gagb)
        assert(Vec4(6, 8, 6, 8) == u.gaga)
        assert(Vec4(6, 8, 7, 5) == u.gabr)
        assert(Vec4(6, 8, 7, 6) == u.gabg)
        assert(Vec4(6, 8, 7, 7) == u.gabb)
        assert(Vec4(6, 8, 7, 8) == u.gaba)
        assert(Vec4(6, 8, 8, 5) == u.gaar)
        assert(Vec4(6, 8, 8, 6) == u.gaag)
        assert(Vec4(6, 8, 8, 7) == u.gaab)
        assert(Vec4(6, 8, 8, 8) == u.gaaa)
        assert(Vec4(7, 5, 5, 5) == u.brrr)
        assert(Vec4(7, 5, 5, 6) == u.brrg)
        assert(Vec4(7, 5, 5, 7) == u.brrb)
        assert(Vec4(7, 5, 5, 8) == u.brra)
        assert(Vec4(7, 5, 6, 5) == u.brgr)
        assert(Vec4(7, 5, 6, 6) == u.brgg)
        assert(Vec4(7, 5, 6, 7) == u.brgb)
        assert(Vec4(7, 5, 6, 8) == u.brga)
        assert(Vec4(7, 5, 7, 5) == u.brbr)
        assert(Vec4(7, 5, 7, 6) == u.brbg)
        assert(Vec4(7, 5, 7, 7) == u.brbb)
        assert(Vec4(7, 5, 7, 8) == u.brba)
        assert(Vec4(7, 5, 8, 5) == u.brar)
        assert(Vec4(7, 5, 8, 6) == u.brag)
        assert(Vec4(7, 5, 8, 7) == u.brab)
        assert(Vec4(7, 5, 8, 8) == u.braa)
        assert(Vec4(7, 6, 5, 5) == u.bgrr)
        assert(Vec4(7, 6, 5, 6) == u.bgrg)
        assert(Vec4(7, 6, 5, 7) == u.bgrb)
        assert(Vec4(7, 6, 5, 8) == u.bgra)
        assert(Vec4(7, 6, 6, 5) == u.bggr)
        assert(Vec4(7, 6, 6, 6) == u.bggg)
        assert(Vec4(7, 6, 6, 7) == u.bggb)
        assert(Vec4(7, 6, 6, 8) == u.bgga)
        assert(Vec4(7, 6, 7, 5) == u.bgbr)
        assert(Vec4(7, 6, 7, 6) == u.bgbg)
        assert(Vec4(7, 6, 7, 7) == u.bgbb)
        assert(Vec4(7, 6, 7, 8) == u.bgba)
        assert(Vec4(7, 6, 8, 5) == u.bgar)
        assert(Vec4(7, 6, 8, 6) == u.bgag)
        assert(Vec4(7, 6, 8, 7) == u.bgab)
        assert(Vec4(7, 6, 8, 8) == u.bgaa)
        assert(Vec4(7, 7, 5, 5) == u.bbrr)
        assert(Vec4(7, 7, 5, 6) == u.bbrg)
        assert(Vec4(7, 7, 5, 7) == u.bbrb)
        assert(Vec4(7, 7, 5, 8) == u.bbra)
        assert(Vec4(7, 7, 6, 5) == u.bbgr)
        assert(Vec4(7, 7, 6, 6) == u.bbgg)
        assert(Vec4(7, 7, 6, 7) == u.bbgb)
        assert(Vec4(7, 7, 6, 8) == u.bbga)
        assert(Vec4(7, 7, 7, 5) == u.bbbr)
        assert(Vec4(7, 7, 7, 6) == u.bbbg)
        assert(Vec4(7, 7, 7, 7) == u.bbbb)
        assert(Vec4(7, 7, 7, 8) == u.bbba)
        assert(Vec4(7, 7, 8, 5) == u.bbar)
        assert(Vec4(7, 7, 8, 6) == u.bbag)
        assert(Vec4(7, 7, 8, 7) == u.bbab)
        assert(Vec4(7, 7, 8, 8) == u.bbaa)
        assert(Vec4(7, 8, 5, 5) == u.barr)
        assert(Vec4(7, 8, 5, 6) == u.barg)
        assert(Vec4(7, 8, 5, 7) == u.barb)
        assert(Vec4(7, 8, 5, 8) == u.bara)
        assert(Vec4(7, 8, 6, 5) == u.bagr)
        assert(Vec4(7, 8, 6, 6) == u.bagg)
        assert(Vec4(7, 8, 6, 7) == u.bagb)
        assert(Vec4(7, 8, 6, 8) == u.baga)
        assert(Vec4(7, 8, 7, 5) == u.babr)
        assert(Vec4(7, 8, 7, 6) == u.babg)
        assert(Vec4(7, 8, 7, 7) == u.babb)
        assert(Vec4(7, 8, 7, 8) == u.baba)
        assert(Vec4(7, 8, 8, 5) == u.baar)
        assert(Vec4(7, 8, 8, 6) == u.baag)
        assert(Vec4(7, 8, 8, 7) == u.baab)
        assert(Vec4(7, 8, 8, 8) == u.baaa)
        assert(Vec4(8, 5, 5, 5) == u.arrr)
        assert(Vec4(8, 5, 5, 6) == u.arrg)
        assert(Vec4(8, 5, 5, 7) == u.arrb)
        assert(Vec4(8, 5, 5, 8) == u.arra)
        assert(Vec4(8, 5, 6, 5) == u.argr)
        assert(Vec4(8, 5, 6, 6) == u.argg)
        assert(Vec4(8, 5, 6, 7) == u.argb)
        assert(Vec4(8, 5, 6, 8) == u.arga)
        assert(Vec4(8, 5, 7, 5) == u.arbr)
        assert(Vec4(8, 5, 7, 6) == u.arbg)
        assert(Vec4(8, 5, 7, 7) == u.arbb)
        assert(Vec4(8, 5, 7, 8) == u.arba)
        assert(Vec4(8, 5, 8, 5) == u.arar)
        assert(Vec4(8, 5, 8, 6) == u.arag)
        assert(Vec4(8, 5, 8, 7) == u.arab)
        assert(Vec4(8, 5, 8, 8) == u.araa)
        assert(Vec4(8, 6, 5, 5) == u.agrr)
        assert(Vec4(8, 6, 5, 6) == u.agrg)
        assert(Vec4(8, 6, 5, 7) == u.agrb)
        assert(Vec4(8, 6, 5, 8) == u.agra)
        assert(Vec4(8, 6, 6, 5) == u.aggr)
        assert(Vec4(8, 6, 6, 6) == u.aggg)
        assert(Vec4(8, 6, 6, 7) == u.aggb)
        assert(Vec4(8, 6, 6, 8) == u.agga)
        assert(Vec4(8, 6, 7, 5) == u.agbr)
        assert(Vec4(8, 6, 7, 6) == u.agbg)
        assert(Vec4(8, 6, 7, 7) == u.agbb)
        assert(Vec4(8, 6, 7, 8) == u.agba)
        assert(Vec4(8, 6, 8, 5) == u.agar)
        assert(Vec4(8, 6, 8, 6) == u.agag)
        assert(Vec4(8, 6, 8, 7) == u.agab)
        assert(Vec4(8, 6, 8, 8) == u.agaa)
        assert(Vec4(8, 7, 5, 5) == u.abrr)
        assert(Vec4(8, 7, 5, 6) == u.abrg)
        assert(Vec4(8, 7, 5, 7) == u.abrb)
        assert(Vec4(8, 7, 5, 8) == u.abra)
        assert(Vec4(8, 7, 6, 5) == u.abgr)
        assert(Vec4(8, 7, 6, 6) == u.abgg)
        assert(Vec4(8, 7, 6, 7) == u.abgb)
        assert(Vec4(8, 7, 6, 8) == u.abga)
        assert(Vec4(8, 7, 7, 5) == u.abbr)
        assert(Vec4(8, 7, 7, 6) == u.abbg)
        assert(Vec4(8, 7, 7, 7) == u.abbb)
        assert(Vec4(8, 7, 7, 8) == u.abba)
        assert(Vec4(8, 7, 8, 5) == u.abar)
        assert(Vec4(8, 7, 8, 6) == u.abag)
        assert(Vec4(8, 7, 8, 7) == u.abab)
        assert(Vec4(8, 7, 8, 8) == u.abaa)
        assert(Vec4(8, 8, 5, 5) == u.aarr)
        assert(Vec4(8, 8, 5, 6) == u.aarg)
        assert(Vec4(8, 8, 5, 7) == u.aarb)
        assert(Vec4(8, 8, 5, 8) == u.aara)
        assert(Vec4(8, 8, 6, 5) == u.aagr)
        assert(Vec4(8, 8, 6, 6) == u.aagg)
        assert(Vec4(8, 8, 6, 7) == u.aagb)
        assert(Vec4(8, 8, 6, 8) == u.aaga)
        assert(Vec4(8, 8, 7, 5) == u.aabr)
        assert(Vec4(8, 8, 7, 6) == u.aabg)
        assert(Vec4(8, 8, 7, 7) == u.aabb)
        assert(Vec4(8, 8, 7, 8) == u.aaba)
        assert(Vec4(8, 8, 8, 5) == u.aaar)
        assert(Vec4(8, 8, 8, 6) == u.aaag)
        assert(Vec4(8, 8, 8, 7) == u.aaab)
        assert(Vec4(8, 8, 8, 8) == u.aaaa)
        assert(Vec2(5, 5) == u.ss)
        assert(Vec2(5, 6) == u.st)
        assert(Vec2(5, 7) == u.sp)
        assert(Vec2(5, 8) == u.sq)
        assert(Vec2(6, 5) == u.ts)
        assert(Vec2(6, 6) == u.tt)
        assert(Vec2(6, 7) == u.tp)
        assert(Vec2(6, 8) == u.tq)
        assert(Vec2(7, 5) == u.ps)
        assert(Vec2(7, 6) == u.pt)
        assert(Vec2(7, 7) == u.pp)
        assert(Vec2(7, 8) == u.pq)
        assert(Vec2(8, 5) == u.qs)
        assert(Vec2(8, 6) == u.qt)
        assert(Vec2(8, 7) == u.qp)
        assert(Vec2(8, 8) == u.qq)
        assert(Vec3(5, 5, 5) == u.sss)
        assert(Vec3(5, 5, 6) == u.sst)
        assert(Vec3(5, 5, 7) == u.ssp)
        assert(Vec3(5, 5, 8) == u.ssq)
        assert(Vec3(5, 6, 5) == u.sts)
        assert(Vec3(5, 6, 6) == u.stt)
        assert(Vec3(5, 6, 7) == u.stp)
        assert(Vec3(5, 6, 8) == u.stq)
        assert(Vec3(5, 7, 5) == u.sps)
        assert(Vec3(5, 7, 6) == u.spt)
        assert(Vec3(5, 7, 7) == u.spp)
        assert(Vec3(5, 7, 8) == u.spq)
        assert(Vec3(5, 8, 5) == u.sqs)
        assert(Vec3(5, 8, 6) == u.sqt)
        assert(Vec3(5, 8, 7) == u.sqp)
        assert(Vec3(5, 8, 8) == u.sqq)
        assert(Vec3(6, 5, 5) == u.tss)
        assert(Vec3(6, 5, 6) == u.tst)
        assert(Vec3(6, 5, 7) == u.tsp)
        assert(Vec3(6, 5, 8) == u.tsq)
        assert(Vec3(6, 6, 5) == u.tts)
        assert(Vec3(6, 6, 6) == u.ttt)
        assert(Vec3(6, 6, 7) == u.ttp)
        assert(Vec3(6, 6, 8) == u.ttq)
        assert(Vec3(6, 7, 5) == u.tps)
        assert(Vec3(6, 7, 6) == u.tpt)
        assert(Vec3(6, 7, 7) == u.tpp)
        assert(Vec3(6, 7, 8) == u.tpq)
        assert(Vec3(6, 8, 5) == u.tqs)
        assert(Vec3(6, 8, 6) == u.tqt)
        assert(Vec3(6, 8, 7) == u.tqp)
        assert(Vec3(6, 8, 8) == u.tqq)
        assert(Vec3(7, 5, 5) == u.pss)
        assert(Vec3(7, 5, 6) == u.pst)
        assert(Vec3(7, 5, 7) == u.psp)
        assert(Vec3(7, 5, 8) == u.psq)
        assert(Vec3(7, 6, 5) == u.pts)
        assert(Vec3(7, 6, 6) == u.ptt)
        assert(Vec3(7, 6, 7) == u.ptp)
        assert(Vec3(7, 6, 8) == u.ptq)
        assert(Vec3(7, 7, 5) == u.pps)
        assert(Vec3(7, 7, 6) == u.ppt)
        assert(Vec3(7, 7, 7) == u.ppp)
        assert(Vec3(7, 7, 8) == u.ppq)
        assert(Vec3(7, 8, 5) == u.pqs)
        assert(Vec3(7, 8, 6) == u.pqt)
        assert(Vec3(7, 8, 7) == u.pqp)
        assert(Vec3(7, 8, 8) == u.pqq)
        assert(Vec3(8, 5, 5) == u.qss)
        assert(Vec3(8, 5, 6) == u.qst)
        assert(Vec3(8, 5, 7) == u.qsp)
        assert(Vec3(8, 5, 8) == u.qsq)
        assert(Vec3(8, 6, 5) == u.qts)
        assert(Vec3(8, 6, 6) == u.qtt)
        assert(Vec3(8, 6, 7) == u.qtp)
        assert(Vec3(8, 6, 8) == u.qtq)
        assert(Vec3(8, 7, 5) == u.qps)
        assert(Vec3(8, 7, 6) == u.qpt)
        assert(Vec3(8, 7, 7) == u.qpp)
        assert(Vec3(8, 7, 8) == u.qpq)
        assert(Vec3(8, 8, 5) == u.qqs)
        assert(Vec3(8, 8, 6) == u.qqt)
        assert(Vec3(8, 8, 7) == u.qqp)
        assert(Vec3(8, 8, 8) == u.qqq)
        assert(Vec4(5, 5, 5, 5) == u.ssss)
        assert(Vec4(5, 5, 5, 6) == u.ssst)
        assert(Vec4(5, 5, 5, 7) == u.sssp)
        assert(Vec4(5, 5, 5, 8) == u.sssq)
        assert(Vec4(5, 5, 6, 5) == u.ssts)
        assert(Vec4(5, 5, 6, 6) == u.sstt)
        assert(Vec4(5, 5, 6, 7) == u.sstp)
        assert(Vec4(5, 5, 6, 8) == u.sstq)
        assert(Vec4(5, 5, 7, 5) == u.ssps)
        assert(Vec4(5, 5, 7, 6) == u.sspt)
        assert(Vec4(5, 5, 7, 7) == u.sspp)
        assert(Vec4(5, 5, 7, 8) == u.sspq)
        assert(Vec4(5, 5, 8, 5) == u.ssqs)
        assert(Vec4(5, 5, 8, 6) == u.ssqt)
        assert(Vec4(5, 5, 8, 7) == u.ssqp)
        assert(Vec4(5, 5, 8, 8) == u.ssqq)
        assert(Vec4(5, 6, 5, 5) == u.stss)
        assert(Vec4(5, 6, 5, 6) == u.stst)
        assert(Vec4(5, 6, 5, 7) == u.stsp)
        assert(Vec4(5, 6, 5, 8) == u.stsq)
        assert(Vec4(5, 6, 6, 5) == u.stts)
        assert(Vec4(5, 6, 6, 6) == u.sttt)
        assert(Vec4(5, 6, 6, 7) == u.sttp)
        assert(Vec4(5, 6, 6, 8) == u.sttq)
        assert(Vec4(5, 6, 7, 5) == u.stps)
        assert(Vec4(5, 6, 7, 6) == u.stpt)
        assert(Vec4(5, 6, 7, 7) == u.stpp)
        assert(Vec4(5, 6, 7, 8) == u.stpq)
        assert(Vec4(5, 6, 8, 5) == u.stqs)
        assert(Vec4(5, 6, 8, 6) == u.stqt)
        assert(Vec4(5, 6, 8, 7) == u.stqp)
        assert(Vec4(5, 6, 8, 8) == u.stqq)
        assert(Vec4(5, 7, 5, 5) == u.spss)
        assert(Vec4(5, 7, 5, 6) == u.spst)
        assert(Vec4(5, 7, 5, 7) == u.spsp)
        assert(Vec4(5, 7, 5, 8) == u.spsq)
        assert(Vec4(5, 7, 6, 5) == u.spts)
        assert(Vec4(5, 7, 6, 6) == u.sptt)
        assert(Vec4(5, 7, 6, 7) == u.sptp)
        assert(Vec4(5, 7, 6, 8) == u.sptq)
        assert(Vec4(5, 7, 7, 5) == u.spps)
        assert(Vec4(5, 7, 7, 6) == u.sppt)
        assert(Vec4(5, 7, 7, 7) == u.sppp)
        assert(Vec4(5, 7, 7, 8) == u.sppq)
        assert(Vec4(5, 7, 8, 5) == u.spqs)
        assert(Vec4(5, 7, 8, 6) == u.spqt)
        assert(Vec4(5, 7, 8, 7) == u.spqp)
        assert(Vec4(5, 7, 8, 8) == u.spqq)
        assert(Vec4(5, 8, 5, 5) == u.sqss)
        assert(Vec4(5, 8, 5, 6) == u.sqst)
        assert(Vec4(5, 8, 5, 7) == u.sqsp)
        assert(Vec4(5, 8, 5, 8) == u.sqsq)
        assert(Vec4(5, 8, 6, 5) == u.sqts)
        assert(Vec4(5, 8, 6, 6) == u.sqtt)
        assert(Vec4(5, 8, 6, 7) == u.sqtp)
        assert(Vec4(5, 8, 6, 8) == u.sqtq)
        assert(Vec4(5, 8, 7, 5) == u.sqps)
        assert(Vec4(5, 8, 7, 6) == u.sqpt)
        assert(Vec4(5, 8, 7, 7) == u.sqpp)
        assert(Vec4(5, 8, 7, 8) == u.sqpq)
        assert(Vec4(5, 8, 8, 5) == u.sqqs)
        assert(Vec4(5, 8, 8, 6) == u.sqqt)
        assert(Vec4(5, 8, 8, 7) == u.sqqp)
        assert(Vec4(5, 8, 8, 8) == u.sqqq)
        assert(Vec4(6, 5, 5, 5) == u.tsss)
        assert(Vec4(6, 5, 5, 6) == u.tsst)
        assert(Vec4(6, 5, 5, 7) == u.tssp)
        assert(Vec4(6, 5, 5, 8) == u.tssq)
        assert(Vec4(6, 5, 6, 5) == u.tsts)
        assert(Vec4(6, 5, 6, 6) == u.tstt)
        assert(Vec4(6, 5, 6, 7) == u.tstp)
        assert(Vec4(6, 5, 6, 8) == u.tstq)
        assert(Vec4(6, 5, 7, 5) == u.tsps)
        assert(Vec4(6, 5, 7, 6) == u.tspt)
        assert(Vec4(6, 5, 7, 7) == u.tspp)
        assert(Vec4(6, 5, 7, 8) == u.tspq)
        assert(Vec4(6, 5, 8, 5) == u.tsqs)
        assert(Vec4(6, 5, 8, 6) == u.tsqt)
        assert(Vec4(6, 5, 8, 7) == u.tsqp)
        assert(Vec4(6, 5, 8, 8) == u.tsqq)
        assert(Vec4(6, 6, 5, 5) == u.ttss)
        assert(Vec4(6, 6, 5, 6) == u.ttst)
        assert(Vec4(6, 6, 5, 7) == u.ttsp)
        assert(Vec4(6, 6, 5, 8) == u.ttsq)
        assert(Vec4(6, 6, 6, 5) == u.ttts)
        assert(Vec4(6, 6, 6, 6) == u.tttt)
        assert(Vec4(6, 6, 6, 7) == u.tttp)
        assert(Vec4(6, 6, 6, 8) == u.tttq)
        assert(Vec4(6, 6, 7, 5) == u.ttps)
        assert(Vec4(6, 6, 7, 6) == u.ttpt)
        assert(Vec4(6, 6, 7, 7) == u.ttpp)
        assert(Vec4(6, 6, 7, 8) == u.ttpq)
        assert(Vec4(6, 6, 8, 5) == u.ttqs)
        assert(Vec4(6, 6, 8, 6) == u.ttqt)
        assert(Vec4(6, 6, 8, 7) == u.ttqp)
        assert(Vec4(6, 6, 8, 8) == u.ttqq)
        assert(Vec4(6, 7, 5, 5) == u.tpss)
        assert(Vec4(6, 7, 5, 6) == u.tpst)
        assert(Vec4(6, 7, 5, 7) == u.tpsp)
        assert(Vec4(6, 7, 5, 8) == u.tpsq)
        assert(Vec4(6, 7, 6, 5) == u.tpts)
        assert(Vec4(6, 7, 6, 6) == u.tptt)
        assert(Vec4(6, 7, 6, 7) == u.tptp)
        assert(Vec4(6, 7, 6, 8) == u.tptq)
        assert(Vec4(6, 7, 7, 5) == u.tpps)
        assert(Vec4(6, 7, 7, 6) == u.tppt)
        assert(Vec4(6, 7, 7, 7) == u.tppp)
        assert(Vec4(6, 7, 7, 8) == u.tppq)
        assert(Vec4(6, 7, 8, 5) == u.tpqs)
        assert(Vec4(6, 7, 8, 6) == u.tpqt)
        assert(Vec4(6, 7, 8, 7) == u.tpqp)
        assert(Vec4(6, 7, 8, 8) == u.tpqq)
        assert(Vec4(6, 8, 5, 5) == u.tqss)
        assert(Vec4(6, 8, 5, 6) == u.tqst)
        assert(Vec4(6, 8, 5, 7) == u.tqsp)
        assert(Vec4(6, 8, 5, 8) == u.tqsq)
        assert(Vec4(6, 8, 6, 5) == u.tqts)
        assert(Vec4(6, 8, 6, 6) == u.tqtt)
        assert(Vec4(6, 8, 6, 7) == u.tqtp)
        assert(Vec4(6, 8, 6, 8) == u.tqtq)
        assert(Vec4(6, 8, 7, 5) == u.tqps)
        assert(Vec4(6, 8, 7, 6) == u.tqpt)
        assert(Vec4(6, 8, 7, 7) == u.tqpp)
        assert(Vec4(6, 8, 7, 8) == u.tqpq)
        assert(Vec4(6, 8, 8, 5) == u.tqqs)
        assert(Vec4(6, 8, 8, 6) == u.tqqt)
        assert(Vec4(6, 8, 8, 7) == u.tqqp)
        assert(Vec4(6, 8, 8, 8) == u.tqqq)
        assert(Vec4(7, 5, 5, 5) == u.psss)
        assert(Vec4(7, 5, 5, 6) == u.psst)
        assert(Vec4(7, 5, 5, 7) == u.pssp)
        assert(Vec4(7, 5, 5, 8) == u.pssq)
        assert(Vec4(7, 5, 6, 5) == u.psts)
        assert(Vec4(7, 5, 6, 6) == u.pstt)
        assert(Vec4(7, 5, 6, 7) == u.pstp)
        assert(Vec4(7, 5, 6, 8) == u.pstq)
        assert(Vec4(7, 5, 7, 5) == u.psps)
        assert(Vec4(7, 5, 7, 6) == u.pspt)
        assert(Vec4(7, 5, 7, 7) == u.pspp)
        assert(Vec4(7, 5, 7, 8) == u.pspq)
        assert(Vec4(7, 5, 8, 5) == u.psqs)
        assert(Vec4(7, 5, 8, 6) == u.psqt)
        assert(Vec4(7, 5, 8, 7) == u.psqp)
        assert(Vec4(7, 5, 8, 8) == u.psqq)
        assert(Vec4(7, 6, 5, 5) == u.ptss)
        assert(Vec4(7, 6, 5, 6) == u.ptst)
        assert(Vec4(7, 6, 5, 7) == u.ptsp)
        assert(Vec4(7, 6, 5, 8) == u.ptsq)
        assert(Vec4(7, 6, 6, 5) == u.ptts)
        assert(Vec4(7, 6, 6, 6) == u.pttt)
        assert(Vec4(7, 6, 6, 7) == u.pttp)
        assert(Vec4(7, 6, 6, 8) == u.pttq)
        assert(Vec4(7, 6, 7, 5) == u.ptps)
        assert(Vec4(7, 6, 7, 6) == u.ptpt)
        assert(Vec4(7, 6, 7, 7) == u.ptpp)
        assert(Vec4(7, 6, 7, 8) == u.ptpq)
        assert(Vec4(7, 6, 8, 5) == u.ptqs)
        assert(Vec4(7, 6, 8, 6) == u.ptqt)
        assert(Vec4(7, 6, 8, 7) == u.ptqp)
        assert(Vec4(7, 6, 8, 8) == u.ptqq)
        assert(Vec4(7, 7, 5, 5) == u.ppss)
        assert(Vec4(7, 7, 5, 6) == u.ppst)
        assert(Vec4(7, 7, 5, 7) == u.ppsp)
        assert(Vec4(7, 7, 5, 8) == u.ppsq)
        assert(Vec4(7, 7, 6, 5) == u.ppts)
        assert(Vec4(7, 7, 6, 6) == u.pptt)
        assert(Vec4(7, 7, 6, 7) == u.pptp)
        assert(Vec4(7, 7, 6, 8) == u.pptq)
        assert(Vec4(7, 7, 7, 5) == u.ppps)
        assert(Vec4(7, 7, 7, 6) == u.pppt)
        assert(Vec4(7, 7, 7, 7) == u.pppp)
        assert(Vec4(7, 7, 7, 8) == u.pppq)
        assert(Vec4(7, 7, 8, 5) == u.ppqs)
        assert(Vec4(7, 7, 8, 6) == u.ppqt)
        assert(Vec4(7, 7, 8, 7) == u.ppqp)
        assert(Vec4(7, 7, 8, 8) == u.ppqq)
        assert(Vec4(7, 8, 5, 5) == u.pqss)
        assert(Vec4(7, 8, 5, 6) == u.pqst)
        assert(Vec4(7, 8, 5, 7) == u.pqsp)
        assert(Vec4(7, 8, 5, 8) == u.pqsq)
        assert(Vec4(7, 8, 6, 5) == u.pqts)
        assert(Vec4(7, 8, 6, 6) == u.pqtt)
        assert(Vec4(7, 8, 6, 7) == u.pqtp)
        assert(Vec4(7, 8, 6, 8) == u.pqtq)
        assert(Vec4(7, 8, 7, 5) == u.pqps)
        assert(Vec4(7, 8, 7, 6) == u.pqpt)
        assert(Vec4(7, 8, 7, 7) == u.pqpp)
        assert(Vec4(7, 8, 7, 8) == u.pqpq)
        assert(Vec4(7, 8, 8, 5) == u.pqqs)
        assert(Vec4(7, 8, 8, 6) == u.pqqt)
        assert(Vec4(7, 8, 8, 7) == u.pqqp)
        assert(Vec4(7, 8, 8, 8) == u.pqqq)
        assert(Vec4(8, 5, 5, 5) == u.qsss)
        assert(Vec4(8, 5, 5, 6) == u.qsst)
        assert(Vec4(8, 5, 5, 7) == u.qssp)
        assert(Vec4(8, 5, 5, 8) == u.qssq)
        assert(Vec4(8, 5, 6, 5) == u.qsts)
        assert(Vec4(8, 5, 6, 6) == u.qstt)
        assert(Vec4(8, 5, 6, 7) == u.qstp)
        assert(Vec4(8, 5, 6, 8) == u.qstq)
        assert(Vec4(8, 5, 7, 5) == u.qsps)
        assert(Vec4(8, 5, 7, 6) == u.qspt)
        assert(Vec4(8, 5, 7, 7) == u.qspp)
        assert(Vec4(8, 5, 7, 8) == u.qspq)
        assert(Vec4(8, 5, 8, 5) == u.qsqs)
        assert(Vec4(8, 5, 8, 6) == u.qsqt)
        assert(Vec4(8, 5, 8, 7) == u.qsqp)
        assert(Vec4(8, 5, 8, 8) == u.qsqq)
        assert(Vec4(8, 6, 5, 5) == u.qtss)
        assert(Vec4(8, 6, 5, 6) == u.qtst)
        assert(Vec4(8, 6, 5, 7) == u.qtsp)
        assert(Vec4(8, 6, 5, 8) == u.qtsq)
        assert(Vec4(8, 6, 6, 5) == u.qtts)
        assert(Vec4(8, 6, 6, 6) == u.qttt)
        assert(Vec4(8, 6, 6, 7) == u.qttp)
        assert(Vec4(8, 6, 6, 8) == u.qttq)
        assert(Vec4(8, 6, 7, 5) == u.qtps)
        assert(Vec4(8, 6, 7, 6) == u.qtpt)
        assert(Vec4(8, 6, 7, 7) == u.qtpp)
        assert(Vec4(8, 6, 7, 8) == u.qtpq)
        assert(Vec4(8, 6, 8, 5) == u.qtqs)
        assert(Vec4(8, 6, 8, 6) == u.qtqt)
        assert(Vec4(8, 6, 8, 7) == u.qtqp)
        assert(Vec4(8, 6, 8, 8) == u.qtqq)
        assert(Vec4(8, 7, 5, 5) == u.qpss)
        assert(Vec4(8, 7, 5, 6) == u.qpst)
        assert(Vec4(8, 7, 5, 7) == u.qpsp)
        assert(Vec4(8, 7, 5, 8) == u.qpsq)
        assert(Vec4(8, 7, 6, 5) == u.qpts)
        assert(Vec4(8, 7, 6, 6) == u.qptt)
        assert(Vec4(8, 7, 6, 7) == u.qptp)
        assert(Vec4(8, 7, 6, 8) == u.qptq)
        assert(Vec4(8, 7, 7, 5) == u.qpps)
        assert(Vec4(8, 7, 7, 6) == u.qppt)
        assert(Vec4(8, 7, 7, 7) == u.qppp)
        assert(Vec4(8, 7, 7, 8) == u.qppq)
        assert(Vec4(8, 7, 8, 5) == u.qpqs)
        assert(Vec4(8, 7, 8, 6) == u.qpqt)
        assert(Vec4(8, 7, 8, 7) == u.qpqp)
        assert(Vec4(8, 7, 8, 8) == u.qpqq)
        assert(Vec4(8, 8, 5, 5) == u.qqss)
        assert(Vec4(8, 8, 5, 6) == u.qqst)
        assert(Vec4(8, 8, 5, 7) == u.qqsp)
        assert(Vec4(8, 8, 5, 8) == u.qqsq)
        assert(Vec4(8, 8, 6, 5) == u.qqts)
        assert(Vec4(8, 8, 6, 6) == u.qqtt)
        assert(Vec4(8, 8, 6, 7) == u.qqtp)
        assert(Vec4(8, 8, 6, 8) == u.qqtq)
        assert(Vec4(8, 8, 7, 5) == u.qqps)
        assert(Vec4(8, 8, 7, 6) == u.qqpt)
        assert(Vec4(8, 8, 7, 7) == u.qqpp)
        assert(Vec4(8, 8, 7, 8) == u.qqpq)
        assert(Vec4(8, 8, 8, 5) == u.qqqs)
        assert(Vec4(8, 8, 8, 6) == u.qqqt)
        assert(Vec4(8, 8, 8, 7) == u.qqqp)
        assert(Vec4(8, 8, 8, 8) == u.qqqq)
    }

    test("Swizzled write") {
        var u = Vec4(1)

        u = Vec4(1); u.x = 5; assert(Vec4(5, 1, 1, 1) == u)
        u = Vec4(1); u.y = 5; assert(Vec4(1, 5, 1, 1) == u)
        u = Vec4(1); u.z = 5; assert(Vec4(1, 1, 5, 1) == u)
        u = Vec4(1); u.w = 5; assert(Vec4(1, 1, 1, 5) == u)

        u = Vec4(1); u.r = 5; assert(Vec4(5, 1, 1, 1) == u)
        u = Vec4(1); u.g = 5; assert(Vec4(1, 5, 1, 1) == u)
        u = Vec4(1); u.b = 5; assert(Vec4(1, 1, 5, 1) == u)
        u = Vec4(1); u.a = 5; assert(Vec4(1, 1, 1, 5) == u)

        u = Vec4(1); u.s = 5; assert(Vec4(5, 1, 1, 1) == u)
        u = Vec4(1); u.t = 5; assert(Vec4(1, 5, 1, 1) == u)
        u = Vec4(1); u.p = 5; assert(Vec4(1, 1, 5, 1) == u)
        u = Vec4(1); u.q = 5; assert(Vec4(1, 1, 1, 5) == u)

        u = Vec4(1); u.xy = Vec2(5, 6); assert(Vec4(5, 6, 1, 1) == u)
        u = Vec4(1); u.xz = Vec2(5, 7); assert(Vec4(5, 1, 7, 1) == u)
        u = Vec4(1); u.xw = Vec2(5, 8); assert(Vec4(5, 1, 1, 8) == u)
        u = Vec4(1); u.yx = Vec2(6, 5); assert(Vec4(5, 6, 1, 1) == u)
        u = Vec4(1); u.yz = Vec2(6, 7); assert(Vec4(1, 6, 7, 1) == u)
        u = Vec4(1); u.yw = Vec2(6, 8); assert(Vec4(1, 6, 1, 8) == u)
        u = Vec4(1); u.zx = Vec2(7, 5); assert(Vec4(5, 1, 7, 1) == u)
        u = Vec4(1); u.zy = Vec2(7, 6); assert(Vec4(1, 6, 7, 1) == u)
        u = Vec4(1); u.zw = Vec2(7, 8); assert(Vec4(1, 1, 7, 8) == u)
        u = Vec4(1); u.wx = Vec2(8, 5); assert(Vec4(5, 1, 1, 8) == u)
        u = Vec4(1); u.wy = Vec2(8, 6); assert(Vec4(1, 6, 1, 8) == u)
        u = Vec4(1); u.wz = Vec2(8, 7); assert(Vec4(1, 1, 7, 8) == u)
        u = Vec4(1); u.xyz = Vec3(5, 6, 7); assert(Vec4(5, 6, 7, 1) == u)
        u = Vec4(1); u.xyw = Vec3(5, 6, 8); assert(Vec4(5, 6, 1, 8) == u)
        u = Vec4(1); u.xzy = Vec3(5, 7, 6); assert(Vec4(5, 6, 7, 1) == u)
        u = Vec4(1); u.xzw = Vec3(5, 7, 8); assert(Vec4(5, 1, 7, 8) == u)
        u = Vec4(1); u.xwy = Vec3(5, 8, 6); assert(Vec4(5, 6, 1, 8) == u)
        u = Vec4(1); u.xwz = Vec3(5, 8, 7); assert(Vec4(5, 1, 7, 8) == u)
        u = Vec4(1); u.yxz = Vec3(6, 5, 7); assert(Vec4(5, 6, 7, 1) == u)
        u = Vec4(1); u.yxw = Vec3(6, 5, 8); assert(Vec4(5, 6, 1, 8) == u)
        u = Vec4(1); u.yzx = Vec3(6, 7, 5); assert(Vec4(5, 6, 7, 1) == u)
        u = Vec4(1); u.yzw = Vec3(6, 7, 8); assert(Vec4(1, 6, 7, 8) == u)
        u = Vec4(1); u.ywx = Vec3(6, 8, 5); assert(Vec4(5, 6, 1, 8) == u)
        u = Vec4(1); u.ywz = Vec3(6, 8, 7); assert(Vec4(1, 6, 7, 8) == u)
        u = Vec4(1); u.zxy = Vec3(7, 5, 6); assert(Vec4(5, 6, 7, 1) == u)
        u = Vec4(1); u.zxw = Vec3(7, 5, 8); assert(Vec4(5, 1, 7, 8) == u)
        u = Vec4(1); u.zyx = Vec3(7, 6, 5); assert(Vec4(5, 6, 7, 1) == u)
        u = Vec4(1); u.zyw = Vec3(7, 6, 8); assert(Vec4(1, 6, 7, 8) == u)
        u = Vec4(1); u.zwx = Vec3(7, 8, 5); assert(Vec4(5, 1, 7, 8) == u)
        u = Vec4(1); u.zwy = Vec3(7, 8, 6); assert(Vec4(1, 6, 7, 8) == u)
        u = Vec4(1); u.wxy = Vec3(8, 5, 6); assert(Vec4(5, 6, 1, 8) == u)
        u = Vec4(1); u.wxz = Vec3(8, 5, 7); assert(Vec4(5, 1, 7, 8) == u)
        u = Vec4(1); u.wyx = Vec3(8, 6, 5); assert(Vec4(5, 6, 1, 8) == u)
        u = Vec4(1); u.wyz = Vec3(8, 6, 7); assert(Vec4(1, 6, 7, 8) == u)
        u = Vec4(1); u.wzx = Vec3(8, 7, 5); assert(Vec4(5, 1, 7, 8) == u)
        u = Vec4(1); u.wzy = Vec3(8, 7, 6); assert(Vec4(1, 6, 7, 8) == u)
        u = Vec4(1); u.xyzw = Vec4(5, 6, 7, 8); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.xywz = Vec4(5, 6, 8, 7); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.xzyw = Vec4(5, 7, 6, 8); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.xzwy = Vec4(5, 7, 8, 6); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.xwyz = Vec4(5, 8, 6, 7); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.xwzy = Vec4(5, 8, 7, 6); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.yxzw = Vec4(6, 5, 7, 8); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.yxwz = Vec4(6, 5, 8, 7); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.yzxw = Vec4(6, 7, 5, 8); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.yzwx = Vec4(6, 7, 8, 5); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.ywxz = Vec4(6, 8, 5, 7); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.ywzx = Vec4(6, 8, 7, 5); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.zxyw = Vec4(7, 5, 6, 8); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.zxwy = Vec4(7, 5, 8, 6); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.zyxw = Vec4(7, 6, 5, 8); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.zywx = Vec4(7, 6, 8, 5); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.zwxy = Vec4(7, 8, 5, 6); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.zwyx = Vec4(7, 8, 6, 5); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.wxyz = Vec4(8, 5, 6, 7); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.wxzy = Vec4(8, 5, 7, 6); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.wyxz = Vec4(8, 6, 5, 7); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.wyzx = Vec4(8, 6, 7, 5); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.wzxy = Vec4(8, 7, 5, 6); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.wzyx = Vec4(8, 7, 6, 5); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.rg = Vec2(5, 6); assert(Vec4(5, 6, 1, 1) == u)
        u = Vec4(1); u.rb = Vec2(5, 7); assert(Vec4(5, 1, 7, 1) == u)
        u = Vec4(1); u.ra = Vec2(5, 8); assert(Vec4(5, 1, 1, 8) == u)
        u = Vec4(1); u.gr = Vec2(6, 5); assert(Vec4(5, 6, 1, 1) == u)
        u = Vec4(1); u.gb = Vec2(6, 7); assert(Vec4(1, 6, 7, 1) == u)
        u = Vec4(1); u.ga = Vec2(6, 8); assert(Vec4(1, 6, 1, 8) == u)
        u = Vec4(1); u.br = Vec2(7, 5); assert(Vec4(5, 1, 7, 1) == u)
        u = Vec4(1); u.bg = Vec2(7, 6); assert(Vec4(1, 6, 7, 1) == u)
        u = Vec4(1); u.ba = Vec2(7, 8); assert(Vec4(1, 1, 7, 8) == u)
        u = Vec4(1); u.ar = Vec2(8, 5); assert(Vec4(5, 1, 1, 8) == u)
        u = Vec4(1); u.ag = Vec2(8, 6); assert(Vec4(1, 6, 1, 8) == u)
        u = Vec4(1); u.ab = Vec2(8, 7); assert(Vec4(1, 1, 7, 8) == u)
        u = Vec4(1); u.rgb = Vec3(5, 6, 7); assert(Vec4(5, 6, 7, 1) == u)
        u = Vec4(1); u.rga = Vec3(5, 6, 8); assert(Vec4(5, 6, 1, 8) == u)
        u = Vec4(1); u.rbg = Vec3(5, 7, 6); assert(Vec4(5, 6, 7, 1) == u)
        u = Vec4(1); u.rba = Vec3(5, 7, 8); assert(Vec4(5, 1, 7, 8) == u)
        u = Vec4(1); u.rag = Vec3(5, 8, 6); assert(Vec4(5, 6, 1, 8) == u)
        u = Vec4(1); u.rab = Vec3(5, 8, 7); assert(Vec4(5, 1, 7, 8) == u)
        u = Vec4(1); u.grb = Vec3(6, 5, 7); assert(Vec4(5, 6, 7, 1) == u)
        u = Vec4(1); u.gra = Vec3(6, 5, 8); assert(Vec4(5, 6, 1, 8) == u)
        u = Vec4(1); u.gbr = Vec3(6, 7, 5); assert(Vec4(5, 6, 7, 1) == u)
        u = Vec4(1); u.gba = Vec3(6, 7, 8); assert(Vec4(1, 6, 7, 8) == u)
        u = Vec4(1); u.gar = Vec3(6, 8, 5); assert(Vec4(5, 6, 1, 8) == u)
        u = Vec4(1); u.gab = Vec3(6, 8, 7); assert(Vec4(1, 6, 7, 8) == u)
        u = Vec4(1); u.brg = Vec3(7, 5, 6); assert(Vec4(5, 6, 7, 1) == u)
        u = Vec4(1); u.bra = Vec3(7, 5, 8); assert(Vec4(5, 1, 7, 8) == u)
        u = Vec4(1); u.bgr = Vec3(7, 6, 5); assert(Vec4(5, 6, 7, 1) == u)
        u = Vec4(1); u.bga = Vec3(7, 6, 8); assert(Vec4(1, 6, 7, 8) == u)
        u = Vec4(1); u.bar = Vec3(7, 8, 5); assert(Vec4(5, 1, 7, 8) == u)
        u = Vec4(1); u.bag = Vec3(7, 8, 6); assert(Vec4(1, 6, 7, 8) == u)
        u = Vec4(1); u.arg = Vec3(8, 5, 6); assert(Vec4(5, 6, 1, 8) == u)
        u = Vec4(1); u.arb = Vec3(8, 5, 7); assert(Vec4(5, 1, 7, 8) == u)
        u = Vec4(1); u.agr = Vec3(8, 6, 5); assert(Vec4(5, 6, 1, 8) == u)
        u = Vec4(1); u.agb = Vec3(8, 6, 7); assert(Vec4(1, 6, 7, 8) == u)
        u = Vec4(1); u.abr = Vec3(8, 7, 5); assert(Vec4(5, 1, 7, 8) == u)
        u = Vec4(1); u.abg = Vec3(8, 7, 6); assert(Vec4(1, 6, 7, 8) == u)
        u = Vec4(1); u.rgba = Vec4(5, 6, 7, 8); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.rgab = Vec4(5, 6, 8, 7); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.rbga = Vec4(5, 7, 6, 8); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.rbag = Vec4(5, 7, 8, 6); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.ragb = Vec4(5, 8, 6, 7); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.rabg = Vec4(5, 8, 7, 6); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.grba = Vec4(6, 5, 7, 8); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.grab = Vec4(6, 5, 8, 7); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.gbra = Vec4(6, 7, 5, 8); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.gbar = Vec4(6, 7, 8, 5); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.garb = Vec4(6, 8, 5, 7); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.gabr = Vec4(6, 8, 7, 5); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.brga = Vec4(7, 5, 6, 8); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.brag = Vec4(7, 5, 8, 6); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.bgra = Vec4(7, 6, 5, 8); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.bgar = Vec4(7, 6, 8, 5); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.barg = Vec4(7, 8, 5, 6); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.bagr = Vec4(7, 8, 6, 5); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.argb = Vec4(8, 5, 6, 7); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.arbg = Vec4(8, 5, 7, 6); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.agrb = Vec4(8, 6, 5, 7); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.agbr = Vec4(8, 6, 7, 5); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.abrg = Vec4(8, 7, 5, 6); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.abgr = Vec4(8, 7, 6, 5); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.st = Vec2(5, 6); assert(Vec4(5, 6, 1, 1) == u)
        u = Vec4(1); u.sp = Vec2(5, 7); assert(Vec4(5, 1, 7, 1) == u)
        u = Vec4(1); u.sq = Vec2(5, 8); assert(Vec4(5, 1, 1, 8) == u)
        u = Vec4(1); u.ts = Vec2(6, 5); assert(Vec4(5, 6, 1, 1) == u)
        u = Vec4(1); u.tp = Vec2(6, 7); assert(Vec4(1, 6, 7, 1) == u)
        u = Vec4(1); u.tq = Vec2(6, 8); assert(Vec4(1, 6, 1, 8) == u)
        u = Vec4(1); u.ps = Vec2(7, 5); assert(Vec4(5, 1, 7, 1) == u)
        u = Vec4(1); u.pt = Vec2(7, 6); assert(Vec4(1, 6, 7, 1) == u)
        u = Vec4(1); u.pq = Vec2(7, 8); assert(Vec4(1, 1, 7, 8) == u)
        u = Vec4(1); u.qs = Vec2(8, 5); assert(Vec4(5, 1, 1, 8) == u)
        u = Vec4(1); u.qt = Vec2(8, 6); assert(Vec4(1, 6, 1, 8) == u)
        u = Vec4(1); u.qp = Vec2(8, 7); assert(Vec4(1, 1, 7, 8) == u)
        u = Vec4(1); u.stp = Vec3(5, 6, 7); assert(Vec4(5, 6, 7, 1) == u)
        u = Vec4(1); u.stq = Vec3(5, 6, 8); assert(Vec4(5, 6, 1, 8) == u)
        u = Vec4(1); u.spt = Vec3(5, 7, 6); assert(Vec4(5, 6, 7, 1) == u)
        u = Vec4(1); u.spq = Vec3(5, 7, 8); assert(Vec4(5, 1, 7, 8) == u)
        u = Vec4(1); u.sqt = Vec3(5, 8, 6); assert(Vec4(5, 6, 1, 8) == u)
        u = Vec4(1); u.sqp = Vec3(5, 8, 7); assert(Vec4(5, 1, 7, 8) == u)
        u = Vec4(1); u.tsp = Vec3(6, 5, 7); assert(Vec4(5, 6, 7, 1) == u)
        u = Vec4(1); u.tsq = Vec3(6, 5, 8); assert(Vec4(5, 6, 1, 8) == u)
        u = Vec4(1); u.tps = Vec3(6, 7, 5); assert(Vec4(5, 6, 7, 1) == u)
        u = Vec4(1); u.tpq = Vec3(6, 7, 8); assert(Vec4(1, 6, 7, 8) == u)
        u = Vec4(1); u.tqs = Vec3(6, 8, 5); assert(Vec4(5, 6, 1, 8) == u)
        u = Vec4(1); u.tqp = Vec3(6, 8, 7); assert(Vec4(1, 6, 7, 8) == u)
        u = Vec4(1); u.pst = Vec3(7, 5, 6); assert(Vec4(5, 6, 7, 1) == u)
        u = Vec4(1); u.psq = Vec3(7, 5, 8); assert(Vec4(5, 1, 7, 8) == u)
        u = Vec4(1); u.pts = Vec3(7, 6, 5); assert(Vec4(5, 6, 7, 1) == u)
        u = Vec4(1); u.ptq = Vec3(7, 6, 8); assert(Vec4(1, 6, 7, 8) == u)
        u = Vec4(1); u.pqs = Vec3(7, 8, 5); assert(Vec4(5, 1, 7, 8) == u)
        u = Vec4(1); u.pqt = Vec3(7, 8, 6); assert(Vec4(1, 6, 7, 8) == u)
        u = Vec4(1); u.qst = Vec3(8, 5, 6); assert(Vec4(5, 6, 1, 8) == u)
        u = Vec4(1); u.qsp = Vec3(8, 5, 7); assert(Vec4(5, 1, 7, 8) == u)
        u = Vec4(1); u.qts = Vec3(8, 6, 5); assert(Vec4(5, 6, 1, 8) == u)
        u = Vec4(1); u.qtp = Vec3(8, 6, 7); assert(Vec4(1, 6, 7, 8) == u)
        u = Vec4(1); u.qps = Vec3(8, 7, 5); assert(Vec4(5, 1, 7, 8) == u)
        u = Vec4(1); u.qpt = Vec3(8, 7, 6); assert(Vec4(1, 6, 7, 8) == u)
        u = Vec4(1); u.stpq = Vec4(5, 6, 7, 8); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.stqp = Vec4(5, 6, 8, 7); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.sptq = Vec4(5, 7, 6, 8); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.spqt = Vec4(5, 7, 8, 6); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.sqtp = Vec4(5, 8, 6, 7); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.sqpt = Vec4(5, 8, 7, 6); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.tspq = Vec4(6, 5, 7, 8); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.tsqp = Vec4(6, 5, 8, 7); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.tpsq = Vec4(6, 7, 5, 8); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.tpqs = Vec4(6, 7, 8, 5); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.tqsp = Vec4(6, 8, 5, 7); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.tqps = Vec4(6, 8, 7, 5); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.pstq = Vec4(7, 5, 6, 8); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.psqt = Vec4(7, 5, 8, 6); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.ptsq = Vec4(7, 6, 5, 8); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.ptqs = Vec4(7, 6, 8, 5); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.pqst = Vec4(7, 8, 5, 6); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.pqts = Vec4(7, 8, 6, 5); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.qstp = Vec4(8, 5, 6, 7); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.qspt = Vec4(8, 5, 7, 6); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.qtsp = Vec4(8, 6, 5, 7); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.qtps = Vec4(8, 6, 7, 5); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.qpst = Vec4(8, 7, 5, 6); assert(Vec4(5, 6, 7, 8) == u)
        u = Vec4(1); u.qpts = Vec4(8, 7, 6, 5); assert(Vec4(5, 6, 7, 8) == u)
    }

    test("Const math") {
        val u = ConstVec4(6, 7, 8, 9)

        assert(Vec4(-6, -7, -8, -9) == -u)

        assert(Vec4(12, 14, 16, 18) == u*2)
        assert(Vec4(12, 14, 16, 18) == 2*u)
        assert(Vec4(3, 3.5f, 4, 4.5f) == u/2)
        assert(Vec4(7/6f, 1, 7/8f, 7/9f) == 7/u)

        val v = ConstVec4(2, 3, 4, 5)

        assert(Vec4(8, 10, 12, 14) == u + v)
        assert(Vec4(4) == u - v)
        assert(Vec4(12, 21, 32, 45) == u*v)
        assert(Vec4(3, 7/3f, 2, 9/5f) == u/v)

        val m4x2 = ConstMat4x2(
            2, 5, 4, 6,
            3, 4, 8, 2
        )
        assert(Vec2(65, 60) == v*m4x2)

        val m4x3 = ConstMat4x3(
            2, 5, 4, 6,
            3, 4, 8, 2,
            7, 4, 2, 5
        )
        assert(Vec3(65, 60, 59) == v*m4x3)

        val m4 = ConstMat4(
            2, 5, 4, 6,
            3, 4, 8, 2,
            7, 4, 2, 5,
            5, 9, 2, 3
        )
        assert(Vec4(65, 60, 59, 60) == v*m4)
    }

    test("Mutable math") {
        var u = Vec4(2, 3, 4, 5)

        u = Vec4(2, 3, 4, 5); u *= 2; assert(Vec4(4, 6, 8, 10) == u)
        u = Vec4(2, 3, 4, 5); u /= 2; assert(Vec4(1, 1.5f, 2, 2.5f) == u)

        u = Vec4(2, 3, 4, 5); u += Vec4(3, 4, 5, 6); assert(Vec4(5, 7, 9, 11) == u)
        u = Vec4(2, 3, 4, 5); u += u; assert(Vec4(4, 6, 8, 10) == u)
        u = Vec4(2, 3, 4, 5); u -= Vec4(2, 3, 4, 5); assert(Vec4(0) == u)
        u = Vec4(2, 3, 4, 5); u -= u; assert(Vec4(0) == u)

        u = Vec4(2, 3, 4, 5); u *= Vec4(5, 10, 15, 2); assert(Vec4(10, 30, 60, 10) == u)
        u = Vec4(2, 3, 4, 5); u *= u; assert(Vec4(4, 9, 16, 25) == u)
        u = Vec4(2, 3, 4, 5); u /= Vec4(2, 6, 2, 2); assert(Vec4(1, 0.5f, 2, 2.5f) == u)
        u = Vec4(2, 3, 4, 5); u /= u; assert(Vec4(1) == u)

        u = Vec4(2, 3, 4, 5); u := Vec4(11, 12, 13, 14); assert(Vec4(11, 12, 13, 14) == u)
        u = Vec4(2, 3, 4, 5); u.set(22, 33, 44, 55); assert(Vec4(22, 33, 44, 55) == u)

        u = Vec4(2, 3, 4, 5)
        val m4 = ConstMat4(
            2, 5, 4, 6,
            3, 4, 8, 2,
            7, 4, 2, 5,
            5, 9, 2, 3
        )
        u *= m4
        assert(Vec4(65, 60, 59, 60) == u)
    }
}
