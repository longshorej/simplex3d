#summary Performance and fine tuning.
#labels Phase-Deploy,User-Guide

[MathLibrary#Guide Index]

= Fine Tuning =

The library relies on JVM to optimise the code for performance. It is highly recommended to enable `-XX:+DoEscapeAnalysis` option on Java6u14 or later versions. This option is enabled by default on recent Java 7 builds.
Escape analysis will make the code written with math library run 1.5 to 4 times faster.

In conjunction with `-XX:+DoEscapeAnalysis`, you can experiment with `-XX:+AggressiveOpts` and `-XX:+UseCompressedOops` options for additional minor performance boost.

== Compiler plugin ==
Initially there was a plan to make a compiler plugin. However after evaluating new JVM switch -XX:+DoEscapeAnalysis the compiler plugin was cancelled.<br/>
Escape analysis seems to eliminate temporary new objects in the critical sections of the code, giving results that are very close to the results with temporary variable management the compiler plugin was supposed to do.<br/>
JVM can optimise code at a lower level and managing temporary valiriables manually or via compiler plugin can interfere with that process causing the code to perform slower in some cases.<br/>
Additionally, JVM will continue to improve as it always does. So even if the compiler plugin is capable of giving marginally better results now, that will not always be the case.

[MathLibrary#Guide Back to Index]